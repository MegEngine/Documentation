# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-15 19:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:2
msgid "megengine.utils.network.NodeFilter"
msgstr ""

#: ../../../../../home/caoxiaowei/.local/lib/python3.7/site-packages/megengine/utils/network.py:docstring of megengine.utils.network.NodeFilter:1
msgid "基类：:class:`object`"
msgstr ""

#: ../../../../../home/caoxiaowei/.local/lib/python3.7/site-packages/megengine/utils/network.py:docstring of megengine.utils.network.NodeFilter:1
msgid "Filter on node iterator. This class is an iterator of :class:`.NetworkNode` objects and multiple filtering conditions and mappers can be chained."
msgstr ""

#: ../../../../../home/caoxiaowei/.local/lib/python3.7/site-packages/megengine/utils/network.py:docstring of megengine.utils.network.NodeFilter:5
msgid "Example::"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:11
msgid "Methods"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`__init__ <megengine.utils.network.NodeFilter.__init__>`\\ \\(node\\_iter\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:0
msgid "param node_iter"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "iterator to :class:`.NetworkNode`, or a"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`as_count <megengine.utils.network.NodeFilter.as_count>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "consume this iterator and get the number of elements"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`as_dict <megengine.utils.network.NodeFilter.as_dict>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "construct an ordered dict to map from node names to objects in this iterator"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`as_list <megengine.utils.network.NodeFilter.as_list>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "consume this iterator and return its content as a list"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`as_unique <megengine.utils.network.NodeFilter.as_unique>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "assert that this iterator yields only one node and return it"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`check_type <megengine.utils.network.NodeFilter.check_type>`\\ \\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "assert that all oprs produced by this iterator are instances of certain type"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`data_provider <megengine.utils.network.NodeFilter.data_provider>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "get :class:`.DataProvider` oprs; shorthand for ``.type(DataProvider)``"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`has_input <megengine.utils.network.NodeFilter.has_input>`\\ \\(var\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "an opr is kept if it has given var as one of its inputs"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`make_all_deps <megengine.utils.network.NodeFilter.make_all_deps>`\\ \\(\\*dest\\_vars\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "make a :class:`NodeFilter` that contains all deps of given vars"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`name <megengine.utils.network.NodeFilter.name>`\\ \\(pattern\\[\\, ignorecase\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "filter by node name"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`not_type <megengine.utils.network.NodeFilter.not_type>`\\ \\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "remove oprs of specific type"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`param_provider <megengine.utils.network.NodeFilter.param_provider>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "get :class:`.ParamProvider` oprs; shorthand for ``.type(ParamProvider)``"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid ":obj:`type <megengine.utils.network.NodeFilter.type>`\\ \\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilter.rst:26:<autosummary>:1
msgid "filter by specific node type"
msgstr ""


msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2021-11-09 13:28+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.Softmax.rst:5
msgid "Softmax"
msgstr ""

#: megengine.module.activation.Softmax:1 of
msgid "Applies a softmax function. Softmax is defined as:"
msgstr ""

#: megengine.module.activation.Softmax:3 of
msgid ""
"\\text{Softmax}(x_{i}) = \\frac{exp(x_i)}{\\sum_j exp(x_j)}\n"
"\n"
msgstr ""

#: megengine.module.activation.Softmax:6 of
msgid ""
"It is applied to all elements along axis, and rescales elements so that "
"they stay in the range `[0, 1]` and sum to 1."
msgstr ""

#: megengine.module.activation.Softmax of
msgid "参数"
msgstr ""

#: megengine.module.activation.Softmax:9 of
msgid ""
"Along which axis softmax will be applied. By default, softmax will apply "
"along the highest ranked axis."
msgstr ""

#: megengine.module.activation.Softmax:13 of
msgid "实际案例"
msgstr ""

#: megengine.module.activation.Softmax:26 of
msgid "Outputs:"
msgstr ""

#~ msgid "基类：:class:`megengine.module.module.Module`"
#~ msgstr "基类：:class:`megengine.module.module.Module`"

#~ msgid "\\text{Softmax}(x_{i}) = \\frac{exp(x_i)}{\\sum_j exp(x_j)}"
#~ msgstr ""

#~ msgid ":obj:`__init__ <megengine.module.Softmax.__init__>`\\ \\(\\[axis\\]\\)"
#~ msgstr ":obj:`__init__ <megengine.module.Softmax.__init__>`\\ \\(\\[axis\\]\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid ""
#~ "\\text{Softmax}(x_{i}) = \\frac{exp(x_i)}{\\sum_j exp(x_j)}\n"
#~ "\n"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid ""
#~ "ext{Softmax}(x_{i}) =\n"
#~ "\n"
#~ msgstr ""

#~ msgid "rac{exp(x_i)}{\\sum_j exp(x_j)}"
#~ msgstr ""

#~ msgid "param axis"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr "例如："

#~ msgid "megengine.module.Softmax"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr ""

#~ msgid ":obj:`apply <megengine.module.Softmax.apply>`\\ \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`buffers <megengine.module.Softmax.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`children <megengine.module.Softmax.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.Softmax.disable_quantize>`\\ \\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr ""

#~ msgid ":obj:`eval <megengine.module.Softmax.eval>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr ""

#~ msgid ":obj:`forward <megengine.module.Softmax.forward>`\\ \\(inputs\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.Softmax.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr ""

#~ msgid ":obj:`modules <megengine.module.Softmax.modules>`\\ \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_buffers <megengine.module.Softmax.named_buffers>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.Softmax.named_children>`\\ \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_modules <megengine.module.Softmax.named_modules>`\\"
#~ " \\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.Softmax.named_parameters>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_tensors <megengine.module.Softmax.named_tensors>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters <megengine.module.Softmax.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.Softmax.register_forward_hook>`\\ \\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.Softmax.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_param <megengine.module.Softmax.replace_param>`\\"
#~ " \\(params\\, start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict <megengine.module.Softmax.state_dict>`\\ "
#~ "\\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`tensors <megengine.module.Softmax.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.Softmax.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr ""

#~ msgid ":obj:`zero_grad <megengine.module.Softmax.zero_grad>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr ""



msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2021-08-18 08:41+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.core.tensor.megbrain_graph.dump_graph.rst:2
msgid "megengine.core.tensor.megbrain\\_graph.dump\\_graph"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:1 of
msgid "serialize the computing graph of `output_vars` and get byte result."
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph of
msgid "参数"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:4 of
msgid "output variables which are the graph's end point."
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:6 of
msgid ""
"level for keeping variable names:  * 0: none of the names are kept * 1: "
"(default)keep names of output vars * 2: keep names of all (output and "
"internal) vars"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:12 of
msgid "whether to keep operator names."
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:14 of
msgid ""
"whether to keep param names, so param values can be easily manipulated "
"after loading model"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:17 of
msgid "whether to keep priority setting for operators"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:18 of
msgid ""
"a string for path or a file handler. if is not None, then the dump "
"information for code strip would be written to ``strip_info_file``"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:20 of
msgid ""
"will be check when `strip_info_file` is not None. if set true, the "
"information for code strip will be append to strip_info_file. if set "
"false, will rewrite strip_info_file"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:26 of
msgid ""
"The underlying C++ API only accepts a var list. If a dict is given, the "
"vars would be renamed to the given names."
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph of
msgid "返回类型"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:29 of
msgid ""
":py:data:`~typing.Tuple`\\[:py:class:`bytes`, "
":py:class:`~megengine.core.tensor.megbrain_graph.CompGraphDumpResult`]"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph of
msgid "返回"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:30 of
msgid ""
"dump result as byte string, and an instance of namedtuple "
":class:`CompGraphDumpResult`, whose fields are:  * ``nr_opr`` number of "
"operators dumped * ``tot_bytes`` total bytes for the whole graph * "
"``tensor_value_bytes`` bytes consumed for dumping tensor values * "
"``inputs`` names of input tensors * ``params`` list of names of dumped "
"params * ``outputs`` names of output vars"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:30 of
msgid ""
"dump result as byte string, and an instance of namedtuple "
":class:`CompGraphDumpResult`, whose fields are:"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:33 of
msgid "``nr_opr`` number of operators dumped"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:34 of
msgid "``tot_bytes`` total bytes for the whole graph"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:35 of
msgid "``tensor_value_bytes`` bytes consumed for dumping tensor values"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:36 of
msgid "``inputs`` names of input tensors"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:37 of
msgid "``params`` list of names of dumped params"
msgstr ""

#: megengine.core.tensor.megbrain_graph.dump_graph:38 of
msgid "``outputs`` names of output vars"
msgstr ""

#~ msgid "level for keeping variable names:"
#~ msgstr ""

#~ msgid "0: none of the names are kept"
#~ msgstr ""

#~ msgid "1: (default)keep names of output vars"
#~ msgstr ""

#~ msgid "2: keep names of all (output and internal) vars"
#~ msgstr ""

#~ msgid ""
#~ "output variables which are the graph's"
#~ " end point.  .. note::      The "
#~ "underlying C++ API only accepts a "
#~ "var list. If a dict is given,"
#~ "     the vars would be renamed to "
#~ "the given names."
#~ msgstr ""

#~ msgid ""
#~ "dump result as byte string, and an"
#~ " instance of namedtuple "
#~ ":class:`CompGraphDumpResult`, whose fields are:"
#~ "      * ``nr_opr`` number of operators "
#~ "dumped     * ``tot_bytes`` total bytes "
#~ "for the whole graph     * "
#~ "``tensor_value_bytes`` bytes consumed for "
#~ "dumping tensor values     * ``inputs`` "
#~ "names of input tensors     * ``params``"
#~ " list of names of dumped params"
#~ "     * ``outputs`` names of output "
#~ "vars"
#~ msgstr ""


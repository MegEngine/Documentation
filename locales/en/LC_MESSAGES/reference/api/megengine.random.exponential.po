# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2024, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.13.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-08 01:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/reference/api/megengine.random.exponential.rst:2
msgid "megengine.random.exponential"
msgstr ""

#: megengine.random.rng.RNG.exponential:1 of
msgid ""
"Random variable with exponential distribution "
":math:`\\operatorname{Exponential}(\\lambda)`. The corresponding "
"probability density function is .. math::"
msgstr ""

#: megengine.random.rng.RNG.exponential:5 of
msgid ""
"for x > 0 and 0 elsewhere. where`rate = lambda`. :type rate: "
":py:data:`~typing.Union`\\[:py:class:`float`, "
":py:class:`~megengine.tensor.Tensor`] :param rate: the lambda parameter "
"of the distribution. Must be non-negative. rate = 1 / scale of the "
"distribution. :type size: "
":py:data:`~typing.Optional`\\[:py:class:`~typing.Iterable`\\[:py:class:`int`]]"
" :param size: the size of output tensor. If scale is a scalar and given "
"size is, e.g., `(m, n)`,"
msgstr ""

#: megengine.random.rng.RNG.exponential:10 of
msgid ""
"then the output shape is `(m, n)`. If scale is a Tensor with shape `(k, "
"v)` and given size is, e.g., `(m, n)`, then the output shape is `(m, n, "
"k, v)`. Default: None."
msgstr ""

#: megengine.random.rng.RNG.exponential of
msgid "返回"
msgstr ""

#: megengine.random.rng.RNG.exponential:13 of
msgid "the output tensor."
msgstr ""

#: megengine.random.rng.RNG.exponential:16 of
msgid "实际案例"
msgstr ""


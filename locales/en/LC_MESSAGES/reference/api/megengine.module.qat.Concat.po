
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 16:12+0800\n"
"PO-Revision-Date: 2021-12-28 12:59+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.qat.Concat.rst:5
msgid "Concat"
msgstr ""

#: megengine.module.qat.concat.Concat:1 of
msgid ""
"A :class:`~.QATModule` to do functional :func:`~.concat` with QAT "
"support. Could be applied with :class:`~.Observer` and "
":class:`~.quantization.fake_quant.FakeQuantize`."
msgstr ""

#~ msgid ""
#~ "基类：:class:`megengine.module.concat.Concat`, "
#~ ":class:`megengine.module.qat.module.QATModule`"
#~ msgstr ""
#~ "基类：:class:`megengine.module.concat.Concat`, "
#~ ":class:`megengine.module.qat.module.QATModule`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.qat.Concat.__init__>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.qat.Concat.__init__>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid ""
#~ "Return a :class:`~.QATModule` instance "
#~ "converted from a float :class:`~.Module` "
#~ "instance."
#~ msgstr "返回从浮点型 :class:`~.Module` 实例转换而来的 :class:`~.QATModule` 实例。"

#~ msgid "megengine.module.qat.Concat"
#~ msgstr ""

#~ msgid ""
#~ "A :class:`~.QATModule` to do functional "
#~ ":func:`~.concat` with QAT support. Could "
#~ "be applied with :class:`~.Observer` and "
#~ ":class:`~.FakeQuantize`."
#~ msgstr ""

#~ msgid "Attributes"
#~ msgstr ""

#~ msgid ":obj:`with_act <megengine.module.qat.Concat.with_act>`\\"
#~ msgstr ""

#~ msgid ":obj:`with_weight <megengine.module.qat.Concat.with_weight>`\\"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr ""

#~ msgid ":obj:`apply <megengine.module.qat.Concat.apply>`\\ \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`apply_quant_activation "
#~ "<megengine.module.qat.Concat.apply_quant_activation>`\\ "
#~ "\\(target\\)"
#~ msgstr ""

#~ msgid "Apply weight's observer and fake_quant from ``qconfig`` on ``target``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`apply_quant_bias "
#~ "<megengine.module.qat.Concat.apply_quant_bias>`\\ \\(target\\,"
#~ " inp\\, w\\_qat\\)"
#~ msgstr ""

#~ msgid "Use :func:`~.fake_quant_bias` to process ``target``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`apply_quant_weight "
#~ "<megengine.module.qat.Concat.apply_quant_weight>`\\ \\(target\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`buffers <megengine.module.qat.Concat.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`children <megengine.module.qat.Concat.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.qat.Concat.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr ""

#~ msgid ":obj:`eval <megengine.module.qat.Concat.eval>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`forward <megengine.module.qat.Concat.forward>`\\ "
#~ "\\(inps\\[\\, axis\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`from_float_module "
#~ "<megengine.module.qat.Concat.from_float_module>`\\ "
#~ "\\(float\\_module\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_activation_dtype "
#~ "<megengine.module.qat.Concat.get_activation_dtype>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Get activation's quantization dtype as the method from ``qconfig``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_activation_qparams "
#~ "<megengine.module.qat.Concat.get_activation_qparams>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Get activation's quantization parameters."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_weight_dtype "
#~ "<megengine.module.qat.Concat.get_weight_dtype>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Get weight's quantization dtype as the method from ``qconfig``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_weight_qparams "
#~ "<megengine.module.qat.Concat.get_weight_qparams>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Get weight's quantization parameters."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.qat.Concat.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`modules <megengine.module.qat.Concat.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.qat.Concat.named_buffers>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.qat.Concat.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.qat.Concat.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.qat.Concat.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.qat.Concat.named_tensors>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters <megengine.module.qat.Concat.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.qat.Concat.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.qat.Concat.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.qat.Concat.replace_param>`\\ \\(params\\, "
#~ "start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_fake_quant "
#~ "<megengine.module.qat.Concat.set_fake_quant>`\\ \\(enable\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_observer <megengine.module.qat.Concat.set_observer>`\\"
#~ " \\(enable\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_qconfig <megengine.module.qat.Concat.set_qconfig>`\\"
#~ " \\(qconfig\\)"
#~ msgstr ""

#~ msgid ""
#~ "Set quantization related configs with "
#~ "``qconfig``, including observer and fake_quant"
#~ " for weight and activation."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict <megengine.module.qat.Concat.state_dict>`\\ "
#~ "\\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`tensors <megengine.module.qat.Concat.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.qat.Concat.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr ""

#~ msgid ":obj:`zero_grad <megengine.module.qat.Concat.zero_grad>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr ""


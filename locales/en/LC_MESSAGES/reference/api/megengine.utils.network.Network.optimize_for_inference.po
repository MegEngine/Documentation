
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-17 20:15+0800\n"
"PO-Revision-Date: 2021-06-03 10:21+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.utils.network.Network.optimize_for_inference.rst:2
msgid "megengine.utils.network.Network.optimize\\_for\\_inference"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:1 of
msgid "Applies optimize_for_inference pass for operator graph."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference of
msgid "param dest_vars"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:3 of
msgid "list of output vars in the operator graph"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference of
msgid "Keyword Arguments"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:9 of
msgid "enable_io16xc32 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:8 of
msgid ""
"whether to use float16 for I/O between oprs and use float32 as internal "
"computation precision. Note the output var would be changed to float16."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:13 of
msgid "enable_ioc16 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:12 of
msgid "whether to use float16 for both I/O and computation precision."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:16 of
msgid "enable_hwcd4 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:16 of
msgid "whether to use NHWCD4 data layout. This is faster on some OpenCL backend."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:19 of
msgid "enable_nchw88 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:19 of
msgid "whether to use NCHW88 data layout, currently used in X86 AVX backend."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:22 of
msgid "enable_nchw44 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:22 of
msgid "whether to use NCHW44 data layout, currently used in arm backend."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:25 of
msgid "enable_nchw44_dot --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:25 of
msgid ""
"whether to use NCHW44_dot data layout, currently used in armv8.2+dotprod "
"backend."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:28 of
msgid "enable_nchw4 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:28 of
msgid ""
"whether to use NCHW4 data layout, currently used in nvidia backend(based "
"on cudnn)."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:31 of
msgid "enable_nchw32 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:31 of
msgid ""
"whether to use NCHW32 data layout, currently used in nvidia backend with "
"tensorcore(based on cudnn)."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:34 of
msgid "enable_chwn4 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:34 of
msgid ""
"whether to use CHWN4 data layout, currently used in nvidia backend with "
"tensorcore."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:38 of
msgid "enable_nchw64 --"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:37 of
msgid ""
"whether to use NCHW64 data layout, used for fast int4 support on Nvidia "
"GPU."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:40 of
msgid "enable_fuse_conv_bias_nonlinearity: whether to fuse conv+bias+nonlinearty"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:41 of
msgid "into one opr."
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:44 of
msgid "enable_fuse_conv_bias_with_z: whether to fuse conv_bias with z"
msgstr ""

#: megengine.utils.network.Network.optimize_for_inference:43 of
msgid ""
"input for inference on nvidia backend(this optimization pass will result "
"in mismatch of the precision of output of training and inference)"
msgstr ""


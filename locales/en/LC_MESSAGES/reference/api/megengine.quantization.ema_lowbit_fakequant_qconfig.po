# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-09 17:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.quantization.ema_lowbit_fakequant_qconfig.rst:2
msgid "megengine.quantization.ema\\_lowbit\\_fakequant\\_qconfig"
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:1 of
msgid ""
"A config class indicating how to do quantize toward "
":class:`~.QATModule`'s ``activation`` and ``weight``. See "
":meth:`~.QATModule.set_qconfig` for detail usage."
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig of
msgid "参数"
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:4 of
msgid ""
"interface to instantiate an :class:`~.Observer` indicating how to collect"
" scales and zero_point of wegiht."
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:6 of
msgid "similar to ``weight_observer`` but toward activation."
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:7 of
msgid ""
"interface to instantiate a :class:`~.FakeQuantize` indicating how to do "
"fake_quant calculation."
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:9 of
msgid "similar to ``weight_fake_quant`` but toward activation."
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:11 of
msgid "Examples:"
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:23 of
msgid ""
"Each parameter is a ``class`` rather than an instance. And we recommand "
"using ``functools.partial`` to add initialization parameters of the "
"``class``, so that don't need to provide parameters in "
":meth:`~.QATModule.set_qconfig`."
msgstr ""

#: ../../docstring megengine.quantization.ema_lowbit_fakequant_qconfig:27 of
msgid ""
"Usually we choose narrow version dtype (like ``qint8_narrow``) for weight"
" related paramters and normal version for activation related ones. For "
"the result of multiplication and addition as ``a * b + c * d``, if four "
"variables are all -128 of dtype ``qint8``, then the result will be "
"``2^15`` and cause overflow. Weights are commonly calculated in this way,"
" so need to narrow qmin to -127."
msgstr ""


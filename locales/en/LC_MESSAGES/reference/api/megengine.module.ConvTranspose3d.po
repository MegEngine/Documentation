
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2021-12-13 15:00+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.ConvTranspose3d.rst:5
msgid "ConvTranspose3d"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:1 of
msgid "Applies a 3D transposed convolution over an input tensor."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:3 of
msgid ""
"Only support the case that groups = 1 and conv_mode = "
"\"cross_correlation\"."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:5 of
msgid ""
":class:`ConvTranspose3d` can be seen as the gradient of :class:`Conv3d` "
"operation with respect to its input."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:8 of
msgid ""
"Convolution3D usually reduces the size of input, while transposed "
"convolution3d works the opposite way, transforming a smaller input to a "
"larger output while preserving the connectivity pattern."
msgstr ""

#: megengine.module.conv.ConvTranspose3d of
msgid "参数"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:13 of
msgid "number of input channels."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:15 of
msgid "number of output channels."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:17 of
msgid ""
"size of weight on spatial dimensions. If ``kernel_size`` is an "
":class:`int`, the actual kernel size would be ``(kernel_size, "
"kernel_size, kernel_size)``."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:21 of
msgid "stride of the 3D convolution operation. Default: 1"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:23 of
msgid ""
"size of the paddings added to the input on all sides of its spatial "
"dimensions. Only zero-padding is supported. Default: 0"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:26 of
msgid "dilation of the 3D convolution operation. Default: 1"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:28 of
msgid ""
"number of groups into which the input and output channels are divided, so"
" as to perform a ``grouped convolution``. When ``groups`` is not 1, "
"``in_channels`` and ``out_channels`` must be divisible by groups, and the"
" shape of weight should be ``(groups, in_channels // groups, out_channels"
" // groups, depth, height, width)``. Default: 1"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:34 of
msgid "wether to add a bias onto the result of convolution. Default: True"
msgstr ""

#: megengine.module.conv.ConvTranspose3d:38 of
msgid ""
"``weight`` usually has shape ``(in_channels, out_channels, depth, height,"
" width)`` ."
msgstr ""

#: megengine.module.conv.ConvTranspose3d:39 of
msgid "``bias`` usually has shape ``(1, out_channels, *1)``"
msgstr ""

#~ msgid ""
#~ ":attr:`weight` usually has shape "
#~ "``(in_channels, out_channels, depth, height, "
#~ "width)``. :attr:`bias` usually has shape "
#~ "``(1, out_channels, *1)``"
#~ msgstr ""

#~ msgid "megengine.module.ConvTranspose3d"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr ""

#~ msgid ":obj:`apply <megengine.module.ConvTranspose3d.apply>`\\ \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`buffers <megengine.module.ConvTranspose3d.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`children <megengine.module.ConvTranspose3d.children>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.ConvTranspose3d.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr ""

#~ msgid ":obj:`eval <megengine.module.ConvTranspose3d.eval>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr ""

#~ msgid ":obj:`forward <megengine.module.ConvTranspose3d.forward>`\\ \\(inp\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.ConvTranspose3d.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`modules <megengine.module.ConvTranspose3d.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.ConvTranspose3d.named_buffers>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.ConvTranspose3d.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.ConvTranspose3d.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.ConvTranspose3d.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.ConvTranspose3d.named_tensors>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters "
#~ "<megengine.module.ConvTranspose3d.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.ConvTranspose3d.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.ConvTranspose3d.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.ConvTranspose3d.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_parameters "
#~ "<megengine.module.ConvTranspose3d.reset_parameters>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "rtype"
#~ msgstr ""

#~ msgid ":py:obj:`None`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict "
#~ "<megengine.module.ConvTranspose3d.state_dict>`\\ \\(\\[rst\\,"
#~ " prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`tensors <megengine.module.ConvTranspose3d.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.ConvTranspose3d.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr ""

#~ msgid ":obj:`zero_grad <megengine.module.ConvTranspose3d.zero_grad>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr ""


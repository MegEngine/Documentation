
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-03 10:50+0800\n"
"PO-Revision-Date: 2021-04-20 08:52+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.functional.transpose.rst:2
msgid "megengine.functional.transpose"
msgstr ""

#: megengine.functional.tensor.transpose:1 of
msgid "Swaps shapes and strides according to given pattern."
msgstr ""

#: megengine.functional.tensor.transpose of
msgid "参数"
msgstr ""

#: megengine.functional.tensor.transpose:3 of
msgid "input tensor."
msgstr ""

#: megengine.functional.tensor.transpose:4 of
msgid ""
"a list of integers including 0, 1, ... , ``ndim``-1, and any number of "
"``'x'`` char in dimensions where this tensor should be broadcasted. For "
"examples:  * (``'x'``) -> make a 0d (scalar) into a 1d vector * (0, 1) ->"
" identity for 2d vectors * (1, 0) -> inverts the first and second "
"dimensions * (``'x'``, 0) -> make a row out of a 1d vector (N to 1xN) * "
"(0, ``'x'``) -> make a column out of a 1d vector (N to Nx1) * (2, 0, 1) "
"-> AxBxC to CxAxB * (0, ``'x'``, 1) -> AxB to Ax1xB * (1, ``'x'``, 0) -> "
"AxB to Bx1xA * (1,) -> this removes dimensions 0. It must be a "
"broadcastable dimension (1xA to A)"
msgstr ""

#: megengine.functional.tensor.transpose:4 of
msgid ""
"a list of integers including 0, 1, ... , ``ndim``-1, and any number of "
"``'x'`` char in dimensions where this tensor should be broadcasted. For "
"examples:"
msgstr ""

#: megengine.functional.tensor.transpose:7 of
msgid "(``'x'``) -> make a 0d (scalar) into a 1d vector"
msgstr ""

#: megengine.functional.tensor.transpose:8 of
msgid "(0, 1) -> identity for 2d vectors"
msgstr ""

#: megengine.functional.tensor.transpose:9 of
msgid "(1, 0) -> inverts the first and second dimensions"
msgstr ""

#: megengine.functional.tensor.transpose:10 of
msgid "(``'x'``, 0) -> make a row out of a 1d vector (N to 1xN)"
msgstr ""

#: megengine.functional.tensor.transpose:11 of
msgid "(0, ``'x'``) -> make a column out of a 1d vector (N to Nx1)"
msgstr ""

#: megengine.functional.tensor.transpose:12 of
msgid "(2, 0, 1) -> AxBxC to CxAxB"
msgstr ""

#: megengine.functional.tensor.transpose:13 of
msgid "(0, ``'x'``, 1) -> AxB to Ax1xB"
msgstr ""

#: megengine.functional.tensor.transpose:14 of
msgid "(1, ``'x'``, 0) -> AxB to Bx1xA"
msgstr ""

#: megengine.functional.tensor.transpose:15 of
msgid ""
"(1,) -> this removes dimensions 0. It must be a broadcastable dimension "
"(1xA to A)"
msgstr ""

#: megengine.functional.tensor.transpose of
msgid "返回"
msgstr ""

#: megengine.functional.tensor.transpose:17 of
msgid "output tensor."
msgstr ""

#: megengine.functional.tensor.transpose:19 of
msgid "Examples:"
msgstr ""

#: megengine.functional.tensor.transpose:30 of
msgid "Outputs:"
msgstr ""

#~ msgid ":py:class:`~megengine.tensor.Tensor`"
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr ""



msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2021-12-13 14:29+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.BatchNorm2d.rst:5
msgid "BatchNorm2d"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:1 of
msgid "Applies Batch Normalization over a 4D tensor."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:3 of
msgid ""
"y = \\frac{x - \\mathrm{E}[x]}{ \\sqrt{\\mathrm{Var}[x] + \\epsilon}} * "
"\\gamma + \\beta"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:7 of
msgid ""
"The mean and standard-deviation are calculated per-dimension over the "
"mini-batches and :math:`\\gamma` and :math:`\\beta` are learnable "
"parameter vectors."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:11 of
msgid ""
"By default, during training this layer keeps running estimates of its "
"computed mean and variance, which are then used for normalization during "
"evaluation. The running estimates are kept with a default "
":attr:`momentum` of 0.9."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:16 of
msgid ""
"If :attr:`track_running_stats` is set to ``False``, this layer will not "
"keep running estimates, batch statistics is used during evaluation time "
"instead."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:20 of
msgid ""
"Because the Batch Normalization is done over the `C` dimension, computing"
" statistics on `(N, H, W)` slices, it's common terminology to call this "
"Spatial Batch Normalization."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:26 of
msgid ""
"The update formula for ``running_mean`` and ``running_var`` (taking "
"``running_mean`` as an example) is"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:28 of
msgid ""
"\\textrm{running_mean} = \\textrm{momentum} \\times "
"\\textrm{running_mean} + (1 - \\textrm{momentum}) \\times "
"\\textrm{batch_mean}"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:32 of
msgid ""
"which could be defined differently in other frameworks. Most notably, "
"``momentum`` of 0.1 in PyTorch is equivalent to ``mementum`` of 0.9 here."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d of
msgid "参数"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:35 of
msgid ""
"usually :math:`C` from an input of shape :math:`(N, C, H, W)` or the "
"highest ranked dimension of an input less than 4D."
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:38 of
msgid "a value added to the denominator for numerical stability. Default: 1e-5"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:40 of
msgid ""
"the value used for the ``running_mean`` and ``running_var`` computation. "
"Default: 0.9"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:42 of
msgid ""
"a boolean value that when set to True, this module has learnable affine "
"parameters. Default: True"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:44 of
msgid ""
"when set to True, this module tracks the running mean and variance. When "
"set to False, this module does not track such statistics and always uses "
"batch statistics in both training and eval modes. Default: True"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:48 of
msgid ""
"when set to True, this module does not update the running mean and "
"variance, and uses the running mean and variance instead of the batch "
"mean and batch variance to normalize the input. The parameter takes "
"effect only when the module is initilized with track_running_stats as "
"True. Default: False"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:55 of
msgid "实际案例"
msgstr ""

#: megengine.module.batchnorm.BatchNorm2d:72 of
msgid "Outputs:"
msgstr ""

#~ msgid "基类：:class:`megengine.module.batchnorm._BatchNorm`"
#~ msgstr "基类：:class:`megengine.module.batchnorm._BatchNorm`"

#~ msgid ""
#~ "This :attr:`momentum` argument is different"
#~ " from one used in optimizer classes"
#~ " and the conventional notion of "
#~ "momentum. Mathematically, the update rule "
#~ "for running statistics here is "
#~ ":math:`\\hat{x}_\\text{new} = \\text{momentum} "
#~ "\\times \\hat{x} + (1 - "
#~ "\\text{momentum}) \\times x_t`, where "
#~ ":math:`\\hat{x}` is the estimated statistic"
#~ " and :math:`x_t` is the new observed"
#~ " value."
#~ msgstr ""
#~ "与在优化器类和传统动量概念中的  :attr:`momentum` 不同， 这里统计特性的更新规则为："
#~ " :math:`\\hat{x}_\\text{new} = (1 - "
#~ "\\text{momentum}) \\times \\hat{x} + "
#~ "\\text{momentum} \\times x_t` ，其中 "
#~ ":math:`\\hat{x}` 是估计的统计特性， :math:`x_t` 是新观测值。"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.BatchNorm2d.__init__>`\\ "
#~ "\\(num\\_features\\[\\, eps\\, momentum\\, ...\\]\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.BatchNorm2d.__init__>`\\ "
#~ "\\(num\\_features\\[\\, eps\\, momentum\\, ...\\]\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid "rtype"
#~ msgstr ""

#~ msgid ":py:obj:`None`"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid "y ="
#~ msgstr ""

#~ msgid ""
#~ "rac{x - \\mathrm{E}[x]}{ \\sqrt{\\mathrm{Var}[x] "
#~ "+ \\epsilon}} * \\gamma + eta"
#~ msgstr ""

#~ msgid ""
#~ "The mean and standard-deviation are "
#~ "calculated per-dimension over the "
#~ "mini-batches and :math:`\\gamma` and "
#~ ":math:`eta` are learnable parameter vectors."
#~ msgstr ""

#~ msgid "type num_features"
#~ msgstr ""

#~ msgid "int"
#~ msgstr ""

#~ msgid "param num_features"
#~ msgstr ""

#~ msgid "type eps"
#~ msgstr ""

#~ msgid "float"
#~ msgstr ""

#~ msgid "param eps"
#~ msgstr ""

#~ msgid "type momentum"
#~ msgstr ""

#~ msgid "param momentum"
#~ msgstr ""

#~ msgid "type affine"
#~ msgstr ""

#~ msgid "bool"
#~ msgstr ""

#~ msgid "param affine"
#~ msgstr ""

#~ msgid "type track_running_stats"
#~ msgstr ""

#~ msgid "param track_running_stats"
#~ msgstr ""

#~ msgid "type freeze"
#~ msgstr ""

#~ msgid "param freeze"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr "例如："

#~ msgid "megengine.module.BatchNorm2d"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr ""

#~ msgid ":obj:`apply <megengine.module.BatchNorm2d.apply>`\\ \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`buffers <megengine.module.BatchNorm2d.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`children <megengine.module.BatchNorm2d.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.BatchNorm2d.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr ""

#~ msgid ":obj:`eval <megengine.module.BatchNorm2d.eval>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr ""

#~ msgid ":obj:`forward <megengine.module.BatchNorm2d.forward>`\\ \\(inp\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.BatchNorm2d.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`modules <megengine.module.BatchNorm2d.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.BatchNorm2d.named_buffers>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.BatchNorm2d.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.BatchNorm2d.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.BatchNorm2d.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.BatchNorm2d.named_tensors>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters <megengine.module.BatchNorm2d.parameters>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.BatchNorm2d.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.BatchNorm2d.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.BatchNorm2d.replace_param>`\\ \\(params\\, "
#~ "start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_parameters "
#~ "<megengine.module.BatchNorm2d.reset_parameters>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_running_stats "
#~ "<megengine.module.BatchNorm2d.reset_running_stats>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict <megengine.module.BatchNorm2d.state_dict>`\\"
#~ " \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`tensors <megengine.module.BatchNorm2d.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.BatchNorm2d.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr ""

#~ msgid ":obj:`zero_grad <megengine.module.BatchNorm2d.zero_grad>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr ""


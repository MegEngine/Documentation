msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-06 13:12+0800\n"
"PO-Revision-Date: 2021-08-17 23:38\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: en\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.utils.network.Network.dump.po\n"
"X-Crowdin-File-ID: 2696\n"

#: ../../source/reference/api/megengine.utils.network.Network.dump.rst:2
msgid "megengine.utils.network.Network.dump"
msgstr ""

#: megengine.utils.network.Network.dump:1 of
msgid "Serializes graph to file."
msgstr ""

#: megengine.utils.network.Network.dump of
msgid "参数"
msgstr ""

#: megengine.utils.network.Network.dump:3 of
msgid "output file, could be file object or filename."
msgstr ""

#: megengine.utils.network.Network.dump:4 of
msgid "whether output is appended to ``file``. Only works when ``file`` is str."
msgstr ""

#: megengine.utils.network.Network.dump:7 of
msgid "level for keeping variable names:  * 0: none of the names are kept * 1: (default)keep names of output vars * 2: keep names of all (output and internal) vars"
msgstr ""

#: megengine.utils.network.Network.dump:13 of
msgid "whether to keep operator names."
msgstr ""

#: megengine.utils.network.Network.dump:15 of
msgid "whether to keep param names, so param values can be easily manipulated after loading model"
msgstr ""

#: megengine.utils.network.Network.dump:18 of
msgid "whether to keep priority setting for operators"
msgstr ""

#: megengine.utils.network.Network.dump:19 of
msgid "a string for path or a file handler. if is not None, then the dump information for code strip would be written to ``strip_info_file``"
msgstr ""

#: megengine.utils.network.Network.dump:21 of
msgid "will be check when `strip_info_file` is not None. if set true, the information for code strip will be append to strip_info_file. if set false, will rewrite strip_info_file"
msgstr ""

#: megengine.utils.network.Network.dump:24 of
msgid "enbale optmizations, will skip all optimize options if this is False. Default: True"
msgstr ""

#: megengine.utils.network.Network.dump of
msgid "Keyword Arguments"
msgstr ""

#: megengine.utils.network.Network.dump:29 of
msgid "See also :py:meth:`optimize_for_inference`."
msgstr ""

#~ msgid "enable_io16xc32 --"
#~ msgstr "enable_io16xc32 --"

#~ msgid ""
#~ "whether to use float16 for I/O "
#~ "between oprs and use float32 as "
#~ "internal computation precision. Note the "
#~ "output var would be changed to "
#~ "float16."
#~ msgstr "是否使用float16作为算子间I/O的数据精度，同时float32作为内部计算的数据精度。注意输出变量的类型也随之更改为float16。"

#~ msgid "enable_ioc16 --"
#~ msgstr "enable_ioc16 --"

#~ msgid "whether to use float16 for both I/O and computation precision."
#~ msgstr "是否使用float16同时作为算子间I/O和内部计算的数据精度。"

#~ msgid "enable_hwcd4 --"
#~ msgstr "enable_hwcd4 --"

#~ msgid ""
#~ "whether to use NHWCD4 data layout. "
#~ "This is faster on some OpenCL "
#~ "backend."
#~ msgstr "是否使用NHWCD4数据格式。在某些OpenCL设备上，会提高计算速度。"

#~ msgid "enable_nchw88 --"
#~ msgstr "enable_nchw88 --"

#~ msgid "whether to use NCHW88 data layout, currently used in X86 AVX backend."
#~ msgstr "是否使用NCHW88数据格式。当前用于X86 AVX后端。"

#~ msgid "enable_nchw44 --"
#~ msgstr "enable_nchw44 --"

#~ msgid "whether to use NCHW44 data layout, currently used in arm backend."
#~ msgstr "是否使用NCHW44数据格式。当前用于arm后端。"

#~ msgid "enable_nchw44_dot --"
#~ msgstr "enable_nchw44_dot --"

#~ msgid ""
#~ "whether to use NCHW44_dot data layout,"
#~ " currently used in armv8.2+dotprod backend."
#~ msgstr "是否使用NCHW4_dot数据格式。当前用于armv8.2+dotprod后端。"

#~ msgid "enable_nchw4 --"
#~ msgstr "enable_nchw4 --"

#~ msgid ""
#~ "whether to use NCHW4 data layout, "
#~ "currently used in nvidia backend(based "
#~ "on cudnn)."
#~ msgstr "是否使用NCHW4数据格式。当前用于nvidia后端（基于cudnn）。"

#~ msgid "enable_nchw32 --"
#~ msgstr "enable_nchw32 --"

#~ msgid ""
#~ "whether to use NCHW32 data layout, "
#~ "currently used in nvidia backend with"
#~ " tensorcore(based on cudnn)."
#~ msgstr "是否使用NCHW32数据格式。当前与tensorcore用于nvidia后端（基于cudnn）。"

#~ msgid "enable_chwn4 --"
#~ msgstr "enable_chwn4 --"

#~ msgid ""
#~ "whether to use CHWN4 data layout, "
#~ "currently used in nvidia backend with"
#~ " tensorcore."
#~ msgstr "是否使用CHWN4数据格式。当前与tensorcore用于nvidia后端。"

#~ msgid ""
#~ "enable_fuse_conv_bias_nonlinearity: whether to fuse"
#~ " conv+bias+nonlinearty"
#~ msgstr "enable_fuse_conv_bias_nonlinearity：是否融合 conv bias nonlinearty 算子"

#~ msgid "into one opr."
#~ msgstr "成一个算子。"

#~ msgid "enable_fuse_conv_bias_with_z: whether to fuse conv_bias with z"
#~ msgstr "enable_fuse_conv_bias_with_z："

#~ msgid ""
#~ "input for inference on nvidia "
#~ "backend(this optimization pass will result "
#~ "in mismatch of the precision of "
#~ "output of training and inference)"
#~ msgstr "推理阶段是否在nvidia后端对输入z融合 CONV + bias 成一个算子（这个优化会导致训练和推理的输出精度不一致）"

#~ msgid "level for keeping variable names:"
#~ msgstr "保留变量名的级别:"

#~ msgid "0: none of the names are kept"
#~ msgstr "0: 不保留任何变量名"

#~ msgid "1: (default)keep names of output vars"
#~ msgstr "1(默认): 保留输出变量的名字"

#~ msgid "2: keep names of all (output and internal) vars"
#~ msgstr "2: 保留所有变量 (包括输出和中间变量) 的名字"


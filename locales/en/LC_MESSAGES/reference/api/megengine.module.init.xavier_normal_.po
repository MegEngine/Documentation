msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-03 10:50+0800\n"
"PO-Revision-Date: 2021-06-03 10:20\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: en\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.init.xavier_normal_.po\n"
"X-Crowdin-File-ID: 2478\n"

#: ../../source/reference/api/megengine.module.init.xavier_normal_.rst:2
msgid "megengine.module.init.xavier\\_normal\\_"
msgstr ""

#: megengine.module.init.xavier_normal_:1 of
msgid "Fills tensor with random values sampled from :math:`\\mathcal{N}(0, \\text{std}^2)` where"
msgstr ""

#: megengine.module.init.xavier_normal_:4 of
msgid "\\text{std} = \\text{gain} \\times \\sqrt{\\frac{2}{\\text{fan_in} + \\text{fan_out}}}\n\n"
msgstr ""

#: megengine.module.init.xavier_normal_:7 of
msgid "Also known as Glorot initialization. Detailed information can be retrieved from `Understanding the difficulty of training deep feedforward neural networks` - Glorot, X. & Bengio, Y. (2010)."
msgstr ""

#: megengine.module.init.xavier_normal_ of
msgid "参数"
msgstr ""

#: megengine.module.init.xavier_normal_:11 of
msgid "tensor to be initialized."
msgstr ""

#: megengine.module.init.xavier_normal_:12 of
msgid "scaling factor for :math:`std`."
msgstr ""

#~ msgid ""
#~ "\\text{std} = \\text{gain} \\times "
#~ "\\sqrt{\\frac{2}{\\text{fan_in} + \\text{fan_out}}}"
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr "返回类型"

#~ msgid ":py:obj:`None`"
#~ msgstr ":py:obj:`None`"

#~ msgid ""
#~ "\\text{std} = \\text{gain} \\times "
#~ "\\sqrt{\\frac{2}{\\text{fan_in} + \\text{fan_out}}}\n"
#~ ""
#~ "\n"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr "参数"

#~ msgid ""
#~ "Fills tensor with random values sampled"
#~ " from :math:`\\mathcal{N}(0,       ext{std}^2)` "
#~ "where"
#~ msgstr ""

#~ msgid ""
#~ "ext{std} =      ext{gain}       imes \\sqrt{\n"
#~ "\n"
#~ msgstr ""

#~ msgid "rac{2}{     ext{fan_in} +   ext{fan_out}}}"
#~ msgstr ""

#~ msgid "param tensor"
#~ msgstr ""

#~ msgid "param gain"
#~ msgstr ""


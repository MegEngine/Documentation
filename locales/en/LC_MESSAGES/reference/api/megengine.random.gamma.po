# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-17 20:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.random.gamma.rst:2
msgid "megengine.random.gamma"
msgstr ""

#: megengine.random.rng.RNG.gamma:1 of
msgid "Random variable with Gamma distribution :math:`\\Gamma(k, \\theta)`."
msgstr ""

#: megengine.random.rng.RNG.gamma:3 of
msgid "The corresponding probability density function is"
msgstr ""

#: megengine.random.rng.RNG.gamma:5 of
msgid ""
"p(x)=x^{k-1} \\frac{e^{-x / \\theta}}{\\theta^{k} \\Gamma(k)}\n"
"\\quad \\text { for } x>0 \\quad k, \\theta>0,\n"
"\n"
msgstr ""

#: megengine.random.rng.RNG.gamma:9 of
msgid "where :math:`\\Gamma(k)` is the gamma function,"
msgstr ""

#: megengine.random.rng.RNG.gamma:11 of
msgid ""
"\\Gamma(k)=(k-1) !  \\quad \\text { for } \\quad k>0.\n"
"\n"
msgstr ""

#: megengine.random.rng.RNG.gamma of
msgid "参数"
msgstr ""

#: megengine.random.rng.RNG.gamma:15 of
msgid ""
"the shape parameter (sometimes designated \"k\") of the distribution. "
"Must be non-negative."
msgstr ""

#: megengine.random.rng.RNG.gamma:18 of
msgid ""
"the scale parameter (sometimes designated \"theta\") of the distribution."
" Must be non-negative. Default: 1"
msgstr ""

#: megengine.random.rng.RNG.gamma:21 of
msgid ""
"the size of output tensor. If shape and scale are scalars and given size "
"is, e.g., `(m, n)`, then the output shape is `(m, n)`. If shape or scale "
"is a Tensor and given size is, e.g., `(m, n)`, then the output shape is "
"`(m, n) + broadcast(shape, scale).shape`. The broadcast rules are "
"consistent with `numpy.broadcast`. Default: None"
msgstr ""

#: megengine.random.rng.RNG.gamma of
msgid "返回"
msgstr ""

#: megengine.random.rng.RNG.gamma:25 of
msgid "the output tensor."
msgstr ""

#: megengine.random.rng.RNG.gamma:27 of
msgid "Examples:"
msgstr ""

#: megengine.random.rng.RNG.gamma:47 of
msgid "Outputs:"
msgstr ""


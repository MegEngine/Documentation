
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-25 02:39+0000\n"
"PO-Revision-Date: 2023-04-21 09:31+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/reference/api/megengine.random.gamma.rst:2
msgid "megengine.random.gamma"
msgstr ""

#: megengine.random.rng.RNG.gamma:1 of
msgid "Random variable with Gamma distribution :math:`\\Gamma(k, \\theta)`."
msgstr ""

#: megengine.random.rng.RNG.gamma:3 of
msgid "The corresponding probability density function is"
msgstr ""

#: megengine.random.rng.RNG.gamma:5 of
msgid ""
"p(x)=x^{k-1} \\frac{e^{-x / \\theta}}{\\theta^{k} \\Gamma(k)}\n"
"\\quad \\text { for } x>0 \\quad k, \\theta>0,"
msgstr ""

#: megengine.random.rng.RNG.gamma:10 of
msgid "where :math:`\\Gamma(k)` is the gamma function,"
msgstr ""

#: megengine.random.rng.RNG.gamma:12 of
msgid ""
"\\Gamma(k)=(k-1) !  \\quad \\text { for } \\quad k \\quad \\text{is "
"positive integer}.\n"
"\n"
msgstr ""

#: megengine.random.rng.RNG.gamma of
msgid "参数"
msgstr ""

#: megengine.random.rng.RNG.gamma:16 of
msgid ""
"the shape parameter (sometimes designated \"k\") of the distribution. "
"Must be positive."
msgstr ""

#: megengine.random.rng.RNG.gamma:20 of
msgid ""
"the scale parameter (sometimes designated \"theta\") of the distribution."
" Must be positive. Default: 1."
msgstr ""

#: megengine.random.rng.RNG.gamma:24 of
msgid ""
"the size of output tensor. If shape and scale are scalars and given size "
"is, e.g., `(m, n)`, then the output shape is `(m, n)`. If shape or scale "
"is a Tensor and given size is, e.g., `(m, n)`, then the output shape is "
"`(m, n) + broadcast(shape, scale).shape`. The broadcast rules are "
"consistent with `numpy.broadcast`. Default: None."
msgstr ""

#: megengine.random.rng.RNG.gamma of
msgid "返回"
msgstr ""

#: megengine.random.rng.RNG.gamma:30 of
msgid "tensor. The random variable with Gamma distribution."
msgstr ""

#: megengine.random.rng.RNG.gamma of
msgid "返回类型"
msgstr ""

#: megengine.random.rng.RNG.gamma:34 of
msgid "实际案例"
msgstr ""

#: megengine.random.rng.RNG.gamma:52 of
msgid "[[7.73875117e-02, 6.06766164e-01],"
msgstr ""

#: megengine.random.rng.RNG.gamma:53 of
msgid "[1.22881927e+01, 8.13445740e+01]]], dtype=float32)"
msgstr ""

#~ msgid ""
#~ "p(x)=x^{k-1} \\frac{e^{-x / \\theta}}{\\theta^{k} \\Gamma(k)}\n"
#~ "\\quad \\text { for } x>0 \\quad k, \\theta>0,\n"
#~ "\n"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr ""

#~ msgid ""
#~ "p(x)=x^{k-1} \\frac{e^{-x / \\theta}}{\\theta^{k} \\Gamma(k)}\n"
#~ "\\quad \\text { for } x>0 \\quad k, \\theta>0，"
#~ msgstr ""

#~ msgid "\\Gamma(k)=(k-1) !  \\quad \\text { for } \\quad k>0。"
#~ msgstr ""

#~ msgid "Outputs:"
#~ msgstr "输出："

#~ msgid ""
#~ "\\Gamma(k)=(k-1) !  \\quad \\text { for } \\quad k>0.\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "the shape parameter (sometimes designated "
#~ "\"k\") of the distribution. Must be "
#~ "non-negative."
#~ msgstr ""

#~ msgid ""
#~ "the scale parameter (sometimes designated "
#~ "\"theta\") of the distribution. Must be"
#~ " non-negative. Default: 1"
#~ msgstr ""

#~ msgid ""
#~ "the size of output tensor. If "
#~ "shape and scale are scalars and "
#~ "given size is, e.g., `(m, n)`, "
#~ "then the output shape is `(m, n)`."
#~ " If shape or scale is a Tensor"
#~ " and given size is, e.g., `(m, "
#~ "n)`, then the output shape is `(m,"
#~ " n) + broadcast(shape, scale).shape`. The"
#~ " broadcast rules are consistent with "
#~ "`numpy.broadcast`. Default: None"
#~ msgstr ""

#~ msgid "the output tensor."
#~ msgstr ""


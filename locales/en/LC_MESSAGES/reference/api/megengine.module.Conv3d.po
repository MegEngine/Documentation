
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-06 13:12+0800\n"
"PO-Revision-Date: 2021-04-22 02:15+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.module.Conv3d.rst:2
msgid "megengine.module.Conv3d"
msgstr ""

#: megengine.module.conv.Conv3d:1 of
msgid "基类：:class:`megengine.module.conv._ConvNd`"
msgstr ""

#: megengine.module.conv.Conv3d:1 of
msgid "Applies a 3D convolution over an input tensor."
msgstr ""

#: megengine.module.conv.Conv3d:3 of
msgid ""
"For instance, given an input of the size :math:`(N, C_{\\text{in}}, T, H,"
" W)`, this layer generates an output of the size :math:`(N, "
"C_{\\text{out}}, T_{\\text{out}}}, H_{\\text{out}}}, W_{\\text{out}}})` "
"through the process described as below:"
msgstr ""

#: megengine.module.conv.Conv3d:8 of
msgid ""
"\\text{out}(N_i, C_{\\text{out}_j}) = \\text{bias}(C_{\\text{out}_j}) +\n"
"\\sum_{k = 0}^{C_{\\text{in}} - 1} \\text{weight}(C_{\\text{out}_j}, k) "
"\\star \\text{input}(N_i, k)"
msgstr ""

#: megengine.module.conv.Conv3d:12 of
msgid ""
"where :math:`\\star` is the valid 3D cross-correlation operator, "
":math:`N` is batch size, :math:`C` denotes number of channels"
msgstr ""

#: megengine.module.conv.Conv3d:16 of
msgid ""
"When `groups == in_channels` and `out_channels == K * in_channels`, where"
" K is a positive integer, this operation is also known as depthwise "
"convolution."
msgstr ""

#: megengine.module.conv.Conv3d:20 of
msgid ""
"In other words, for an input of size :math:`(N, C_{in}, T_{int}, H_{in}, "
"W_{in})`, a depthwise convolution with a depthwise multiplier `K`, can be"
" constructed by arguments :math:`(in\\_channels=C_{in}, "
"out\\_channels=C_{in} \\times K, ..., groups=C_{in})`."
msgstr ""

#: megengine.module.conv.Conv3d of
msgid "参数"
msgstr ""

#: megengine.module.conv.Conv3d:25 of
msgid "number of input channels."
msgstr ""

#: megengine.module.conv.Conv3d:27 of
msgid "number of output channels."
msgstr ""

#: megengine.module.conv.Conv3d:29 of
msgid ""
"size of weight on spatial dimensions. If kernel_size is an :class:`int`, "
"the actual kernel size would be `(kernel_size, kernel_size, "
"kernel_size)`. Default: 1"
msgstr ""

#: megengine.module.conv.Conv3d:33 of
msgid "stride of the 3D convolution operation. Default: 1"
msgstr ""

#: megengine.module.conv.Conv3d:35 of
msgid ""
"size of the paddings added to the input on both sides of its spatial "
"dimensions. Only zero-padding is supported. Default: 0"
msgstr ""

#: megengine.module.conv.Conv3d:38 of
msgid "dilation of the 3D convolution operation. Default: 1"
msgstr ""

#: megengine.module.conv.Conv3d:40 of
msgid ""
"number of groups into which the input and output channels are divided, so"
" as to perform a \"grouped convolution\". When ``groups`` is not 1, "
"``in_channels`` and ``out_channels`` must be divisible by ``groups``, and"
" there would be an extra dimension at the beginning of the weight's "
"shape. Specifically, the shape of weight would be `(groups, out_channel "
"// groups, in_channels // groups, *kernel_size)`."
msgstr ""

#: megengine.module.conv.Conv3d:46 of
msgid "whether to add a bias onto the result of convolution. Default: True"
msgstr ""

#: megengine.module.conv.Conv3d:49 of
msgid "Supports `CROSS_CORRELATION`. Default: `CROSS_CORRELATION`"
msgstr ""

#: megengine.module.conv.Conv3d:52 of
msgid "Examples:"
msgstr ""

#: megengine.module.conv.Conv3d:65 of
msgid "Outputs:"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:11
msgid "Methods"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`__init__ <megengine.module.Conv3d.__init__>`\\ \\(in\\_channels\\, "
"out\\_channels\\, kernel\\_size\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>
msgid "param name"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "module's name, can be initialized by the ``kwargs`` parameter"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`apply <megengine.module.Conv3d.apply>`\\ \\(fn\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Applies function ``fn`` to all the modules within this module, including "
"itself."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`buffers <megengine.module.Conv3d.buffers>`\\ \\(\\[recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Returns an iterable for the buffers of the module."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`calc_conv <megengine.module.Conv3d.calc_conv>`\\ \\(inp\\, "
"weight\\, bias\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`children <megengine.module.Conv3d.children>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Returns an iterable for all the submodules that are direct attributes of "
"this module."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`disable_quantize <megengine.module.Conv3d.disable_quantize>`\\ "
"\\(\\[value\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Sets ``module``'s ``quantize_disabled`` attribute and return ``module``."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`eval <megengine.module.Conv3d.eval>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Sets training mode of all the modules within this module (including "
"itself) to ``False``."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`forward <megengine.module.Conv3d.forward>`\\ \\(inp\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`load_state_dict <megengine.module.Conv3d.load_state_dict>`\\ "
"\\(state\\_dict\\[\\, strict\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Loads a given dictionary created by :func:`state_dict` into this module."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`modules <megengine.module.Conv3d.modules>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Returns an iterable for all the modules within this module, including "
"itself."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`named_buffers <megengine.module.Conv3d.named_buffers>`\\ "
"\\(\\[prefix\\, recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Returns an iterable for key buffer pairs of the module, where ``key`` is "
"the dotted path from this module to the buffer."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`named_children <megengine.module.Conv3d.named_children>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Returns an iterable of key-submodule pairs for all the submodules that "
"are direct attributes of this module, where 'key' is the attribute name "
"of submodules."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`named_modules <megengine.module.Conv3d.named_modules>`\\ "
"\\(\\[prefix\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Returns an iterable of key-module pairs for all the modules within this "
"module, including itself, where 'key' is the dotted path from this module"
" to the submodules."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`named_parameters <megengine.module.Conv3d.named_parameters>`\\ "
"\\(\\[prefix\\, recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Returns an iterable for key :class:`~.Parameter` pairs of the module, "
"where ``key`` is the dotted path from this module to the "
":class:`~.Parameter`."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`parameters <megengine.module.Conv3d.parameters>`\\ "
"\\(\\[recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Returns an iterable for the :class:`~.Parameter` of the module."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`register_forward_hook "
"<megengine.module.Conv3d.register_forward_hook>`\\ \\(hook\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Registers a hook to handle forward results."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`register_forward_pre_hook "
"<megengine.module.Conv3d.register_forward_pre_hook>`\\ \\(hook\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Registers a hook to handle forward inputs."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`replace_param <megengine.module.Conv3d.replace_param>`\\ "
"\\(params\\, start\\_pos\\[\\, seen\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Replaces module's parameters with ``params``, used by "
":class:`~.ParamPack` to speedup multimachine training."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`reset_parameters <megengine.module.Conv3d.reset_parameters>`\\ "
"\\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>
msgid "rtype"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":py:obj:`None`"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`state_dict <megengine.module.Conv3d.state_dict>`\\ \\(\\[rst\\, "
"prefix\\, keep\\_var\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
":obj:`train <megengine.module.Conv3d.train>`\\ \\(\\[mode\\, "
"recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ""
"Sets training mode of all the modules within this module (including "
"itself) to ``mode``."
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid ":obj:`zero_grad <megengine.module.Conv3d.zero_grad>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Conv3d.rst:35:<autosummary>:1
msgid "Sets all parameters' grads to zero"
msgstr ""

#~ msgid ""
#~ "\\text{out}(N_i, C_{\\text{out}_j}) = "
#~ "\\text{bias}(C_{\\text{out}_j}) +\n"
#~ "\\sum_{k = 0}^{C_{\\text{in}} - 1} "
#~ "\\text{weight}(C_{\\text{out}_j}, k) \\star "
#~ "\\text{input}(N_i, k)\n"
#~ "\n"
#~ msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-17 20:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.random.RNG.beta.rst:2
msgid "megengine.random.RNG.beta"
msgstr ""

#: megengine.random.rng.RNG.beta:1 of
msgid ""
"Random variable with Beta distribution "
":math:`\\operatorname{Beta}(\\alpha, \\beta)`."
msgstr ""

#: megengine.random.rng.RNG.beta:3 of
msgid "The corresponding probability density function is"
msgstr ""

#: megengine.random.rng.RNG.beta:5 of
msgid ""
"p(x)=\\frac{1}{\\mathrm{~B}(\\alpha, \\beta)} "
"x^{\\alpha-1}(1-x)^{\\beta-1}\n"
"\\quad \\text { for } \\alpha, \\beta>0,\n"
"\n"
msgstr ""

#: megengine.random.rng.RNG.beta:9 of
msgid "where :math:`\\mathrm{~B}(\\alpha, \\beta)` is the beta function,"
msgstr ""

#: megengine.random.rng.RNG.beta:11 of
msgid ""
"\\mathrm{~B}(\\alpha, \\beta)=\\int_{0}^{1} t^{\\alpha-1}(1-t)^{\\beta-1}"
" d t.\n"
"\n"
msgstr ""

#: megengine.random.rng.RNG.beta of
msgid "参数"
msgstr ""

#: megengine.random.rng.RNG.beta:15 of
msgid "the alpha parameter of the distribution. Must be non-negative."
msgstr ""

#: megengine.random.rng.RNG.beta:17 of
msgid "the beta parameter of the distribution. Must be non-negative."
msgstr ""

#: megengine.random.rng.RNG.beta:19 of
msgid ""
"the size of output tensor. If alpha and beta are scalars and given size "
"is, e.g., `(m, n)`, then the output shape is `(m, n)`. If alpha or beta "
"is a Tensor and given size is, e.g., `(m, n)`, then the output shape is "
"`(m, n) + broadcast(alpha, beta).shape`. The broadcast rules are "
"consistent with `numpy.broadcast`. Default: None"
msgstr ""

#: megengine.random.rng.RNG.beta of
msgid "返回"
msgstr ""

#: megengine.random.rng.RNG.beta:23 of
msgid "the output tensor."
msgstr ""

#: megengine.random.rng.RNG.beta:25 of
msgid "Examples:"
msgstr ""

#: megengine.random.rng.RNG.beta:45 of
msgid "Outputs:"
msgstr ""


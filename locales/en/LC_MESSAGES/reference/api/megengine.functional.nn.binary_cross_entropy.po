msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 13:50+0800\n"
"PO-Revision-Date: 2023-04-11 05:57\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: en\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.nn.binary_cross_entropy.po\n"
"X-Crowdin-File-ID: 7125\n"

#: ../../source/reference/api/megengine.functional.nn.binary_cross_entropy.rst:2
msgid "megengine.functional.nn.binary\\_cross\\_entropy"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:1 of
msgid "Computes the binary cross entropy loss (using logits by default)."
msgstr ""

#: megengine.functional.loss.binary_cross_entropy of
msgid "参数"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:4 of
msgid "`(N, *)`, where `*` means any number of additional dimensions."
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:6 of
msgid "`(N, *)`, same shape as the input."
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:8 of
msgid "bool, whether to apply sigmoid first. Default: True"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:10 of
msgid "the reduction to apply to the output: 'none' | 'mean' | 'sum'."
msgstr ""

#: megengine.functional.loss.binary_cross_entropy of
msgid "返回类型"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:12 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy of
msgid "返回"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:13 of
msgid "loss value."
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:16 of
msgid "实际案例"
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:17 of
msgid "By default(``with_logitis`` is True), ``pred`` is assumed to be logits, class probabilities are given by softmax. It has better numerical stability compared with sequential calls to :func:`~.sigmoid` and :func:`~.binary_cross_entropy`."
msgstr ""

#: megengine.functional.loss.binary_cross_entropy:29 of
msgid "If the ``pred`` value has been probabilities, set ``with_logits`` to False:"
msgstr ""

#~ msgid ""
#~ "By default(``with_logitis`` is True), ``pred``"
#~ " is assumed to be logits, class "
#~ "probabilities are given by sigmoid."
#~ msgstr "默认情况下（``with_logitis`` 为真），``pred`` 被认为是 logits，类的概率将由 sigmoid 计算得出。"

#~ msgid "Outputs:"
#~ msgstr "输出："


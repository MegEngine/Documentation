
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 13:50+0800\n"
"PO-Revision-Date: 2021-06-03 10:20+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.functional.div.rst:2
msgid "megengine.functional.div"
msgstr ""

#: megengine.functional.elemwise.div:1 of
msgid ""
"Calculates the division for each element :math:`x_i` of the input tensor "
":math:`x` with the respective element :math:`y_i` of the input tensor "
":math:`y`."
msgstr ""

#: megengine.functional.elemwise.div of
msgid "参数"
msgstr ""

#: megengine.functional.elemwise.div:4 of
msgid "dividend input tensor. Should have a numeric data type."
msgstr ""

#: megengine.functional.elemwise.div:6 of
msgid ""
"divisor input tensor. Must be compatible with ``x``` (see :ref"
":`broadcasting-rule` ). Should have a numeric data type."
msgstr ""

#: megengine.functional.elemwise.div of
msgid "返回类型"
msgstr ""

#: megengine.functional.elemwise.div:8 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ""

#: megengine.functional.elemwise.div of
msgid "返回"
msgstr ""

#: megengine.functional.elemwise.div:9 of
msgid ""
"A tensor containing the element-wise results. The returned tensor must "
"have a data type determined by :ref:`dtype-promotion`."
msgstr ""

#: megengine.functional.elemwise.div:11 of
msgid "Special cases"
msgstr ""

#: megengine.functional.elemwise.div:13 of
msgid "For floating-point operands,"
msgstr ""

#: megengine.functional.elemwise.div:15 of
msgid "If either :math:`x` or :math:`y` is ``NaN``, the result is ``NaN``."
msgstr ""

#: megengine.functional.elemwise.div:16 of
msgid ""
"If :math:`x` is either ``+infinity`` or ``-infinity`` and :math:`y` is "
"either ``+infinity`` or ``-infinity``, the result is ``NaN``."
msgstr ""

#: megengine.functional.elemwise.div:17 of
msgid ""
"If :math:`x` is either ``+0`` or ``-0`` and :math:`y` is either ``+0`` or"
" ``-0``, the result is ``NaN``."
msgstr ""

#: megengine.functional.elemwise.div:18 of
msgid ""
"If :math:`x` is ``+0`` and :math:`y` is greater than ``0``, the result is"
" ``+0``."
msgstr ""

#: megengine.functional.elemwise.div:19 of
msgid ""
"If :math:`x` is ``-0`` and :math:`y` is greater than ``0``, the result is"
" ``-0``."
msgstr ""

#: megengine.functional.elemwise.div:20 of
msgid ""
"If :math:`x` is ``+0`` and :math:`y` is less than ``0``, the result is "
"``-0``."
msgstr ""

#: megengine.functional.elemwise.div:21 of
msgid ""
"If :math:`x` is ``-0`` and :math:`y` is less than ``0``, the result is "
"``+0``."
msgstr ""

#: megengine.functional.elemwise.div:22 of
msgid ""
"If :math:`x` is greater than ``0`` and :math:`y` is ``+0``, the result is"
" ``+infinity``."
msgstr ""

#: megengine.functional.elemwise.div:23 of
msgid ""
"If :math:`x` is greater than ``0`` and :math:`y` is ``-0``, the result is"
" ``-infinity``."
msgstr ""

#: megengine.functional.elemwise.div:24 of
msgid ""
"If :math:`x` is less than ``0`` and :math:`y` is ``+0``, the result is "
"``-infinity``."
msgstr ""

#: megengine.functional.elemwise.div:25 of
msgid ""
"If :math:`x` is less than ``0`` and :math:`y` is ``-0``, the result is "
"``+infinity``."
msgstr ""

#: megengine.functional.elemwise.div:26 of
msgid ""
"If :math:`x` is ``+infinity`` and :math:`y` is a positive (i.e., greater "
"than ``0``) finite number, the result is ``+infinity``."
msgstr ""

#: megengine.functional.elemwise.div:27 of
msgid ""
"If :math:`x` is ``+infinity`` and :math:`y` is a negative (i.e., less "
"than ``0``) finite number, the result is ``-infinity``."
msgstr ""

#: megengine.functional.elemwise.div:28 of
msgid ""
"If :math:`x` is ``-infinity`` and :math:`y` is a positive (i.e., greater "
"than ``0``) finite number, the result is ``-infinity``."
msgstr ""

#: megengine.functional.elemwise.div:29 of
msgid ""
"If :math:`x` is ``-infinity`` and :math:`y` is a negative (i.e., less "
"than ``0``) finite number, the result is ``+infinity``."
msgstr ""

#: megengine.functional.elemwise.div:30 of
msgid ""
"If :math:`x` is a positive (i.e., greater than ``0``) finite number and "
":math:`y` is ``+infinity``, the result is ``+0``."
msgstr ""

#: megengine.functional.elemwise.div:31 of
msgid ""
"If :math:`x` is a positive (i.e., greater than ``0``) finite number and "
":math:`y` is ``-infinity``, the result is ``-0``."
msgstr ""

#: megengine.functional.elemwise.div:32 of
msgid ""
"If :math:`x` is a negative (i.e., less than ``0``) finite number and "
":math:`y` is ``+infinity``, the result is ``-0``."
msgstr ""

#: megengine.functional.elemwise.div:33 of
msgid ""
"If :math:`x` is a negative (i.e., less than ``0``) finite number and "
":math:`y` is ``-infinity``, the result is ``+0``."
msgstr ""

#: megengine.functional.elemwise.div:34 of
msgid ""
"If :math:`x` and :math:`y` have the same mathematical sign and are both "
"nonzero finite numbers, the result has a positive mathematical sign."
msgstr ""

#: megengine.functional.elemwise.div:35 of
msgid ""
"If :math:`x` and :math:`y` have different mathematical signs and are both"
" nonzero finite numbers, the result has a negative mathematical sign."
msgstr ""

#: megengine.functional.elemwise.div:36 of
msgid ""
"In the remaining cases, where neither ``-infinity``, ``+0``, ``-0``, nor "
"``NaN`` is involved, the quotient must be computed and rounded to the "
"nearest representable value according to IEEE 754-2019 and a supported "
"rounding mode. If the magnitude is too large to represent, the operation "
"overflows and the result is an infinity of appropriate mathematical sign."
" If the magnitude is too small to represent, the operation underflows and"
" the result is a zero of appropriate mathematical sign."
msgstr ""

#: megengine.functional.elemwise.div:40 of
msgid "The ``/`` operator can be used as a shorthand for ``div`` on tensors."
msgstr ""

#: megengine.functional.elemwise.div:44 of
msgid ""
"In Python, ``//`` is the floor division operator and ``/`` is the true "
"division operator. See :func:`~.functional.floor_div`"
msgstr ""

#: megengine.functional.elemwise.div:48 of
msgid "实际案例"
msgstr ""

#~ msgid "Element-wise `(x / y)`."
#~ msgstr ""


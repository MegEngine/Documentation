
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-12 09:02+0800\n"
"PO-Revision-Date: 2021-04-20 08:51+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:2
msgid "megengine.utils.network.NodeFilterNotType"
msgstr ""

#: megengine.utils.network.NodeFilterNotType:1 of
msgid "see :meth:`NodeFilter.not_type`"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:11
msgid "Methods"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`as_count <megengine.utils.network.NodeFilterNotType.as_count>`\\ "
"\\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "consume this iterator and get the number of elements"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`as_dict <megengine.utils.network.NodeFilterNotType.as_dict>`\\ "
"\\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
"construct an ordered dict to map from node names to objects in this "
"iterator"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`as_list <megengine.utils.network.NodeFilterNotType.as_list>`\\ "
"\\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "consume this iterator and return its content as a list"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`as_unique <megengine.utils.network.NodeFilterNotType.as_unique>`\\ "
"\\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "assert that this iterator yields only one node and return it"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`check_type "
"<megengine.utils.network.NodeFilterNotType.check_type>`\\ "
"\\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
"assert that all oprs produced by this iterator are instances of certain "
"type"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`data_provider "
"<megengine.utils.network.NodeFilterNotType.data_provider>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "get :class:`.DataProvider` oprs; shorthand for ``.type(DataProvider)``"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`has_input <megengine.utils.network.NodeFilterNotType.has_input>`\\ "
"\\(var\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "an opr is kept if it has given var as one of its inputs"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`make_all_deps "
"<megengine.utils.network.NodeFilterNotType.make_all_deps>`\\ "
"\\(\\*dest\\_vars\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "make a :class:`NodeFilter` that contains all deps of given vars"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`name <megengine.utils.network.NodeFilterNotType.name>`\\ "
"\\(pattern\\[\\, ignorecase\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "filter by node name"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`not_type <megengine.utils.network.NodeFilterNotType.not_type>`\\ "
"\\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "remove oprs of specific type"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`param_provider "
"<megengine.utils.network.NodeFilterNotType.param_provider>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "get :class:`.ParamProvider` oprs; shorthand for ``.type(ParamProvider)``"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid ""
":obj:`type <megengine.utils.network.NodeFilterNotType.type>`\\ "
"\\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterNotType.rst:50:<autosummary>:1
msgid "filter by specific node type"
msgstr ""

#~ msgid "基类：:class:`megengine.utils.network.NodeFilterType`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`__init__ "
#~ "<megengine.utils.network.NodeFilterNotType.__init__>`\\ "
#~ "\\(node\\_iter\\, node\\_type\\)"
#~ msgstr ""

#~ msgid "param node_iter"
#~ msgstr ""

#~ msgid "iterator to :class:`.NetworkNode`, or a"
#~ msgstr ""



msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2021-11-09 13:28+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.PReLU.rst:5
msgid "PReLU"
msgstr ""

#: megengine.module.activation.PReLU:1 of
msgid "Applies the element-wise function:"
msgstr ""

#: megengine.module.activation.PReLU:3 of
msgid ""
"\\text{PReLU}(x) = \\max(0,x) + a * \\min(0,x)\n"
"\n"
msgstr ""

#: megengine.module.activation.PReLU:6 of
msgid "or"
msgstr ""

#: megengine.module.activation.PReLU:8 of
msgid ""
"\\text{PReLU}(x) =\n"
"\\begin{cases}\n"
"x, & \\text{ if } x \\geq 0 \\\\\n"
"ax, & \\text{ otherwise }\n"
"\\end{cases}\n"
"\n"
msgstr ""

#: megengine.module.activation.PReLU:15 of
msgid ""
"Here :math:`a` is a learnable parameter. When called without arguments, "
"`PReLU()` uses a single paramter :math:`a` across all input channel. If "
"called with `PReLU(num_of_channels)`, each input channle will has it's "
"own :math:`a`."
msgstr ""

#: megengine.module.activation.PReLU of
msgid "参数"
msgstr ""

#: megengine.module.activation.PReLU:19 of
msgid ""
"number of :math:`a` to learn, there is only two values are legitimate: 1,"
" or the number of channels at input. Default: 1"
msgstr ""

#: megengine.module.activation.PReLU:22 of
msgid "the initial value of :math:`a`. Default: 0.25"
msgstr ""

#: megengine.module.activation.PReLU:25 of
msgid "实际案例"
msgstr ""

#: megengine.module.activation.PReLU:36 of
msgid "Outputs:"
msgstr ""

#~ msgid "基类：:class:`megengine.module.module.Module`"
#~ msgstr "基类：:class:`megengine.module.module.Module`"

#~ msgid "\\text{PReLU}(x) = \\max(0,x) + a * \\min(0,x)"
#~ msgstr ""

#~ msgid ""
#~ "\\text{PReLU}(x) =\n"
#~ "\\begin{cases}\n"
#~ "x, & \\text{ if } x \\geq 0 \\\\\n"
#~ "ax, & \\text{ otherwise }\n"
#~ "\\end{cases}"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.PReLU.__init__>`\\ "
#~ "\\(\\[num\\_parameters\\, init\\]\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.PReLU.__init__>`\\ "
#~ "\\(\\[num\\_parameters\\, init\\]\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid ""
#~ "\\text{PReLU}(x) = \\max(0,x) + a * \\min(0,x)\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "\\text{PReLU}(x) =\n"
#~ "\\begin{cases}\n"
#~ "x, & \\text{ if } x \\geq 0 \\\\\n"
#~ "ax, & \\text{ otherwise }\n"
#~ "\\end{cases}\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "ext{PReLU}(x) = \\max(0,x) + a * \\min(0,x)\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "ext{PReLU}(x) =\n"
#~ "egin{cases}\n"
#~ "x, &    ext{ if } x \\geq 0 \\\n"
#~ "ax, &   ext{ otherwise }\n"
#~ "\\end{cases}\n"
#~ "\n"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr "例如："

#~ msgid "megengine.module.PReLU"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr ""

#~ msgid ":obj:`apply <megengine.module.PReLU.apply>`\\ \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ":obj:`buffers <megengine.module.PReLU.buffers>`\\ \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr ""

#~ msgid ":obj:`children <megengine.module.PReLU.children>`\\ \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.PReLU.disable_quantize>`\\ \\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr ""

#~ msgid ":obj:`eval <megengine.module.PReLU.eval>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr ""

#~ msgid ":obj:`forward <megengine.module.PReLU.forward>`\\ \\(inputs\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.PReLU.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr ""

#~ msgid ":obj:`modules <megengine.module.PReLU.modules>`\\ \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_buffers <megengine.module.PReLU.named_buffers>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_children <megengine.module.PReLU.named_children>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_modules <megengine.module.PReLU.named_modules>`\\"
#~ " \\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.PReLU.named_parameters>`\\ \\(\\[prefix\\, "
#~ "recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_tensors <megengine.module.PReLU.named_tensors>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters <megengine.module.PReLU.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.PReLU.register_forward_hook>`\\ \\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.PReLU.register_forward_pre_hook>`\\ \\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_param <megengine.module.PReLU.replace_param>`\\"
#~ " \\(params\\, start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict <megengine.module.PReLU.state_dict>`\\ "
#~ "\\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ":obj:`tensors <megengine.module.PReLU.tensors>`\\ \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.PReLU.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr ""

#~ msgid ":obj:`zero_grad <megengine.module.PReLU.zero_grad>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr ""


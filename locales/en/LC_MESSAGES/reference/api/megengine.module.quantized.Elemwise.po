
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2021-11-09 13:29+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.quantized.Elemwise.rst:5
msgid "Elemwise"
msgstr ""

#: megengine.module.quantized.elemwise.Elemwise:1 of
msgid "Quantized version of :class:`~.qat.Elemwise`."
msgstr ""

#: megengine.module.quantized.elemwise.Elemwise.from_qat_module:1 of
msgid ""
"Return a :class:`~.QuantizedModule` instance converted from a "
":class:`~.QATModule` instance."
msgstr ""

#~ msgid "基类：:class:`megengine.module.quantized.module.QuantizedModule`"
#~ msgstr "基类：:class:`megengine.module.quantized.module.QuantizedModule`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.quantized.Elemwise.__init__>`\\"
#~ " \\(method\\[\\, dtype\\]\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.quantized.Elemwise.__init__>`\\"
#~ " \\(method\\[\\, dtype\\]\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid "megengine.module.quantized.Elemwise"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr ""

#~ msgid ":obj:`apply <megengine.module.quantized.Elemwise.apply>`\\ \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`buffers <megengine.module.quantized.Elemwise.buffers>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`children <megengine.module.quantized.Elemwise.children>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.quantized.Elemwise.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr ""

#~ msgid ":obj:`eval <megengine.module.quantized.Elemwise.eval>`\\ \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`forward <megengine.module.quantized.Elemwise.forward>`\\"
#~ " \\(\\*inps\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`from_qat_module "
#~ "<megengine.module.quantized.Elemwise.from_qat_module>`\\ "
#~ "\\(qat\\_module\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.quantized.Elemwise.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`modules <megengine.module.quantized.Elemwise.modules>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.quantized.Elemwise.named_buffers>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.quantized.Elemwise.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.quantized.Elemwise.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.quantized.Elemwise.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.quantized.Elemwise.named_tensors>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters "
#~ "<megengine.module.quantized.Elemwise.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.quantized.Elemwise.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.quantized.Elemwise.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.quantized.Elemwise.replace_param>`\\ "
#~ "\\(params\\, start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict "
#~ "<megengine.module.quantized.Elemwise.state_dict>`\\ \\(\\[rst\\,"
#~ " prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`tensors <megengine.module.quantized.Elemwise.tensors>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.quantized.Elemwise.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`zero_grad "
#~ "<megengine.module.quantized.Elemwise.zero_grad>`\\ \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr ""


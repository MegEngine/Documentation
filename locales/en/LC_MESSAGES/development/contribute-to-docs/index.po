# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-17 20:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/development/contribute-to-docs/index.rst:5
msgid "如何为文档做贡献"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:21
msgid "GitHub 地址：https://github.com/MegEngine/Documentation （欢迎 Star～）"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:23
msgid "MegEngine 文档的贡献者大致可参考以下几个方向（由易到难）："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:25
msgid ""
"在 MegEngine/Documentation `Issues "
"<https://github.com/MegEngine/Documentation/issues>`_ 或 `论坛 "
"<https://discuss.megengine.org.cn/c/33-category/33>`_ 中提供各种各样建设性的意见；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:27
msgid "更正文档中的拼写错误（Typographical error，简称 Typo）或格式错误（Format error）；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:28
msgid "更正文档中的其它类型错误，需要详细说明理由，方便进行讨论和采纳；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:29
msgid "帮助我们进行对 Python API 源码中 Docstring 的翻译，参考 :ref:`translation` ；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:30
msgid "帮助我们将中文文档内容翻译成对应的英文版本，参考 :ref:`translation` ；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:31
msgid "帮助我们补充完善 :ref:`文档内容 <doc-content>` ，比如教程和指南，不断追求更高的质量。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:33
msgid ""
"你也可以浏览处于 Open 状态的 `Issues "
"<https://github.com/MegEngine/Documentation/issues>`_ 列表，从里面接下任务或找到一些灵感。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:39
msgid "非开发人员的贡献方式"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:41
msgid ""
"如果你发现了文档中一些很容易改正的细节错误（比如错字、格式不正确等）， 但没有 GitHub 账号，或者不熟悉 MegEngine 文档的 "
":ref:`github-collaborate` ， 觉得 Fork & Pull Request 等流程过于麻烦， 则可以通过 "
"Issues、交流群和论坛等官方渠道友好地提出来，由我们负责进行后续处理。 我们会在对应的 Commit 中将你以共同作者（Co-"
"author）的形式加入历史记录："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:55
msgid "这样的方法虽然简单直接，但 MegEngine 团队不能保证处理此类 Issues 的优先级。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:57
msgid "俗话说得好：“众人拾柴火焰高”，快来尝试一下吧～ n(\\*≧▽≦\\*)n"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:61
msgid "请勿将对文档（Documentation）的 Issues 提交到 MegEngine/MegEngine 存储库。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:64
msgid "开发者的贡献方式"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:67
msgid "开发环境设置"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:71
msgid ""
"如果你曾经使用 Sphinx 构建过 Python 项目的文档，想必会对下面展示的源码结构非常熟悉。 "
"有的时候，为了在本地预览自己的改动效果，我们需要学会 :ref:`how-to-build-the-doc-locally` 。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:73
msgid ""
"你也可以根据自身情况，选择使用 `Gitpod "
"<https://gitpod.io/#prebuild/https://github.com/MegEngine/Documentation>`_"
" 等类型的云 IDE 来创建一个临时的文档开发环境，但这需要连接到 GitHub 帐户，且会对你的网络环境有一定的要求。 "
"另外由于空间限制，将不会安装 MegEngine 包，因此仅支持使用 MINI 模式来生成除 API Reference 外的文档。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:78
msgid "源码组织逻辑"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:80
msgid "MegEngine 文档的源码结构如下："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:113
msgid ""
"与常见的软件文档 “以英文撰写原文，后续提供多语言翻译” 的逻辑不同， MegEngine 文档默认以中文作为原稿，后续提供其它语言的翻译版本。 "
"但由于 Python Docstring 属于源代码注释的一部分，而代码注释提倡用英文撰写， 因此 MegEngine 的 Python API "
"文档将先从源代码提取出英文 Docstring， 再通过翻译对应的 ``locales/zh-"
"CN/LC_MESSAGES/reference/api/*.po`` 文件变为中文。 （参考 :ref:`translation` ）"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:122
msgid ""
"为了支持内容的自定义排序，MegEngine 的 :ref:`megengine-reference` "
"是通过列举而非自动生成的形式添加到文档中的， 如果你需要在文档中预览 API, 则需要参考已有 API 的分类组织方式，编辑对应的 "
"``source/reference/*.rst`` 文件。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:125
msgid ""
"比如 ``funtional.add`` 位于 ``source/reference/functional.rst`` 的 Arithmetic "
"operations 分类。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:127
msgid ""
"新增 API 不应该出现在当前版本的文档中，所以在验证无误后，请提交到文档的 dev 分支， 与 MegEngine 的 master "
"分支对应。（如果更新了适用于新版本的教程或用户指南，方法同理。）"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:133
msgid "内容分类逻辑"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:135
msgid "MegEngine 的文档主要包括以下方面的内容："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:137
msgid "教程（Tutorial）：指导读者通过一系列步骤完成项目（或有意义的练习）的课程；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:138
msgid "指南（Guide）：引导读者完成解决常见问题所需步骤的指南（How-to 系列）；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:139
msgid "参考（Reference）：用于 API 查询和浏览，方便网络引擎检索的百科全书；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:140
msgid "解释（Explaination）：对于特定主题、特性的概念性说明。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:142
msgid "下面这张表格有助于我们理解它们之间的区别："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:145
msgid "学习阶段"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:145
msgid "使用阶段"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:147
msgid "实践步骤"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:147
msgid "教程 🤔"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:147
msgid "指南 📖"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:149
msgid "理论知识"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:149
msgid "解释 📝"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:149
msgid "参考 📚"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:153
msgid "更多细节请参考 :ref:`megengine-document-style-guide` 。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:158
msgid "GitHub 协作流程"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:160
msgid "高效清晰的沟通是合作的前提，标准的 MegEngine 文档协作流程如下："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:162
msgid "创建一个 Issue，讨论接下来你打算进行什么样的尝试，交流想法；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:163
msgid "一旦确定了初步方案，Fork 并 Clone 存储库，创建一个新的本地分支；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:164
msgid ""
"参照 :ref:`风格指南 <megengine-document-style-guide>` 和 :ref:`语法规范 "
"<restructuredtext>` 修改代码或文本，:ref:`在本地构建与预览文档 <how-to-build-the-doc-"
"locally>` ；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:166
msgid "按照 :ref:`格式要求 <commit-message>` 记录 Commit 信息（需要使用 GitHub 账号）；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:167
msgid "确认所有改动符合预期后，Push 到你 Fork 的远端分支（Origin）；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:168
msgid "在 GitHub 创建一个 Pull Request 并向上游（Upstream）发起合并请求；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:169
msgid "根据 Review 意见进行交流，根据需求在 Pull Request 中提交后续修改；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:170
msgid "当你的分支被合并了，便可以删除对应的本地和远程分支。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:172
msgid "我们还提供了更加详细的 :ref:`pull-request-guide` （里面的规则适用于 MegEngine ）。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:176
msgid ""
"要求首先创建 Issue 进行讨论的原因是希望避免一些突如其来的 Pull Request 做无用功； "
"而具备一定经验的核心开发者可以直接提供一个草稿版本的 Pull Request 直接进行后续的讨论。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:182
msgid "持续集成 & 部署逻辑"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:184
msgid "当你在本地的修改已经完成后，可以通过发起 Pull Request 来触发持续集成。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:191
msgid ""
"借助于 `Build "
"<https://github.com/MegEngine/Documentation/actions/workflows/build.yml>`_"
" 工作流， 我们可以对整个文档的构建过程进行检查，确保能够正常生成整个文档网站。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:193
msgid ""
"如果整个工作流成功执行完，你会在 `Actions "
"<https://github.com/MegEngine/Documentation/actions>`_ 对应的 workflow runs "
"结果页面中找到临时生成的构件（Artifacts）， 里面是 HTML 形式生成的整个文档网站的压缩包，可以下载到本地后解压预览。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:196
msgid "同时，Gitpod Bot 也会为你的 Pull Request 提供一个云端 IDE 环境，并自动完成初始化和预览。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:197
msgid "Pull Request 被合并到主分支后，将完成后续的部署，在下一次官网更新时能看到你的改动。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:200
msgid "Pull Request 如何被合并"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:202
msgid "我们为 ``main`` 分支启用了保护规则，满足以下条件的 Pull Request 才能被成功合并（Merge）："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:204
msgid "必须签署贡献者协议（Contributor License Agreement，简称 CLA）；"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:205
msgid "必须至少有一位官方维护人员审核（Review）完成并批准（Approve）了你的所有代码"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:206
msgid ""
"必须通过 Actions 中触发的状态检查（Status check），如 `Build "
"<https://github.com/MegEngine/Documentation/actions/workflows/build.yml>`_"
" ."
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:208
msgid "必须将你的 Commits 历史记录整理为线性，消息内容符合 :ref:`commit-message` 。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:212
msgid ""
"签署 CLA 协议要求 commit 中所记录的 Author 账户都是 GitHub 上的账户。 如果你默认使用了非 GitHub "
"账户，需要使用 ``git config`` 命令单独配置。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:215
msgid "官网文档页面的更新将会有一定的处理流程延迟，请耐心等待官网服务器更新文档内容。"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:218
msgid "官方文档维护人员"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:220
msgid "当代码需要找人审核时，可以从下面的人员名单中进行选择："
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:222
msgid "整体内容：Chai_ , xxr_ , `Dash Chen`_"
msgstr ""

#: ../../source/development/contribute-to-docs/index.rst:223
msgid "文档架构：Chai_"
msgstr ""

#~ msgid "教程（Tutorial）：可从零开始完整跑通的教学性材料，适合快速上手"
#~ msgstr ""

#~ msgid "指南（Guide）：针对特定情景/特定功能进行详细说明的操作手册"
#~ msgstr ""

#~ msgid "参考（Reference）：用于 API 查询和浏览，方便网络引擎检索的字典"
#~ msgstr ""

#~ msgid "**请不要突然直接发起一个 Pull Request!!!**"
#~ msgstr ""

#~ msgid "修改代码，:ref:`提交 Commit <commit-message>` 并 Push 到你 Fork 的远端分支（Origin）；"
#~ msgstr ""

#~ msgid "在 GitHub 创建一个 Pull Request 并向上游（Upstream）申请将其合并；"
#~ msgstr ""

#~ msgid "必须通过 Actions 中触发的状态检查（Status check），如 Sphinx Build and Test."
#~ msgstr ""

#~ msgid ""
#~ "当 Pull Request 被成功合入 ``main`` 分支，将自动触发"
#~ " ``gh-pages`` 分支上的部署流程。 ``gh-pages`` "
#~ "分支将被用于 GitHub Pages 静态网站服务的部署， 可作为 "
#~ "MegEngine 官网由于不可抗力等因素无法访问时的镜像站点。"
#~ msgstr ""

#~ msgid "主题相关：Chai_ （上游主题 Pydata 的研发请直接向上游负责人员反馈）"
#~ msgstr ""

#~ msgid "在 MegEngine/Documentation Issues 或论坛中提供各种各样建设性的意见；"
#~ msgstr ""

#~ msgid "帮助我们补充完善 :ref:`文档内容 <doc-content>` ，比如提供大家都需要的教程，不断追求更高的质量。"
#~ msgstr ""

#~ msgid ""
#~ "如果你发现了文档中一些很容易改正的细节错误（比如错字、格式不正确等）， 但不熟悉 MegEngine "
#~ "文档的 :ref:`github-collaborate` ，觉得提 Pull "
#~ "Request 太麻烦， 则可以通过 "
#~ "Issues、交流群和论坛等渠道友好地提出来，由我们负责进行后续处理， 并在对应的 Commit "
#~ "中将你以共同作者（Co-author）的形式加入历史记录："
#~ msgstr ""

#~ msgid ""
#~ "与常见的软件文档 “以英文撰写原文，后续提供多语言翻译” 的逻辑不同， MegEngine "
#~ "文档默认以中文作为原稿，后续提供其它语言的翻译版本。 但由于 Python Docstring "
#~ "属于源代码注释的一部分，而代码注释提倡用英文撰写， 因此 MegEngine 的 "
#~ "Python API 文档将先从源代码提取出英文 Docstring， 再通过翻译对应的"
#~ " ``locales/zh-CN/LC_MESSAGES/reference/api/*.po`` "
#~ "文件变为中文。"
#~ msgstr ""

#~ msgid ""
#~ "如果你曾经使用 Sphinx 构建过 Python "
#~ "项目的文档，想必会对上面的源码结构非常熟悉。 有的时候，为了在本地预览自己的改动效果，我们需要学会 :ref"
#~ ":`how-to-build-the-doc-locally` 。"
#~ msgstr ""

#~ msgid "Git 协作流程"
#~ msgstr ""

#~ msgid "修改代码，记录 :ref:`Commit <commit-message>` 并 Push 到你 Fork 的远端分支（Origin）；"
#~ msgstr ""

#~ msgid "在 GitHub 创建一个 Pull Request 并向上游（Upstream）发起合并申请；"
#~ msgstr ""

#~ msgid "根据 Review 意见进行交流，如有需要则修改你的代码；"
#~ msgstr ""

#~ msgid "借助 CI 预览更新后的文档"
#~ msgstr ""

#~ msgid "如果你对文档的内容修改较多，建议参考 :ref:`how-to-build-the-doc-locally` 。"
#~ msgstr ""

#~ msgid ""
#~ "CI 默认使用 pip 安装的 Wheel 包来构建文档，所以不适用于 "
#~ ":ref:`Python 文档字符串 <python-docstring-style-"
#~ "guide>` 更新。"
#~ msgstr ""

#~ msgid ""
#~ "**当你在本地的修改已经完成后** ，可以通过发起 Pull Request 来触发 "
#~ "GitHub Actions. 借助于 `Build "
#~ "<https://github.com/MegEngine/Documentation/actions/workflows/build.yml>`_"
#~ " 工作流， 我们可以对整个文档的构建过程进行检查，确保能够正常生成整个文档网站。 "
#~ "当整个工作流成功执行完，你会在 `Actions "
#~ "<https://github.com/MegEngine/Documentation/actions>`_ 对应的 "
#~ "workflow runs 结果页面中找到临时生成的构件（Artifacts）， 里面是 "
#~ "HTML 形式生成的整个文档网站的压缩包，你可以下载到本地后解压并进行预览。"
#~ msgstr ""

#~ msgid "我们为 ``main`` 分支启用了保护规则，满足以下条件的 Pull Request 才能被成功 Merge:"
#~ msgstr ""

#~ msgid "必须将你的 Commits 历史记录整理为线性，消息内容符合 `规范 <commit-message>`_."
#~ msgstr ""

#~ msgid "架构相关：Chai_"
#~ msgstr ""

#~ msgid "主题相关：Chai_ （上游主题 Pydata 相关问题请直接向上游库开发者反馈）"
#~ msgstr ""

#~ msgid "教程相关：Chai_"
#~ msgstr ""

#~ msgid "文档相关：Chai_"
#~ msgstr ""


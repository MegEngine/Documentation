msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2023-04-21 09:36\n"
"Last-Translator: \n"
"Language-Team: English\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: en\n"
"X-Crowdin-File: /dev/locales/en/LC_MESSAGES/user-guide/model-development/data/collator.po\n"
"X-Crowdin-File-ID: 9947\n"
"Language: en_US\n"

#: ../../source/user-guide/model-development/data/collator.rst:5
msgid "使用 Collator 定义合并策略"
msgstr "Use Collator to define a merge strategy"

#: ../../source/user-guide/model-development/data/collator.rst:9
msgid "在使用 ``DataLoader`` 获取批数据的整个流程中， ``Collator`` 负责合并样本，最终得到批数据。"
msgstr "In the whole process of using ``DataLoader`` to obtain batch data, ``Collator`` is responsible for merging samples and finally obtaining batch data."

#: ../../source/user-guide/model-development/data/collator.rst:13
msgid "通常用户不用实现自己的 ``Collator``, 使用默认合并策略就可以处理大部分批数据合并的情况。 但遇到一些默认合并策略难以处理的情景时，用户可以使用自己实现的 ``Collator``. 参考 :ref:`custom-collator`."
msgstr "Generally, users do not need to implement their own ``Collator``, and can handle most batch data merging situations by using the default merge strategy. But when encountering some situations that the default merge strategy is difficult to handle, users can use the ``Collator`` implemented by themselves. Refer to :ref:`custom-collator`."

#: ../../source/user-guide/model-development/data/collator.rst:19
msgid "``Collator`` 仅适用于 Map-style 的数据集，因为 Iterable-style 数据集的批数据必然是逐个合并的。"
msgstr "``Collator`` is only applicable to Map-style data sets, because batch data of Iterable-style data sets must be merged one by one."

#: ../../source/user-guide/model-development/data/collator.rst:22
msgid "默认合并策略"
msgstr "Default merge strategy"

#: ../../source/user-guide/model-development/data/collator.rst:24
msgid "经过前面的处理流程后， ``Collator`` 通常会接收到一个列表："
msgstr "After the previous processing flow, ``Collator`` usually receives a list："

#: ../../source/user-guide/model-development/data/collator.rst:26
msgid "如果你的 ``Dataset`` 子类的 ``__getitem__`` 方法返回的是单个元素，则 ``Collator`` 得到一个普通列表；"
msgstr "__getitem__`` method of your ``Dataset`` subclass returns a single element, then ``Collator`` will get a normal list;"

#: ../../source/user-guide/model-development/data/collator.rst:27
msgid "如果你的 ``Dataset`` 子类的 ``__getitem__`` 方法返回的是一个元组，则 ``Collator`` 得到一个元组列表。"
msgstr "__getitem__`` method of your ``Dataset`` subclass returns a tuple, then ``Collator`` gets a list of tuples."

#: ../../source/user-guide/model-development/data/collator.rst:29
msgid "MegEngine 中使用 :py:class:`~.Collator` 作为默认实现，通过调用 ``apply`` 方法来将列表数据合并成批数据："
msgstr "MegEngine used: py: class: `~ .Collator` implemented as a default, by calling the method` `apply`` combined bulk data list data："

#: ../../source/user-guide/model-development/data/collator.rst:34
msgid "其实现逻辑中使用 :py:func:`numpy.stack` 函数来将列表中包含的所有样例在第一个维度（ ``axis=0`` ）合并。"
msgstr "Its implementation logic uses the :py:func:`numpy.stack` function to merge all the examples included in the list in the first dimension (``axis=0``)."

#: ../../source/user-guide/model-development/data/collator.rst:38
msgid "MegEngine 中也提供了类似的 :py:func:`~.functional.stack` 函数，不过它仅适用于 Tensor 数据。"
msgstr "A similar :py:func:`~.functional.stack` function is also provided in MegEngine, but it is only applicable to Tensor data."

#: ../../source/user-guide/model-development/data/collator.rst:42
msgid "默认的 ``Collator`` 支持 NumPy ndarrays, Numbers, Unicode strings, bytes, dicts 或 lists 数据类型。 要求输入必须包含至少一种上述数据类型，否则用户需要使用自己定义的 ``Collator``."
msgstr "The default ``Collator`` supports NumPy ndarrays, Numbers, Unicode strings, bytes, dicts or lists data types. The input must contain at least one of the above data types, otherwise users need to use their own defined ``Collator``."

#: ../../source/user-guide/model-development/data/collator.rst:46
msgid "Collator 效果示范"
msgstr "Collator effect demonstration"

#: ../../source/user-guide/model-development/data/collator.rst:47
msgid "如果此时每个样本是形状为 :math:`(C, H, W)` 的图片 ``image``, 且在 ``Sampler`` 中指定了 ``batch_size`` 为 :math:`N`. 那么 ``Collator`` 的主要目的就是将获得的该样本列表合并成一个形状为 :math:`(N, C, H, W)` 的批样本结构。"
msgstr "If at this time each sample is :math:`(C, H, W)`, and the ``batch_size'' is specified as :math:`N` in the ``Sampler``. Then ` The main purpose of `Collator`` is to merge the obtained sample list into a :math:`(N, C, H, W)`."

#: ../../source/user-guide/model-development/data/collator.rst:50
msgid "我们可以模拟得到这样一个 ``image_list`` 数据，并借助 ``Collator`` 得到 ``batch_image``:"
msgstr "We can simulate such ``image_list`` data, and use ``Collator`` to get ``batch_image``:"

#: ../../source/user-guide/model-development/data/collator.rst:63
msgid "如果样本带有标签，则 ``Collator`` 就需要将由 ``(image, label)`` 元组构成的列表合并， 形成一个大的 ``(batch_image, bacth_label)`` 元组。这也是我们对 ``DataLoader`` 进行迭代时通常会获得的东西。"
msgstr "If the sample is labeled, ``Collator`` needs to merge the list of ``(image, label)`` tuples to form a big ``(batch_image, bacth_label)'' tuple. This is what we usually get when we iterate over the ``DataLoader``."

#: ../../source/user-guide/model-development/data/collator.rst:66
msgid "在下面的示例代码中，``sample_list`` 中每个元素都是一个元组（假设所有的标签都用整型 ``1`` 来表示）："
msgstr "In the following sample code, each element in ``sample_list`` is a tuple (assuming that all labels are represented by integer ``1'')："

#: ../../source/user-guide/model-development/data/collator.rst:76
msgid "MegEngine 提供的默认 ``Collator`` 也能够很好地处理这种情况："
msgstr "The default MegEngine provided `` Collator`` also works well with this situation："

#: ../../source/user-guide/model-development/data/collator.rst:84
msgid "需要注意的是，此时 ``batch_label`` 已经被转换成了 ndarray 数据结构。"
msgstr "It should be noted that at this time ``batch_label`` has been converted into an ndarray data structure."

#: ../../source/user-guide/model-development/data/collator.rst:89
msgid "自定义 Collator"
msgstr "Custom Collator"

#: ../../source/user-guide/model-development/data/collator.rst:91
msgid "当默认的 ``stack`` 合并策略无法满足我们的需求时，我们则需要考虑自定义 ``Collator``:"
msgstr "When the default ``stack'' merge strategy cannot meet our needs, we need to consider customizing the ``Collator``:"

#: ../../source/user-guide/model-development/data/collator.rst:93
msgid "需要继承 ``Collator`` 类，并在子类中实现 ``apply`` 方法；"
msgstr "Need to inherit the ``Collator`` class and implement the ``apply`` method in the subclass;"

#: ../../source/user-guide/model-development/data/collator.rst:94
msgid "我们实现的 ``apply`` 方法将被 ``DataLoader`` 调用。"
msgstr "The ``apply`` method we implemented will be called by the ``DataLoader``."

#: ../../source/user-guide/model-development/data/collator.rst:98
msgid ":models:`official/vision/keypoints/dataset.py#L167` - ``HeatmapCollator``"
msgstr ":models:`official/vision/keypoints/dataset.py#L167`-``HeatmapCollator``"

#: ../../source/user-guide/model-development/data/collator.rst:99
msgid ":models:`official/vision/detection/tools/utils.py#L125` - ``DetectionPadCollator``"
msgstr ":models:`official/vision/detection/tools/utils.py#L125`-``DetectionPadCollator``"


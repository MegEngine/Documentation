
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2021-10-07 02:13+0000\n"
"Last-Translator: \n"
"Language: en_US\n"
"Language-Team: English\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/user-guide/install/index.rst:5
msgid "如何安装 MegEngine"
msgstr "How to install MegEngine"

#: ../../source/user-guide/install/index.rst:9
msgid "MegEngine 目前支持在以下环境安装 Python 包："
msgstr ""
"MegEngine currently supports Python package is installed in the following"
" environments："

#: ../../source/user-guide/install/index.rst:11
msgid "操作系统： Linux-64bit/Windows-64bit/MacOS-10.14 及其以上"
msgstr "Operating system： Linux-64bit/Windows-64bit/MacOS-10.14 and above"

#: ../../source/user-guide/install/index.rst:12
msgid "Python 版本：3.5 到 3.8"
msgstr "Python version：3.5 to 3.8"

#: ../../source/user-guide/install/index.rst:14
msgid "其中 MacOS 只支持 Intel x86 CPU； 此外，MegEngine 也支持在很多其它平台上进行推理运算。"
msgstr ""
"Among them, MacOS only supports Intel x86 CPU; in addition, MegEngine "
"also supports inference operations on many other platforms."

#: ../../source/user-guide/install/index.rst:20
msgid "通过包管理器安装"
msgstr "Install via package manager"

#: ../../source/user-guide/install/index.rst:22
msgid "通过 ``pip`` 包管理器安装 MegEngine 的命令如下："
msgstr "Command to install MegEngine by `` pip`` Package Manager follows："

#: ../../source/user-guide/install/index.rst:31
#, fuzzy
msgid "对于 ``conda`` 用户, 可以选择通过在环境中先安装 ``pip``, 再按照上述方式进行 MegEngine 的安装；"
msgstr ""
"For ``conda`` users, you can choose to install ``pip`` in the environment"
" first, and then install MegEngine as described above."

#: ../../source/user-guide/install/index.rst:35
msgid "MegEngine 包中集成了 CUDA 环境，但用户需确保环境中已经正确地安装好 GPU 设备相关驱动；"
msgstr ""

#: ../../source/user-guide/install/index.rst:36
msgid "由于 EAR 限制，目前官方发布的预编译包是基于 CUDA 10.1 的，参考 :ref:`cuda-compiling` 。"
msgstr ""

#: ../../source/user-guide/install/index.rst:41
msgid "通过源码编译安装"
msgstr "Compile and install through source code"

#: ../../source/user-guide/install/index.rst:43
#, fuzzy
msgid "如果包管理器安装的方式无法满足你的需求，例如："
msgstr ""
"If the package manager installation method cannot meet your needs, you "
"can try to compile and install from the source code yourself."

#: ../../source/user-guide/install/index.rst:45
msgid "我使用的 GPU 设备非 Nvidia 厂商的，比如用的是 AMD 等厂商的 GPU;"
msgstr ""

#: ../../source/user-guide/install/index.rst:46
msgid "我使用的 Nvidia GPU 设备比较新或者比较旧，不在当前的设备支持列表中；"
msgstr ""

#: ../../source/user-guide/install/index.rst:47
msgid "我希望更改一些其它的编译配置选项，启用一些默认关闭的特性。"
msgstr ""

#: ../../source/user-guide/install/index.rst:49
#, fuzzy
msgid "则可以尝试自行通过源码编译安装。相关细节请参考 :src:`scripts/cmake-build/BUILD_README.md` ."
msgstr ""
"For more details, please refer to :src:`scripts/cmake-"
"build/BUILD_README.md`."

#: ../../source/user-guide/install/index.rst:54
msgid "CUDA 编译支持现状"
msgstr ""

#: ../../source/user-guide/install/index.rst:56
msgid "MegEngine CMake CUDA 编译的现状如下："
msgstr ""

#: ../../source/user-guide/install/index.rst:58
msgid "CUDA 11.1 及以上编译能适配市面上所有的 Ampere 卡，适配 sm80+sm86"
msgstr ""

#: ../../source/user-guide/install/index.rst:59
msgid "CUDA 11.0 编译能适配 A100, 但不能适配 30 系卡，仅适配 sm80"
msgstr ""

#: ../../source/user-guide/install/index.rst:60
msgid "CUDA 10 不适配 Ampere 架构（官方发布的预编译包是基于 CUDA 10.1 的）"
msgstr ""

#: ../../source/user-guide/install/index.rst:64
msgid ""
"用户可以使用 ``cmake -DMGE_CUDA_GENCODE=\"-gencode arch=compute80, "
"code=sm80\"`` 自由指定。"
msgstr ""

#: ../../source/user-guide/install/index.rst:68
msgid "用户在编译前需要确定有 GPU 设备，以及确定环境中所使用的 CUDA 版本。"
msgstr ""

#: ../../source/user-guide/install/index.rst:72
msgid ""
"用户可在 `Compute Capability <https://developer.nvidia.com/cuda-"
"gpus#compute>`_ 页面找到自己的 GPU 设备对应的计算兼容性版本。"
msgstr ""

#~ msgid "再按照上述方式进行 MegEngine 的安装。"
#~ msgstr "Then proceed to the installation of MegEngine as described above."

#~ msgid "环境依赖"
#~ msgstr "Environmental dependence"

#~ msgid "大多数编译 MegEngine 的依赖位于 :src:`third_party` 目录，可以通过以下命令自动安装："
#~ msgstr ""
#~ "Most compilers MegEngine dependent positioned"
#~ " :src:`third_party` directory, can be "
#~ "automatically installed by the command："

#~ msgid "上述过程中需要从国外获取软件源，建议使用比较通畅的网络环境。"
#~ msgstr ""
#~ "In the above process, you need to"
#~ " obtain software sources from abroad. "
#~ "It is recommended to use a "
#~ "relatively smooth network environment."

#~ msgid "一些依赖需要手动安装："
#~ msgstr "Dependencies need to manually install："

#~ msgid ""
#~ "`CUDA <https://developer.nvidia.com/cuda-toolkit-"
#~ "archive>`_ (>=10.1), `cuDNN "
#~ "<https://developer.nvidia.com/cudnn>`_ (>=7.6), 如果需要编译支持"
#~ " CUDA 的版本。"
#~ msgstr ""
#~ "`CUDA <https://developer.nvidia.com/cuda-toolkit-"
#~ "archive>`_ (>=10.1), `cuDNN "
#~ "<https://developer.nvidia.com/cudnn>`_ (>=7.6), if "
#~ "you need to compile a version that"
#~ " supports CUDA."

#~ msgid ""
#~ "`TensorRT "
#~ "<https://docs.nvidia.com/deeplearning/tensorrt/archives/index.html>`_"
#~ " (>=5.1.5) ， 如果需要编译支持 TensorRT 的版本。"
#~ msgstr ""
#~ "`TensorRT "
#~ "<https://docs.nvidia.com/deeplearning/tensorrt/archives/index.html>`_"
#~ " (>=5.1.5), if you need to compile"
#~ " a version that supports TensorRT."

#~ msgid "LLVM/Clang(>=6.0) ，如果需要编译支持 Halide JIT 的版本（默认开启）。"
#~ msgstr ""
#~ "LLVM/Clang(>=6.0), if you need to "
#~ "compile a version that supports Halide"
#~ " JIT (enabled by default)."

#~ msgid "Python(>=3.5), Numpy, SWIG(>=3.0), 如果需要编译生成 Python 模块。"
#~ msgstr ""
#~ "Python(>=3.5), Numpy, SWIG(>=3.0), if you "
#~ "need to compile and generate Python "
#~ "modules."

#~ msgid "开始编译"
#~ msgstr "Start compiling"

#~ msgid ":src:`scripts/cmake-build/host_build.sh` 用于本地编译。"
#~ msgstr ":src:`scripts/cmake-build/host_build.sh` is used for local compilation."

#~ msgid "参数 ``-h`` 可用于查询脚本支持的参数:"
#~ msgstr ""
#~ "The parameter ``-h'' can be used "
#~ "to query the parameters supported by "
#~ "the script:"

#~ msgid ""
#~ ":src:`scripts/cmake-build/cross_build_android_arm_inference.sh`"
#~ " 用于 ARM-安卓 交叉编译。"
#~ msgstr ""
#~ ":src:`scripts/cmake-build/cross_build_android_arm_inference.sh`"
#~ " is used for ARM-Android cross "
#~ "compilation."

#~ msgid ""
#~ ":src:`scripts/cmake-build/cross_build_linux_arm_inference.sh`"
#~ " 用于 ARM-Linux 交叉编译。"
#~ msgstr ""
#~ ":src:`scripts/cmake-build/cross_build_linux_arm_inference.sh`"
#~ " is used for ARM-Linux cross "
#~ "compilation."

#~ msgid ""
#~ ":src:`scripts/cmake-build/cross_build_ios_arm_inference.sh` "
#~ "用于 iOS 交叉编译。"
#~ msgstr ""
#~ ":src:`scripts/cmake-build/cross_build_ios_arm_inference.sh` "
#~ "is used for iOS cross compilation."


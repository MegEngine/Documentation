msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-12 09:02+0800\n"
"PO-Revision-Date: 2021-06-03 03:55\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.Elemwise.po\n"
"X-Crowdin-File-ID: 2394\n"

#: ../../source/reference/api/megengine.module.Elemwise.rst:2
msgid "megengine.module.Elemwise"
msgstr "crwdns34552:0crwdne34552:0"

#: megengine.module.elemwise.Elemwise:1 of
msgid "A :class:`~.Module` to do :mod:`~.functional.elemwise` operator. Could be replaced with :class:`~.QATModule` version :class:`~.qat.Elemwise` using :func:`~.quantize.quantize_qat`."
msgstr "crwdns34556:0:class:crwdnd34556:0:mod:crwdnd34556:0:class:crwdnd34556:0:class:crwdnd34556:0:func:crwdne34556:0"

#: megengine.module.elemwise.Elemwise of
msgid "参数"
msgstr "crwdns34558:0crwdne34558:0"

#: megengine.module.elemwise.Elemwise:4 of
msgid "the elemwise method, support the following string. It will do the normal elemwise operator for float.  * \"add\": a + b * \"fuse_add_relu\": max(x+y, 0) * \"mul\": x * y * \"min\": min(x, y) * \"max\": max(x, y) * \"sub\": x - y * \"true_div\": x / y * \"fuse_add_sigmoid\": sigmoid(x + y) * \"fuse_add_tanh\": tanh(x + y) * \"relu\": x > 0 ? x : 0 * \"abs\": x > 0 ? x : -x * \"sigmoid\": sigmoid(x) * \"exp\": exp(x) * \"tanh\": tanh(x) * \"fuse_mul_add3\": x * y + z * \"fast_tanh\": x * (27. + x * x) / (27. + 9. * x * x) * \"negate\": -x * \"acos\": acos(x) * \"asin\": asin(x) * \"ceil\": ceil(x) * \"cos\": cos(x) * \"expm1\": expm1(x) * \"floor\": floor(x) * \"log\": log(x) * \"log1p\": log1p(x) * \"sin\": sin(x) * \"round\": round(x) * \"erf\": erf(x) * \"erfinv\": erfinv(x) * \"erfc\": erfc(x) * \"erfcinv\": erfcinv(x) * \"abs_grad\": abs_grad * \"floor_div\": floor_div * \"mod\": mod * \"sigmoid_grad\": sigmoid_grad * \"switch_gt0\": switch_gt0 * \"tanh_grad\": tanh_grad * \"lt\": less * \"leq\": leq * \"eq\": equal * \"pow\": pow * \"log_sum_exp\": log_sum_exp * \"fast_tanh_grad\": fast_tanh_grad * \"atan2\": atan2 * \"cond_leq_mov\": cond_leq_mov * \"h_swish\": h_swish * \"fuse_add_h_swish\": h_swish(x+y) * \"h_swish_grad\": h_swish_grad * \"and\": bool binary: x && y * \"or\": bool binary: x || y * \"xor\": bool binary: x ^ y * \"not\": bool unary: ~x"
msgstr "crwdns51904:0crwdne51904:0"

#: megengine.module.elemwise.Elemwise:4 of
msgid "the elemwise method, support the following string. It will do the normal elemwise operator for float."
msgstr "crwdns51906:0crwdne51906:0"

#: megengine.module.elemwise.Elemwise:7 of
msgid "\"add\": a + b"
msgstr "crwdns51908:0crwdne51908:0"

#: megengine.module.elemwise.Elemwise:8 of
msgid "\"fuse_add_relu\": max(x+y, 0)"
msgstr "crwdns51910:0crwdne51910:0"

#: megengine.module.elemwise.Elemwise:9 of
msgid "\"mul\": x * y"
msgstr "crwdns51912:0crwdne51912:0"

#: megengine.module.elemwise.Elemwise:10 of
msgid "\"min\": min(x, y)"
msgstr "crwdns51914:0crwdne51914:0"

#: megengine.module.elemwise.Elemwise:11 of
msgid "\"max\": max(x, y)"
msgstr "crwdns51916:0crwdne51916:0"

#: megengine.module.elemwise.Elemwise:12 of
msgid "\"sub\": x - y"
msgstr "crwdns51918:0crwdne51918:0"

#: megengine.module.elemwise.Elemwise:13 of
msgid "\"true_div\": x / y"
msgstr "crwdns51920:0crwdne51920:0"

#: megengine.module.elemwise.Elemwise:14 of
msgid "\"fuse_add_sigmoid\": sigmoid(x + y)"
msgstr "crwdns51922:0crwdne51922:0"

#: megengine.module.elemwise.Elemwise:15 of
msgid "\"fuse_add_tanh\": tanh(x + y)"
msgstr "crwdns51924:0crwdne51924:0"

#: megengine.module.elemwise.Elemwise:16 of
msgid "\"relu\": x > 0 ? x : 0"
msgstr "crwdns51926:0crwdne51926:0"

#: megengine.module.elemwise.Elemwise:17 of
msgid "\"abs\": x > 0 ? x : -x"
msgstr "crwdns51928:0crwdne51928:0"

#: megengine.module.elemwise.Elemwise:18 of
msgid "\"sigmoid\": sigmoid(x)"
msgstr "crwdns51930:0crwdne51930:0"

#: megengine.module.elemwise.Elemwise:19 of
msgid "\"exp\": exp(x)"
msgstr "crwdns51932:0crwdne51932:0"

#: megengine.module.elemwise.Elemwise:20 of
msgid "\"tanh\": tanh(x)"
msgstr "crwdns51934:0crwdne51934:0"

#: megengine.module.elemwise.Elemwise:21 of
msgid "\"fuse_mul_add3\": x * y + z"
msgstr "crwdns51936:0crwdne51936:0"

#: megengine.module.elemwise.Elemwise:22 of
msgid "\"fast_tanh\": x * (27. + x * x) / (27. + 9. * x * x)"
msgstr "crwdns51938:0crwdne51938:0"

#: megengine.module.elemwise.Elemwise:23 of
msgid "\"negate\": -x"
msgstr "crwdns51940:0crwdne51940:0"

#: megengine.module.elemwise.Elemwise:24 of
msgid "\"acos\": acos(x)"
msgstr "crwdns51942:0crwdne51942:0"

#: megengine.module.elemwise.Elemwise:25 of
msgid "\"asin\": asin(x)"
msgstr "crwdns51944:0crwdne51944:0"

#: megengine.module.elemwise.Elemwise:26 of
msgid "\"ceil\": ceil(x)"
msgstr "crwdns51946:0crwdne51946:0"

#: megengine.module.elemwise.Elemwise:27 of
msgid "\"cos\": cos(x)"
msgstr "crwdns51948:0crwdne51948:0"

#: megengine.module.elemwise.Elemwise:28 of
msgid "\"expm1\": expm1(x)"
msgstr "crwdns51950:0crwdne51950:0"

#: megengine.module.elemwise.Elemwise:29 of
msgid "\"floor\": floor(x)"
msgstr "crwdns51952:0crwdne51952:0"

#: megengine.module.elemwise.Elemwise:30 of
msgid "\"log\": log(x)"
msgstr "crwdns51954:0crwdne51954:0"

#: megengine.module.elemwise.Elemwise:31 of
msgid "\"log1p\": log1p(x)"
msgstr "crwdns51956:0crwdne51956:0"

#: megengine.module.elemwise.Elemwise:32 of
msgid "\"sin\": sin(x)"
msgstr "crwdns51958:0crwdne51958:0"

#: megengine.module.elemwise.Elemwise:33 of
msgid "\"round\": round(x)"
msgstr "crwdns51960:0crwdne51960:0"

#: megengine.module.elemwise.Elemwise:34 of
msgid "\"erf\": erf(x)"
msgstr "crwdns51962:0crwdne51962:0"

#: megengine.module.elemwise.Elemwise:35 of
msgid "\"erfinv\": erfinv(x)"
msgstr "crwdns51964:0crwdne51964:0"

#: megengine.module.elemwise.Elemwise:36 of
msgid "\"erfc\": erfc(x)"
msgstr "crwdns51966:0crwdne51966:0"

#: megengine.module.elemwise.Elemwise:37 of
msgid "\"erfcinv\": erfcinv(x)"
msgstr "crwdns51968:0crwdne51968:0"

#: megengine.module.elemwise.Elemwise:38 of
msgid "\"abs_grad\": abs_grad"
msgstr "crwdns51970:0crwdne51970:0"

#: megengine.module.elemwise.Elemwise:39 of
msgid "\"floor_div\": floor_div"
msgstr "crwdns51972:0crwdne51972:0"

#: megengine.module.elemwise.Elemwise:40 of
msgid "\"mod\": mod"
msgstr "crwdns51974:0crwdne51974:0"

#: megengine.module.elemwise.Elemwise:41 of
msgid "\"sigmoid_grad\": sigmoid_grad"
msgstr "crwdns51976:0crwdne51976:0"

#: megengine.module.elemwise.Elemwise:42 of
msgid "\"switch_gt0\": switch_gt0"
msgstr "crwdns51978:0crwdne51978:0"

#: megengine.module.elemwise.Elemwise:43 of
msgid "\"tanh_grad\": tanh_grad"
msgstr "crwdns51980:0crwdne51980:0"

#: megengine.module.elemwise.Elemwise:44 of
msgid "\"lt\": less"
msgstr "crwdns51982:0crwdne51982:0"

#: megengine.module.elemwise.Elemwise:45 of
msgid "\"leq\": leq"
msgstr "crwdns51984:0crwdne51984:0"

#: megengine.module.elemwise.Elemwise:46 of
msgid "\"eq\": equal"
msgstr "crwdns51986:0crwdne51986:0"

#: megengine.module.elemwise.Elemwise:47 of
msgid "\"pow\": pow"
msgstr "crwdns51988:0crwdne51988:0"

#: megengine.module.elemwise.Elemwise:48 of
msgid "\"log_sum_exp\": log_sum_exp"
msgstr "crwdns51990:0crwdne51990:0"

#: megengine.module.elemwise.Elemwise:49 of
msgid "\"fast_tanh_grad\": fast_tanh_grad"
msgstr "crwdns51992:0crwdne51992:0"

#: megengine.module.elemwise.Elemwise:50 of
msgid "\"atan2\": atan2"
msgstr "crwdns51994:0crwdne51994:0"

#: megengine.module.elemwise.Elemwise:51 of
msgid "\"cond_leq_mov\": cond_leq_mov"
msgstr "crwdns51996:0crwdne51996:0"

#: megengine.module.elemwise.Elemwise:52 of
msgid "\"h_swish\": h_swish"
msgstr "crwdns51998:0crwdne51998:0"

#: megengine.module.elemwise.Elemwise:53 of
msgid "\"fuse_add_h_swish\": h_swish(x+y)"
msgstr "crwdns52000:0crwdne52000:0"

#: megengine.module.elemwise.Elemwise:54 of
msgid "\"h_swish_grad\": h_swish_grad"
msgstr "crwdns52002:0crwdne52002:0"

#: megengine.module.elemwise.Elemwise:55 of
msgid "\"and\": bool binary: x && y"
msgstr "crwdns52004:0crwdne52004:0"

#: megengine.module.elemwise.Elemwise:56 of
msgid "\"or\": bool binary: x || y"
msgstr "crwdns52006:0crwdne52006:0"

#: megengine.module.elemwise.Elemwise:57 of
msgid "\"xor\": bool binary: x ^ y"
msgstr "crwdns52008:0crwdne52008:0"

#: megengine.module.elemwise.Elemwise:58 of
msgid "\"not\": bool unary: ~x"
msgstr "crwdns52010:0crwdne52010:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:11
msgid "Methods"
msgstr "crwdns34668:0crwdne34668:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`apply <megengine.module.Elemwise.apply>`\\ \\(fn\\)"
msgstr "crwdns34676:0:obj:crwdne34676:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Applies function ``fn`` to all the modules within this module, including itself."
msgstr "crwdns34678:0crwdne34678:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`buffers <megengine.module.Elemwise.buffers>`\\ \\(\\[recursive\\]\\)"
msgstr "crwdns34680:0:obj:crwdne34680:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable for the buffers of the module."
msgstr "crwdns34682:0crwdne34682:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`children <megengine.module.Elemwise.children>`\\ \\(\\*\\*kwargs\\)"
msgstr "crwdns34684:0:obj:crwdne34684:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable for all the submodules that are direct attributes of this module."
msgstr "crwdns34686:0crwdne34686:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`disable_quantize <megengine.module.Elemwise.disable_quantize>`\\ \\(\\[value\\]\\)"
msgstr "crwdns34688:0:obj:crwdne34688:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Sets ``module``'s ``quantize_disabled`` attribute and return ``module``."
msgstr "crwdns34690:0crwdne34690:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`eval <megengine.module.Elemwise.eval>`\\ \\(\\)"
msgstr "crwdns34692:0:obj:crwdne34692:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Sets training mode of all the modules within this module (including itself) to ``False``."
msgstr "crwdns34694:0crwdne34694:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`forward <megengine.module.Elemwise.forward>`\\ \\(\\*inps\\)"
msgstr "crwdns34696:0:obj:crwdne34696:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`load_state_dict <megengine.module.Elemwise.load_state_dict>`\\ \\(state\\_dict\\[\\, strict\\]\\)"
msgstr "crwdns34698:0:obj:crwdne34698:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Loads a given dictionary created by :func:`state_dict` into this module."
msgstr "crwdns34700:0:func:crwdne34700:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`modules <megengine.module.Elemwise.modules>`\\ \\(\\*\\*kwargs\\)"
msgstr "crwdns34702:0:obj:crwdne34702:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable for all the modules within this module, including itself."
msgstr "crwdns34704:0crwdne34704:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`named_buffers <megengine.module.Elemwise.named_buffers>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr "crwdns34706:0:obj:crwdne34706:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable for key buffer pairs of the module, where ``key`` is the dotted path from this module to the buffer."
msgstr "crwdns34708:0crwdne34708:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`named_children <megengine.module.Elemwise.named_children>`\\ \\(\\*\\*kwargs\\)"
msgstr "crwdns34710:0:obj:crwdne34710:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable of key-submodule pairs for all the submodules that are direct attributes of this module, where 'key' is the attribute name of submodules."
msgstr "crwdns34712:0crwdne34712:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`named_modules <megengine.module.Elemwise.named_modules>`\\ \\(\\[prefix\\]\\)"
msgstr "crwdns34714:0:obj:crwdne34714:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable of key-module pairs for all the modules within this module, including itself, where 'key' is the dotted path from this module to the submodules."
msgstr "crwdns34716:0crwdne34716:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`named_parameters <megengine.module.Elemwise.named_parameters>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr "crwdns34718:0:obj:crwdne34718:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable for key :class:`~.Parameter` pairs of the module, where ``key`` is the dotted path from this module to the :class:`~.Parameter`."
msgstr "crwdns34720:0:class:crwdnd34720:0:class:crwdne34720:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`parameters <megengine.module.Elemwise.parameters>`\\ \\(\\[recursive\\]\\)"
msgstr "crwdns34722:0:obj:crwdne34722:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Returns an iterable for the :class:`~.Parameter` of the module."
msgstr "crwdns34724:0:class:crwdne34724:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`register_forward_hook <megengine.module.Elemwise.register_forward_hook>`\\ \\(hook\\)"
msgstr "crwdns34726:0:obj:crwdne34726:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Registers a hook to handle forward results."
msgstr "crwdns34728:0crwdne34728:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`register_forward_pre_hook <megengine.module.Elemwise.register_forward_pre_hook>`\\ \\(hook\\)"
msgstr "crwdns34730:0:obj:crwdne34730:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Registers a hook to handle forward inputs."
msgstr "crwdns34732:0crwdne34732:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`replace_param <megengine.module.Elemwise.replace_param>`\\ \\(params\\, start\\_pos\\[\\, seen\\]\\)"
msgstr "crwdns34734:0:obj:crwdne34734:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Replaces module's parameters with ``params``, used by :class:`~.ParamPack` to speedup multimachine training."
msgstr "crwdns34736:0:class:crwdne34736:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`state_dict <megengine.module.Elemwise.state_dict>`\\ \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
msgstr "crwdns34738:0:obj:crwdne34738:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`train <megengine.module.Elemwise.train>`\\ \\(\\[mode\\, recursive\\]\\)"
msgstr "crwdns34740:0:obj:crwdne34740:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Sets training mode of all the modules within this module (including itself) to ``mode``."
msgstr "crwdns34742:0crwdne34742:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid ":obj:`zero_grad <megengine.module.Elemwise.zero_grad>`\\ \\(\\)"
msgstr "crwdns34744:0:obj:crwdne34744:0"

#: ../../source/reference/api/megengine.module.Elemwise.rst:71:<autosummary>:1
msgid "Sets all parameters' grads to zero"
msgstr "crwdns34746:0crwdne34746:0"

#~ msgid ""
#~ "the elemwise method, support the "
#~ "following string. It will do the "
#~ "normal elemwise operator for float."
#~ msgstr "elemwise方法，会进行标准elemwise浮点数运算。支持如下字符串："

#~ msgid "\"ADD\": a + b"
#~ msgstr "\"ADD\": a + b"

#~ msgid "\"FUSE_ADD_RELU\": max(x+y, 0)"
#~ msgstr "\"FUSE_ADD_RELU\": max(x+y, 0)"

#~ msgid "\"MUL\": x * y"
#~ msgstr "\"MUL\": x * y"

#~ msgid "\"MIN\": min(x, y)"
#~ msgstr "\"MIN\": min(x, y)"

#~ msgid "\"MAX\": max(x, y)"
#~ msgstr "\"MAX\": max(x, y)"

#~ msgid "\"SUB\": x - y"
#~ msgstr "\"SUB\": x - y"

#~ msgid "\"TRUE_DIV\": x / y"
#~ msgstr "\"TRUE_DIV\": x / y"

#~ msgid "\"FUSE_ADD_SIGMOID\": sigmoid(x + y)"
#~ msgstr "\"FUSE_ADD_SIGMOID\": sigmoid(x + y)"

#~ msgid "\"FUSE_ADD_TANH\": tanh(x + y)"
#~ msgstr "\"FUSE_ADD_TANH\": tanh(x + y)"

#~ msgid "\"RELU\": x > 0 ? x : 0"
#~ msgstr "\"RELU\": x > 0 ? x : 0"

#~ msgid "\"ABS\": x > 0 ? x : -x"
#~ msgstr "\"ABS\": x > 0 ? x : -x"

#~ msgid "\"SIGMOID\": sigmoid(x)"
#~ msgstr "\"SIGMOID\": sigmoid(x)"

#~ msgid "\"EXP\": exp(x)"
#~ msgstr "\"EXP\": exp(x)"

#~ msgid "\"TANH\": tanh(x)"
#~ msgstr "\"TANH\": tanh(x)"

#~ msgid "\"FUSE_MUL_ADD3\": x * y + z"
#~ msgstr "\"FUSE_MUL_ADD3\": x * y + z"

#~ msgid "\"FAST_TANH\": x * (27. + x * x) / (27. + 9. * x * x)"
#~ msgstr "\"FAST_TANH\": x * (27. + x * x) / (27. + 9. * x * x)"

#~ msgid "\"NEGATE\": -x"
#~ msgstr "\"NEGATE\": -x"

#~ msgid "\"ACOS\": acos(x)"
#~ msgstr "\"ACOS\": acos(x)"

#~ msgid "\"ASIN\": asin(x)"
#~ msgstr "\"ASIN\": asin(x)"

#~ msgid "\"CEIL\": ceil(x)"
#~ msgstr "\"CEIL\": ceil(x)"

#~ msgid "\"COS\": cos(x)"
#~ msgstr "\"COS\": cos(x)"

#~ msgid "\"EXPM1\": expm1(x)"
#~ msgstr "\"EXPM1\": expm1(x)"

#~ msgid "\"FLOOR\": floor(x)"
#~ msgstr "\"FLOOR\": floor(x)"

#~ msgid "\"LOG\": log(x)"
#~ msgstr "\"LOG\": log(x)"

#~ msgid "\"LOG1P\": log1p(x)"
#~ msgstr "\"LOG1P\": log1p(x)"

#~ msgid "\"SIN\": sin(x)"
#~ msgstr "\"SIN\": sin(x)"

#~ msgid "\"ROUND\": round(x)"
#~ msgstr "\"ROUND\": round(x)"

#~ msgid "\"ERF\": erf(x)"
#~ msgstr "\"ERF\": erf(x)"

#~ msgid "\"ERFINV\": erfinv(x)"
#~ msgstr "\"ERFINV\": erfinv(x)"

#~ msgid "\"ERFC\": erfc(x)"
#~ msgstr "\"ERFC\": erfc(x)"

#~ msgid "\"ERFCINV\": erfcinv(x)"
#~ msgstr "\"ERFCINV\": erfcinv(x)"

#~ msgid "\"ABS_GRAD\": abs_grad"
#~ msgstr "\"ABS_GRAD\": abs_grad"

#~ msgid "\"FLOOR_DIV\": floor_div"
#~ msgstr "\"FLOOR_DIV\": floor_div"

#~ msgid "\"MOD\": mod"
#~ msgstr "\"MOD\": mod"

#~ msgid "\"SIGMOID_GRAD\": sigmoid_grad"
#~ msgstr "\"SIGMOID_GRAD\": sigmoid_grad"

#~ msgid "\"SWITCH_GT0\": switch_gt0"
#~ msgstr "\"SWITCH_GT0\": switch_gt0"

#~ msgid "\"TANH_GRAD\": tanh_grad"
#~ msgstr "\"TANH_GRAD\": tanh_grad"

#~ msgid "\"LT\": less"
#~ msgstr "\"LEQ\": less"

#~ msgid "\"LEQ\": leq"
#~ msgstr "\"LEQ\": leq"

#~ msgid "\"EQ\": equal"
#~ msgstr "\"EQ\": equal"

#~ msgid "\"POW\": pow"
#~ msgstr "\"POW\": pow"

#~ msgid "\"LOG_SUM_EXP\": log_sum_exp"
#~ msgstr "\"LOG_SUM_EXP\": log_sum_exp"

#~ msgid "\"FAST_TANH_GRAD\": fast_tanh_grad"
#~ msgstr "\"FAST_TANH_GRAD\": fast_tanh_grad"

#~ msgid "\"ATAN2\": atan2"
#~ msgstr "\"ATAN2\": atan2"

#~ msgid "\"COND_LEQ_MOV\": cond_leq_mov"
#~ msgstr "\"COND_LEQ_MOV\": cond_leq_mov"

#~ msgid "\"H_SWISH\": h_swish"
#~ msgstr "\"H_SWISH\": h_swish"

#~ msgid "\"FUSE_ADD_H_SWISH\": h_swish(x+y)"
#~ msgstr "\"FUSE_ADD_H_SWISH\": h_swish(x+y)"

#~ msgid "\"H_SWISH_GRAD\": h_swish_grad"
#~ msgstr "\"H_SWISH_GRAD\": h_swish_grad"

#~ msgid "\"AND\": bool binary: x && y"
#~ msgstr "\"AND\": bool binary: x && y"

#~ msgid "\"OR\": bool binary: x || y"
#~ msgstr "\"OR\": bool binary: x || y"

#~ msgid "\"XOR\": bool binary: x ^ y"
#~ msgstr "\"XOR\": bool binary: x ^ y"

#~ msgid "\"NOT\": bool unary: ~x"
#~ msgstr "\"NOT\": bool unary: ~x"

#~ msgid "基类：:class:`megengine.module.module.Module`"
#~ msgstr "基类：:class:`megengine.module.module.Module`"

#~ msgid ""
#~ "the elemwise method, support the "
#~ "following string. It will do the "
#~ "normal elemwise operator for float.  *"
#~ " \"ADD\": a + b * \"FUSE_ADD_RELU\":"
#~ " max(x+y, 0) * \"MUL\": x * y"
#~ " * \"MIN\": min(x, y) * \"MAX\": "
#~ "max(x, y) * \"SUB\": x - y *"
#~ " \"TRUE_DIV\": x / y * "
#~ "\"FUSE_ADD_SIGMOID\": sigmoid(x + y) * "
#~ "\"FUSE_ADD_TANH\": tanh(x + y) * "
#~ "\"RELU\": x > 0 ? x : 0 "
#~ "* \"ABS\": x > 0 ? x : "
#~ "-x * \"SIGMOID\": sigmoid(x) * \"EXP\":"
#~ " exp(x) * \"TANH\": tanh(x) * "
#~ "\"FUSE_MUL_ADD3\": x * y + z * "
#~ "\"FAST_TANH\": x * (27. + x * "
#~ "x) / (27. + 9. * x * "
#~ "x) * \"NEGATE\": -x * \"ACOS\": "
#~ "acos(x) * \"ASIN\": asin(x) * \"CEIL\":"
#~ " ceil(x) * \"COS\": cos(x) * "
#~ "\"EXPM1\": expm1(x) * \"FLOOR\": floor(x) "
#~ "* \"LOG\": log(x) * \"LOG1P\": log1p(x)"
#~ " * \"SIN\": sin(x) * \"ROUND\": "
#~ "round(x) * \"ERF\": erf(x) * \"ERFINV\":"
#~ " erfinv(x) * \"ERFC\": erfc(x) * "
#~ "\"ERFCINV\": erfcinv(x) * \"ABS_GRAD\": "
#~ "abs_grad * \"FLOOR_DIV\": floor_div * "
#~ "\"MOD\": mod * \"SIGMOID_GRAD\": sigmoid_grad"
#~ " * \"SWITCH_GT0\": switch_gt0 * "
#~ "\"TANH_GRAD\": tanh_grad * \"LT\": less "
#~ "* \"LEQ\": leq * \"EQ\": equal *"
#~ " \"POW\": pow * \"LOG_SUM_EXP\": "
#~ "log_sum_exp * \"FAST_TANH_GRAD\": fast_tanh_grad "
#~ "* \"ATAN2\": atan2 * \"COND_LEQ_MOV\": "
#~ "cond_leq_mov * \"H_SWISH\": h_swish * "
#~ "\"FUSE_ADD_H_SWISH\": h_swish(x+y) * "
#~ "\"H_SWISH_GRAD\": h_swish_grad * \"AND\": bool"
#~ " binary: x && y * \"OR\": bool"
#~ " binary: x || y * \"XOR\": bool"
#~ " binary: x ^ y * \"NOT\": bool"
#~ " unary: ~x"
#~ msgstr "以字符串表示的操作类型，支持列表如下。对于 Tensor 中的每个元素，都将执行此项操作。"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.Elemwise.__init__>`\\ "
#~ "\\(method\\, \\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.Elemwise.__init__>`\\ "
#~ "\\(method\\, \\*\\*kwargs\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 13:50+0800\n"
"PO-Revision-Date: 2022-07-27 05:48\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.nn.warp_perspective.po\n"
"X-Crowdin-File-ID: 7161\n"

#: ../../source/reference/api/megengine.functional.nn.warp_perspective.rst:2
msgid "megengine.functional.nn.warp\\_perspective"
msgstr "crwdns69787:0crwdne69787:0"

#: megengine.functional.vision.warp_perspective:1 of
msgid "Applies perspective transformation to batched 2D images."
msgstr "crwdns69789:0crwdne69789:0"

#: megengine.functional.vision.warp_perspective:3 of
msgid "The input images are transformed to the output images by the transformation matrix:"
msgstr "crwdns69791:0crwdne69791:0"

#: megengine.functional.vision.warp_perspective:5 of
msgid "\\text{output}(n, c, h, w) = \\text{input} \\left( n, c,\n"
"    \\frac{M_{00}w + M_{01}h + M_{02}}{M_{20}w + M_{21}h + M_{22}},\n"
"    \\frac{M_{10}w + M_{11}h + M_{12}}{M_{20}w + M_{21}h + M_{22}}\n"
"    \\right)\n\n"
msgstr "crwdns69793:0{output}crwdnd69793:0{input}crwdnd69793:0{00}crwdnd69793:0{01}crwdnd69793:0{02}crwdnd69793:0{20}crwdnd69793:0{21}crwdnd69793:0{22}crwdnd69793:0{10}crwdnd69793:0{11}crwdnd69793:0{12}crwdnd69793:0{20}crwdnd69793:0{21}crwdnd69793:0{22}crwdne69793:0"

#: megengine.functional.vision.warp_perspective:11 of
msgid "Optionally, we can set `mat_idx` to assign different transformations to the same image, otherwise the input images and transformations should be one-to-one correnspondence."
msgstr "crwdns69795:0crwdne69795:0"

#: megengine.functional.vision.warp_perspective of
msgid "参数"
msgstr "crwdns69797:0crwdne69797:0"

#: megengine.functional.vision.warp_perspective:15 of
msgid "input image."
msgstr "crwdns69799:0crwdne69799:0"

#: megengine.functional.vision.warp_perspective:17 of
msgid "batch, 3, 3)` transformation matrix."
msgstr "crwdns69801:0crwdne69801:0"

#: megengine.functional.vision.warp_perspective:19 of
msgid "h, w)` size of the output image."
msgstr "crwdns69803:0crwdne69803:0"

#: megengine.functional.vision.warp_perspective:21 of
msgid "batch, )` image batch idx assigned to each matrix. Default: None"
msgstr "crwdns69805:0crwdne69805:0"

#: megengine.functional.vision.warp_perspective:23 of
msgid "pixel extrapolation method. Default: \"replicate\". Currently also support \"constant\", \"reflect\", \"reflect_101\", \"wrap\"."
msgstr "crwdns69807:0crwdne69807:0"

#: megengine.functional.vision.warp_perspective:27 of
msgid "value used in case of a constant border. Default: 0"
msgstr "crwdns69809:0crwdne69809:0"

#: megengine.functional.vision.warp_perspective:29 of
msgid "NHWC\" is also supported. Default: \"NCHW\"."
msgstr "crwdns69811:0crwdne69811:0"

#: megengine.functional.vision.warp_perspective:31 of
msgid "interpolation methods. Default: \"linear\". Currently only support \"linear\" mode."
msgstr "crwdns69813:0crwdne69813:0"

#: megengine.functional.vision.warp_perspective of
msgid "返回类型"
msgstr "crwdns69815:0crwdne69815:0"

#: megengine.functional.vision.warp_perspective:34 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr "crwdns69817:0crwdne69817:0"

#: megengine.functional.vision.warp_perspective of
msgid "返回"
msgstr "crwdns69819:0crwdne69819:0"

#: megengine.functional.vision.warp_perspective:35 of
msgid "output tensor."
msgstr "crwdns69821:0crwdne69821:0"

#: megengine.functional.vision.warp_perspective:37 of
msgid "The transformation matrix is the inverse of that used by `cv2.warpPerspective`."
msgstr "crwdns69823:0crwdne69823:0"

#: megengine.functional.vision.warp_perspective:40 of
msgid "实际案例"
msgstr "crwdns69825:0crwdne69825:0"

#~ msgid "Outputs:"
#~ msgstr "输出："


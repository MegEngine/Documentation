msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-25 02:39+0000\n"
"PO-Revision-Date: 2023-09-25 02:46\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.random.beta.po\n"
"X-Crowdin-File-ID: 9715\n"

#: ../../source/reference/api/megengine.random.beta.rst:2
msgid "megengine.random.beta"
msgstr "crwdns106235:0crwdne106235:0"

#: megengine.random.rng.RNG.beta:1 of
msgid "Random variable with Beta distribution :math:`\\operatorname{Beta}(\\alpha, \\beta)`."
msgstr "crwdns106237:0:math:crwdnd106237:0{Beta}crwdne106237:0"

#: megengine.random.rng.RNG.beta:3 of
msgid "The corresponding probability density function is"
msgstr "crwdns106239:0crwdne106239:0"

#: megengine.random.rng.RNG.beta:5 of
msgid "p(x)=\\frac{1}{\\mathrm{~B}(\\alpha, \\beta)} x^{\\alpha-1}(1-x)^{\\beta-1}\n"
"\\quad \\text { for } \\alpha, \\beta>0,"
msgstr "crwdns106241:0{1}crwdnd106241:0{ for }crwdne106241:0"

#: megengine.random.rng.RNG.beta:10 of
msgid "where :math:`\\mathrm{~B}(\\alpha, \\beta)` is the beta function,"
msgstr "crwdns106243:0:math:crwdne106243:0"

#: megengine.random.rng.RNG.beta:12 of
msgid "\\mathrm{~B}(\\alpha, \\beta)=\\int_{0}^{1} t^{\\alpha-1}(1-t)^{\\beta-1} d t."
msgstr "crwdns106245:0{0}crwdnd106245:0{1}crwdne106245:0"

#: megengine.random.rng.RNG.beta of
msgid "参数"
msgstr "crwdns106247:0crwdne106247:0"

#: megengine.random.rng.RNG.beta:17 of
msgid "the alpha parameter of the distribution. Must be positive."
msgstr "crwdns122727:0crwdne122727:0"

#: megengine.random.rng.RNG.beta:20 of
msgid "the beta parameter of the distribution. Must be positive."
msgstr "crwdns122729:0crwdne122729:0"

#: megengine.random.rng.RNG.beta:23 of
msgid "the size of output tensor. If alpha and beta are scalars and given size is, e.g., `(m, n)`, then the output shape is `(m, n)`. If alpha or beta is a Tensor and given size is, e.g., `(m, n)`, then the output shape is `(m, n) + broadcast(alpha, beta).shape`. Default: None."
msgstr "crwdns122731:0crwdne122731:0"

#: megengine.random.rng.RNG.beta of
msgid "返回"
msgstr "crwdns106255:0crwdne106255:0"

#: megengine.random.rng.RNG.beta:28 of
msgid "tensor. The random variable with Beta distribution."
msgstr "crwdns122733:0crwdne122733:0"

#: megengine.random.rng.RNG.beta of
msgid "返回类型"
msgstr "crwdns122735:0crwdne122735:0"

#: megengine.random.rng.RNG.beta:32 of
msgid "实际案例"
msgstr "crwdns106259:0crwdne106259:0"

#: megengine.random.rng.RNG.beta:50 of
msgid "[[0.0682759 , 0.04448463],"
msgstr "crwdns106261:0crwdne106261:0"

#: megengine.random.rng.RNG.beta:51 of
msgid "[0.97733796, 0.19206746]]], dtype=float32)"
msgstr "crwdns106263:0crwdne106263:0"

#~ msgid ""
#~ "p(x)=\\frac{1}{\\mathrm{~B}(\\alpha, \\beta)} "
#~ "x^{\\alpha-1}(1-x)^{\\beta-1}\n"
#~ "\\quad \\text { for } \\alpha, \\beta>0,\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "\\mathrm{~B}(\\alpha, \\beta)=\\int_{0}^{1} "
#~ "t^{\\alpha-1}(1-t)^{\\beta-1} d t.\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "the size of output tensor. If "
#~ "alpha and beta are scalars and "
#~ "given size is, e.g., `(m, n)`, "
#~ "then the output shape is `(m, n)`."
#~ " If alpha or beta is a Tensor"
#~ " and given size is, e.g., `(m, "
#~ "n)`, then the output shape is `(m,"
#~ " n) + broadcast(alpha, beta).shape`. The"
#~ " broadcast rules are consistent with "
#~ "`numpy.broadcast`. Default: None"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr ""

#~ msgid ""
#~ "p(x)=\\frac{1}{\\mathrm{~B}(\\alpha, \\beta)} "
#~ "x^{\\alpha-1}(1-x)^{\\beta-1}\n"
#~ "\\quad \\text { for } \\alpha, \\beta>0，"
#~ msgstr ""

#~ msgid ""
#~ "\\mathrm{~B}(\\alpha, \\beta)=\\int_{0}^{1} "
#~ "t^{\\alpha-1}(1-t)^{\\beta-1} d t 。"
#~ msgstr ""

#~ msgid "Outputs:"
#~ msgstr "输出："

#~ msgid "the output tensor."
#~ msgstr "输出张量"


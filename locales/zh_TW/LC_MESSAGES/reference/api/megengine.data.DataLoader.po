msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-19 16:51+0800\n"
"PO-Revision-Date: 2022-04-19 12:44\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.data.DataLoader.po\n"
"X-Crowdin-File-ID: 1910\n"

#: ../../source/reference/api/megengine.data.DataLoader.rst:5
msgid "DataLoader"
msgstr "crwdns88749:0crwdne88749:0"

#: megengine.data.dataloader.DataLoader:1 of
msgid "Provides a convenient way to iterate on a given dataset."
msgstr "crwdns28570:0crwdne28570:0"

#: megengine.data.dataloader.DataLoader:3 of
msgid "DataLoader combines a dataset with :class:`~.Sampler`, :class:`~.Transform` and :class:`~.Collator`, make it flexible to get minibatch continually from a dataset."
msgstr "crwdns62582:0:class:crwdnd62582:0:class:crwdnd62582:0:class:crwdne62582:0"

#: megengine.data.dataloader.DataLoader of
msgid "参数"
msgstr "crwdns62584:0crwdne62584:0"

#: megengine.data.dataloader.DataLoader:8 of
msgid "dataset from which to load the minibatch."
msgstr "crwdns62586:0crwdne62586:0"

#: megengine.data.dataloader.DataLoader:10 of
msgid "defines the strategy to sample data from the dataset."
msgstr "crwdns62588:0crwdne62588:0"

#: megengine.data.dataloader.DataLoader:12 of
msgid "defined the transforming strategy for a sampled batch. Default: None"
msgstr "crwdns62590:0crwdne62590:0"

#: megengine.data.dataloader.DataLoader:15 of
msgid "defined the merging strategy for a transformed batch. Default: None"
msgstr "crwdns62592:0crwdne62592:0"

#: megengine.data.dataloader.DataLoader:18 of
msgid "the number of sub-process to load, transform and collate the batch. ``0`` means using single-process. Default: 0"
msgstr "crwdns62594:0crwdne62594:0"

#: megengine.data.dataloader.DataLoader:21 of
msgid "if positive, means the timeout value(second) for collecting a batch from workers. Default: 0"
msgstr "crwdns62596:0crwdne62596:0"

#: megengine.data.dataloader.DataLoader:24 of
msgid "callback function triggered by timeout, default to raise runtime error."
msgstr "crwdns62598:0crwdne62598:0"

#: megengine.data.dataloader.DataLoader:27 of
msgid "define the paralleling strategy in multi-processing mode. ``True`` means one batch is divided into :attr:`num_workers` pieces, and the workers will process these pieces parallelly. ``False`` means different sub-process will process different batch. Default: False"
msgstr "crwdns62600:0:attr:crwdne62600:0"

#: megengine.data.dataloader.DataLoader:32 of
msgid "whether to enable the preloading strategy of the dataloader. When enabling, the dataloader will preload one batch to the device memory to speed up the whole training process. All values in the map, list, and tuple will be converted to :class:`~.Tensor` by preloading, and you will get :class:`~.Tensor` instead of the original Numpy array or Python number."
msgstr "crwdns91876:0:class:crwdnd91876:0:class:crwdne91876:0"

#: megengine.data.dataloader.DataLoader:37 of
msgid "By enabling preload, tensors' host2device copy and device kernel execution will be overlapped, which will improve the training speed at the cost of higher device memory usage (due to one more batch data on device memory). This feature saves more time when your NN training time is short or your machine's host PCIe bandwidth for each device is low."
msgstr "crwdns91878:0crwdne91878:0"

#~ msgid "基类：:class:`object`"
#~ msgstr "基类：:class:`object`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.data.DataLoader.__init__>`\\ "
#~ "\\(dataset\\[\\, sampler\\, transform\\, ...\\]\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.data.DataLoader.__init__>`\\ "
#~ "\\(dataset\\[\\, sampler\\, transform\\, ...\\]\\)"

#~ msgid ""
#~ "`DataLoader` combines a dataset with "
#~ "`sampler`, `transform` and `collator`, make"
#~ " it flexible to get minibatch "
#~ "continually from a dataset."
#~ msgstr ""
#~ "DataLoader 将数据集与sampler 、transform 、 collator"
#~ " 结合起来，从而能够灵活地从数据集中连续获得拼成 minibatch 的数据。"

#~ msgid "megengine.data.DataLoader"
#~ msgstr "megengine.data.DataLoader"

#~ msgid "Methods"
#~ msgstr "方法"

#~ msgid ""
#~ "Defines whether to apply the preloading"
#~ " strategy of dataloader, and parallelize"
#~ " the copy of host2device while kernal"
#~ " is executed to improve the loading"
#~ " speed. default is seted False the"
#~ " output will change from np.ndarry to"
#~ " dtype tensor. the support dtypes for"
#~ " preload are "
#~ "int,float,list[int,float],tuple[int,float],and another "
#~ "type is not supported."
#~ msgstr ""
#~ "定义是否应用 dataloader 的预加载策略，并在 kernel 执行时并行化 "
#~ "host2device 以提高加载速度。 默认设置为 False，输出将从 "
#~ "np.ndarry 更改为 dtype 张量。 预加载支持的 dtype "
#~ "是 int,float,list[int,float],tuple[int,float]，不支持其他类型。"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2021-11-12 01:23\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.random.RNG.gamma.po\n"
"X-Crowdin-File-ID: 7687\n"
"Language: zh_TW\n"

#: ../../source/reference/api/megengine.random.RNG.gamma.rst:2
msgid "megengine.random.RNG.gamma"
msgstr "crwdns79077:0crwdne79077:0"

#: megengine.random.rng.RNG.gamma:1 of
msgid "Random variable with Gamma distribution :math:`\\Gamma(k, \\theta)`."
msgstr "crwdns79079:0:math:crwdne79079:0"

#: megengine.random.rng.RNG.gamma:3 of
msgid "The corresponding probability density function is"
msgstr "crwdns79081:0crwdne79081:0"

#: megengine.random.rng.RNG.gamma:5 of
msgid "p(x)=x^{k-1} \\frac{e^{-x / \\theta}}{\\theta^{k} \\Gamma(k)}\n"
"\\quad \\text { for } x>0 \\quad k, \\theta>0,"
msgstr "crwdns79083:0{k-1}crwdnd79083:0{k}crwdnd79083:0{ for }crwdne79083:0"

#: megengine.random.rng.RNG.gamma:10 of
msgid "where :math:`\\Gamma(k)` is the gamma function,"
msgstr "crwdns79085:0:math:crwdne79085:0"

#: megengine.random.rng.RNG.gamma:12 of
msgid "\\Gamma(k)=(k-1) !  \\quad \\text { for } \\quad k>0.\n\n"
msgstr "crwdns79087:0{ for }crwdne79087:0"

#: megengine.random.rng.RNG.gamma of
msgid "参数"
msgstr "crwdns79089:0crwdne79089:0"

#: megengine.random.rng.RNG.gamma:16 of
msgid "the shape parameter (sometimes designated \"k\") of the distribution. Must be non-negative."
msgstr "crwdns79091:0crwdne79091:0"

#: megengine.random.rng.RNG.gamma:19 of
msgid "the scale parameter (sometimes designated \"theta\") of the distribution. Must be non-negative. Default: 1"
msgstr "crwdns79093:0crwdne79093:0"

#: megengine.random.rng.RNG.gamma:22 of
msgid "the size of output tensor. If shape and scale are scalars and given size is, e.g., `(m, n)`, then the output shape is `(m, n)`. If shape or scale is a Tensor and given size is, e.g., `(m, n)`, then the output shape is `(m, n) + broadcast(shape, scale).shape`. The broadcast rules are consistent with `numpy.broadcast`. Default: None"
msgstr "crwdns79095:0crwdne79095:0"

#: megengine.random.rng.RNG.gamma of
msgid "返回"
msgstr "crwdns79097:0crwdne79097:0"

#: megengine.random.rng.RNG.gamma:27 of
msgid "the output tensor."
msgstr "crwdns79099:0crwdne79099:0"

#: megengine.random.rng.RNG.gamma:30 of
msgid "实际案例"
msgstr "crwdns79101:0crwdne79101:0"

#: megengine.random.rng.RNG.gamma:49 of
msgid "Outputs:"
msgstr "crwdns79103:0crwdne79103:0"

#~ msgid ""
#~ "p(x)=x^{k-1} \\frac{e^{-x / \\theta}}{\\theta^{k} \\Gamma(k)}\n"
#~ "\\quad \\text { for } x>0 \\quad k, \\theta>0,\n"
#~ "\n"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr ""


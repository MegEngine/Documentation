msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2021-11-12 00:55\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.init.msra_uniform_.po\n"
"X-Crowdin-File-ID: 2470\n"

#: ../../source/reference/api/megengine.module.init.msra_uniform_.rst:2
msgid "megengine.module.init.msra\\_uniform\\_"
msgstr "crwdns36626:0crwdne36626:0"

#: megengine.module.init.msra_uniform_:1 of
msgid "Fills tensor wilth random values sampled from :math:`\\mathcal{U}(-\\text{bound}, \\text{bound})` where"
msgstr "crwdns63584:0:math:crwdnd63584:0{U}crwdnd63584:0{bound}crwdnd63584:0{bound}crwdne63584:0"

#: megengine.module.init.msra_uniform_:4 of
msgid "\\text{bound} = \\sqrt{\\frac{6}{(1 + a^2) \\times \\text{fan_in}}}"
msgstr "crwdns75413:0{bound}crwdnd75413:0{6}crwdnd75413:0{fan_in}crwdne75413:0"

#: megengine.module.init.msra_uniform_:8 of
msgid "Detailed information can be retrieved from `Delving deep into rectifiers: Surpassing human-level performance on ImageNet classification`"
msgstr "crwdns36632:0crwdne36632:0"

#: megengine.module.init.msra_uniform_ of
msgid "参数"
msgstr "crwdns63588:0crwdne63588:0"

#: megengine.module.init.msra_uniform_:13 of
msgid "tensor to be initialized."
msgstr "crwdns36636:0crwdne36636:0"

#: megengine.module.init.msra_uniform_:15 of
msgid "optional parameter for calculating gain for leaky_relu. See :func:`calculate_gain` for details."
msgstr "crwdns36638:0:func:crwdne36638:0"

#: megengine.module.init.msra_uniform_:18 of
msgid "fan_in\" or \"fan_out\", used to calculate :math:`gain`, the scaling factor for :math:`bound`. See :func:`calculate_fan_in_and_fan_out` for details."
msgstr "crwdns75415:0:math:crwdnd75415:0:math:crwdnd75415:0:func:crwdne75415:0"

#: megengine.module.init.msra_uniform_:22 of
msgid "name of the non-linear function used to calculate :math:`gain`. See :func:`calculate_gain` for details."
msgstr "crwdns36642:0:math:crwdnd36642:0:func:crwdne36642:0"

#: megengine.module.init.msra_uniform_ of
msgid "返回类型"
msgstr "crwdns75417:0crwdne75417:0"

#: megengine.module.init.msra_uniform_:26 of
msgid ":py:obj:`None`"
msgstr "crwdns75419:0crwdne75419:0"

#~ msgid "\\text{bound} = \\sqrt{\\frac{6}{(1 + a^2) \\times \\text{fan_in}}}"
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr "返回类型"

#~ msgid ":py:obj:`None`"
#~ msgstr ":py:obj:`None`"

#~ msgid ""
#~ "\\text{bound} = \\sqrt{\\frac{6}{(1 + a^2) \\times \\text{fan_in}}}\n"
#~ "\n"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid ""
#~ "Fills tensor wilth random values sampled"
#~ " from :math:`\\mathcal{U}(-        ext{bound},     "
#~ "ext{bound})` where"
#~ msgstr ""

#~ msgid ""
#~ "ext{bound} = \\sqrt{\n"
#~ "\n"
#~ msgstr ""

#~ msgid "rac{6}{(1 + a^2)    imes    ext{fan_in}}}"
#~ msgstr ""

#~ msgid "param tensor"
#~ msgstr ""

#~ msgid "param a"
#~ msgstr ""

#~ msgid "param mode"
#~ msgstr ""

#~ msgid "param nonlinearity"
#~ msgstr ""


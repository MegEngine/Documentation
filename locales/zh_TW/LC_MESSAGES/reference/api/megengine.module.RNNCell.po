msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-04 16:51+0800\n"
"PO-Revision-Date: 2023-04-21 09:27\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.RNNCell.po\n"
"X-Crowdin-File-ID: 9539\n"
"Language: zh_TW\n"

#: ../../source/reference/api/megengine.module.RNNCell.rst:5
msgid "RNNCell"
msgstr "crwdns105057:0crwdne105057:0"

#: megengine.module.rnn.RNNCell:1 of
msgid "An Elman RNN cell with tanh or ReLU non-linearity."
msgstr "crwdns105059:0crwdne105059:0"

#: megengine.module.rnn.RNNCell:3 of
msgid "h' = \\tanh(W_{ih} x + b_{ih}  +  W_{hh} h + b_{hh})"
msgstr "crwdns105061:0{ih}crwdnd105061:0{ih}crwdnd105061:0{hh}crwdnd105061:0{hh}crwdne105061:0"

#: megengine.module.rnn.RNNCell:7 of
msgid "If :attr:`nonlinearity` is `'relu'`, then ReLU is used in place of tanh."
msgstr "crwdns105063:0:attr:crwdne105063:0"

#: megengine.module.rnn.RNNCell of
msgid "参数"
msgstr "crwdns105065:0crwdne105065:0"

#: megengine.module.rnn.RNNCell:10 of
msgid "The number of expected features in the input `x`"
msgstr "crwdns105067:0crwdne105067:0"

#: megengine.module.rnn.RNNCell:12 of
msgid "The number of features in the hidden state `h`"
msgstr "crwdns105069:0crwdne105069:0"

#: megengine.module.rnn.RNNCell:14 of
msgid "If ``False``, then the layer does not use bias weights `b_ih` and `b_hh`. Default: ``True``"
msgstr "crwdns105071:0crwdne105071:0"

#: megengine.module.rnn.RNNCell:17 of
msgid "The non-linearity to use. Can be either ``'tanh'`` or ``'relu'``. Default: ``'tanh'``"
msgstr "crwdns105073:0crwdne105073:0"

#: megengine.module.rnn.RNNCell:23 of
msgid "Inputs: input, hidden"
msgstr "crwdns105075:0crwdne105075:0"

#: megengine.module.rnn.RNNCell:20 of
msgid "**input** of shape `(batch, input_size)`: tensor containing input features"
msgstr "crwdns105077:0crwdne105077:0"

#: megengine.module.rnn.RNNCell:21 of
msgid "**hidden** of shape `(batch, hidden_size)`: tensor containing the initial hidden state for each element in the batch. Defaults to zero if not provided."
msgstr "crwdns105079:0crwdne105079:0"

#: megengine.module.rnn.RNNCell:27 of
msgid "Outputs: h'"
msgstr "crwdns105081:0crwdne105081:0"

#: megengine.module.rnn.RNNCell:26 of
msgid "**h'** of shape `(batch, hidden_size)`: tensor containing the next hidden state for each element in the batch"
msgstr "crwdns105083:0crwdne105083:0"

#: megengine.module.rnn.RNNCell:37 of
msgid "Shape:"
msgstr "crwdns105085:0crwdne105085:0"

#: megengine.module.rnn.RNNCell:30 of
msgid "Input1: :math:`(N, H_{in})` tensor containing input features where :math:`H_{in}` = `input_size`"
msgstr "crwdns105087:0:math:crwdnd105087:0{in}crwdnd105087:0:math:crwdnd105087:0{in}crwdne105087:0"

#: megengine.module.rnn.RNNCell:32 of
msgid "Input2: :math:`(N, H_{out})` tensor containing the initial hidden state for each element in the batch where :math:`H_{out}` = `hidden_size` Defaults to zero if not provided."
msgstr "crwdns105089:0:math:crwdnd105089:0{out}crwdnd105089:0:math:crwdnd105089:0{out}crwdne105089:0"

#: megengine.module.rnn.RNNCell:35 of
msgid "Output: :math:`(N, H_{out})` tensor containing the next hidden state for each element in the batch"
msgstr "crwdns105091:0:math:crwdnd105091:0{out}crwdne105091:0"

#: megengine.module.rnn.RNNCell:40 of
msgid "实际案例"
msgstr "crwdns105093:0crwdne105093:0"

#: megengine.module.rnn.RNNCell:53 of
msgid "Outputs:"
msgstr "crwdns105095:0crwdne105095:0"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-12 09:02+0800\n"
"PO-Revision-Date: 2021-07-07 18:35\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.utils.network.Network.optimize_for_inference.po\n"
"X-Crowdin-File-ID: 6426\n"
"Language: zh_TW\n"

#: ../../source/reference/api/megengine.utils.network.Network.optimize_for_inference.rst:2
msgid "megengine.utils.network.Network.optimize\\_for\\_inference"
msgstr "crwdns60246:0crwdne60246:0"

#: megengine.utils.network.Network.optimize_for_inference:1 of
msgid "Applies optimize_for_inference pass for operator graph."
msgstr "crwdns60248:0crwdne60248:0"

#: megengine.utils.network.Network.optimize_for_inference of
msgid "param dest_vars"
msgstr "crwdns60250:0crwdne60250:0"

#: megengine.utils.network.Network.optimize_for_inference:3 of
msgid "list of output vars in the operator graph"
msgstr "crwdns60252:0crwdne60252:0"

#: megengine.utils.network.Network.optimize_for_inference of
msgid "Keyword Arguments"
msgstr "crwdns60254:0crwdne60254:0"

#: megengine.utils.network.Network.optimize_for_inference:9 of
msgid "enable_io16xc32 --"
msgstr "crwdns60256:0crwdne60256:0"

#: megengine.utils.network.Network.optimize_for_inference:8 of
msgid "whether to use float16 for I/O between oprs and use float32 as internal computation precision. Note the output var would be changed to float16."
msgstr "crwdns60258:0crwdne60258:0"

#: megengine.utils.network.Network.optimize_for_inference:13 of
msgid "enable_ioc16 --"
msgstr "crwdns60260:0crwdne60260:0"

#: megengine.utils.network.Network.optimize_for_inference:12 of
msgid "whether to use float16 for both I/O and computation precision."
msgstr "crwdns60262:0crwdne60262:0"

#: megengine.utils.network.Network.optimize_for_inference:16 of
msgid "enable_hwcd4 --"
msgstr "crwdns60264:0crwdne60264:0"

#: megengine.utils.network.Network.optimize_for_inference:16 of
msgid "whether to use NHWCD4 data layout. This is faster on some OpenCL backend."
msgstr "crwdns60266:0crwdne60266:0"

#: megengine.utils.network.Network.optimize_for_inference:19 of
msgid "enable_nchw88 --"
msgstr "crwdns60268:0crwdne60268:0"

#: megengine.utils.network.Network.optimize_for_inference:19 of
msgid "whether to use NCHW88 data layout, currently used in X86 AVX backend."
msgstr "crwdns60270:0crwdne60270:0"

#: megengine.utils.network.Network.optimize_for_inference:22 of
msgid "enable_nchw44 --"
msgstr "crwdns60272:0crwdne60272:0"

#: megengine.utils.network.Network.optimize_for_inference:22 of
msgid "whether to use NCHW44 data layout, currently used in arm backend."
msgstr "crwdns60274:0crwdne60274:0"

#: megengine.utils.network.Network.optimize_for_inference:25 of
msgid "enable_nchw44_dot --"
msgstr "crwdns60276:0crwdne60276:0"

#: megengine.utils.network.Network.optimize_for_inference:25 of
msgid "whether to use NCHW44_dot data layout, currently used in armv8.2+dotprod backend."
msgstr "crwdns60278:0crwdne60278:0"

#: megengine.utils.network.Network.optimize_for_inference:28 of
msgid "enable_nchw4 --"
msgstr "crwdns60280:0crwdne60280:0"

#: megengine.utils.network.Network.optimize_for_inference:28 of
msgid "whether to use NCHW4 data layout, currently used in nvidia backend(based on cudnn)."
msgstr "crwdns60282:0crwdne60282:0"

#: megengine.utils.network.Network.optimize_for_inference:31 of
msgid "enable_nchw32 --"
msgstr "crwdns60284:0crwdne60284:0"

#: megengine.utils.network.Network.optimize_for_inference:31 of
msgid "whether to use NCHW32 data layout, currently used in nvidia backend with tensorcore(based on cudnn)."
msgstr "crwdns60286:0crwdne60286:0"

#: megengine.utils.network.Network.optimize_for_inference:35 of
msgid "enable_chwn4 --"
msgstr "crwdns60288:0crwdne60288:0"

#: megengine.utils.network.Network.optimize_for_inference:34 of
msgid "whether to use CHWN4 data layout, currently used in nvidia backend with tensorcore."
msgstr "crwdns60290:0crwdne60290:0"

#: megengine.utils.network.Network.optimize_for_inference:37 of
msgid "enable_fuse_conv_bias_nonlinearity: whether to fuse conv+bias+nonlinearty"
msgstr "crwdns60292:0crwdne60292:0"

#: megengine.utils.network.Network.optimize_for_inference:38 of
msgid "into one opr."
msgstr "crwdns60294:0crwdne60294:0"

#: megengine.utils.network.Network.optimize_for_inference:41 of
msgid "enable_fuse_conv_bias_with_z: whether to fuse conv_bias with z"
msgstr "crwdns60296:0crwdne60296:0"

#: megengine.utils.network.Network.optimize_for_inference:40 of
msgid "input for inference on nvidia backend(this optimization pass will result in mismatch of the precision of output of training and inference)"
msgstr "crwdns60298:0crwdne60298:0"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-03 10:50+0800\n"
"PO-Revision-Date: 2021-06-03 04:02\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.loss.cross_entropy.po\n"
"X-Crowdin-File-ID: 2194\n"

#: ../../source/reference/api/megengine.functional.loss.cross_entropy.rst:2
msgid "megengine.functional.loss.cross\\_entropy"
msgstr "crwdns31196:0crwdne31196:0"

#: megengine.functional.loss.cross_entropy:1 of
msgid "Computes the multi-class cross entropy loss (using logits by default)."
msgstr "crwdns31198:0crwdne31198:0"

#: megengine.functional.loss.cross_entropy:3 of
msgid "By default(``with_logitis`` is True), ``pred`` is assumed to be logits, class probabilities are given by softmax."
msgstr "crwdns31200:0crwdne31200:0"

#: megengine.functional.loss.cross_entropy:6 of
msgid "It has better numerical stability compared with sequential calls to :func:`~.softmax` and :func:`~.cross_entropy`."
msgstr "crwdns31202:0:func:crwdnd31202:0:func:crwdne31202:0"

#: megengine.functional.loss.cross_entropy:8 of
msgid "When using label smoothing, the label distribution is as follows:"
msgstr "crwdns31204:0crwdne31204:0"

#: megengine.functional.loss.cross_entropy:10 of
msgid "y^{LS}_{k}=y_{k}\\left(1-\\alpha\\right)+\\alpha/K\n\n"
msgstr "crwdns62786:0{LS}crwdnd62786:0{k}crwdnd62786:0{k}crwdne62786:0"

#: megengine.functional.loss.cross_entropy:12 of
msgid "where :math:`y^{LS}` and :math:`y` are new label distribution and origin label distribution respectively. k is the index of label distribution. :math:`\\alpha` is ``label_smooth`` and :math:`K` is the number of classes."
msgstr "crwdns62788:0:math:crwdnd62788:0{LS}crwdnd62788:0:math:crwdnd62788:0:math:crwdnd62788:0:math:crwdne62788:0"

#: megengine.functional.loss.cross_entropy of
msgid "参数"
msgstr "crwdns62790:0crwdne62790:0"

#: megengine.functional.loss.cross_entropy:15 of
msgid "input tensor representing the predicted probability."
msgstr "crwdns31212:0crwdne31212:0"

#: megengine.functional.loss.cross_entropy:16 of
msgid "input tensor representing the classification label."
msgstr "crwdns31214:0crwdne31214:0"

#: megengine.functional.loss.cross_entropy:17 of
msgid "an axis along which softmax will be applied. Default: 1"
msgstr "crwdns31216:0crwdne31216:0"

#: megengine.functional.loss.cross_entropy:18 of
msgid "whether to apply softmax first. Default: True"
msgstr "crwdns31218:0crwdne31218:0"

#: megengine.functional.loss.cross_entropy:19 of
msgid "a label smoothing of parameter that can re-distribute target distribution. Default: 0"
msgstr "crwdns31220:0crwdne31220:0"

#: megengine.functional.loss.cross_entropy:20 of
msgid "the reduction to apply to the output: 'none' | 'mean' | 'sum'. Default: 'mean'"
msgstr "crwdns62792:0crwdne62792:0"

#: megengine.functional.loss.cross_entropy of
msgid "返回"
msgstr "crwdns62794:0crwdne62794:0"

#: megengine.functional.loss.cross_entropy:21 of
msgid "loss value."
msgstr "crwdns31228:0crwdne31228:0"

#: megengine.functional.loss.cross_entropy:23 of
msgid "Examples:"
msgstr "crwdns31230:0crwdne31230:0"

#: megengine.functional.loss.cross_entropy:38 of
msgid "Outputs:"
msgstr "crwdns31232:0crwdne31232:0"

#~ msgid "y^{LS}_{k}=y_{k}\\left(1-\\alpha\\right)+\\alpha/K"
#~ msgstr ""

#~ msgid ":py:class:`~megengine.tensor.Tensor`"
#~ msgstr ":py:class:`~megengine.tensor.Tensor`"

#~ msgid ""
#~ "y^{LS}_{k}=y_{k}\\left(1-\\alpha\\right)+\\alpha/K\n"
#~ "\n"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr "参数"

#~ msgid "返回"
#~ msgstr "返回"

#~ msgid "返回类型"
#~ msgstr "返回类型"

#~ msgid ""
#~ "y^{LS}_{k}=y_{k}\\left(1-lpha\n"
#~ "\n"
#~ msgstr ""

#~ msgid "ight)+lpha/K"
#~ msgstr ""

#~ msgid ""
#~ "where :math:`y^{LS}` and :math:`y` are "
#~ "new label distribution and origin label"
#~ " distribution respectively. k is the "
#~ "index of label distribution. :math:`lpha` "
#~ "is ``label_smooth`` and :math:`K` is the"
#~ " number of classes."
#~ msgstr ""

#~ msgid "param pred"
#~ msgstr ""

#~ msgid "param label"
#~ msgstr ""

#~ msgid "param axis"
#~ msgstr ""

#~ msgid "param with_logits"
#~ msgstr ""

#~ msgid "param label_smooth"
#~ msgstr ""

#~ msgid "return"
#~ msgstr ""


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-08 20:45+0800\n"
"PO-Revision-Date: 2021-12-13 15:08\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.Conv1d.po\n"
"X-Crowdin-File-ID: 2374\n"

#: ../../source/reference/api/megengine.module.Conv1d.rst:2
msgid "megengine.module.Conv1d"
msgstr "crwdns33522:0crwdne33522:0"

#: megengine.module.conv.Conv1d:1 of
msgid "Applies a 1D convolution over an input tensor."
msgstr "crwdns33526:0crwdne33526:0"

#: megengine.module.conv.Conv1d:3 of
msgid "For instance, given an input of the size :math:`(N, C_{\\text{in}}, H)`, this layer generates an output of the size :math:`(N, C_{\\text{out}}, H_{\\text{out}})` through the process described as below:"
msgstr "crwdns62978:0:math:crwdnd62978:0{in}crwdnd62978:0:math:crwdnd62978:0{out}crwdnd62978:0{out}crwdne62978:0"

#: megengine.module.conv.Conv1d:8 of
msgid "\\text{out}(N_i, C_{\\text{out}_j}) = \\text{bias}(C_{\\text{out}_j}) +\n"
"\\sum_{k = 0}^{C_{\\text{in}} - 1} \\text{weight}(C_{\\text{out}_j}, k) \\star \\text{input}(N_i, k)\n\n"
msgstr "crwdns62980:0{out}crwdnd62980:0{out}crwdnd62980:0{bias}crwdnd62980:0{out}crwdnd62980:0{in}crwdnd62980:0{weight}crwdnd62980:0{out}crwdnd62980:0{input}crwdne62980:0"

#: megengine.module.conv.Conv1d:12 of
msgid "where :math:`\\star` is the valid 1D cross-correlation operator, :math:`N` is batch size, :math:`C` denotes number of channels, and :math:`H` is length of 1D data element."
msgstr "crwdns33532:0:math:crwdnd33532:0:math:crwdnd33532:0:math:crwdnd33532:0:math:crwdne33532:0"

#: megengine.module.conv.Conv1d:16 of
msgid "When `groups == in_channels` and `out_channels == K * in_channels`, where K is a positive integer, this operation is also known as depthwise convolution."
msgstr "crwdns33534:0crwdne33534:0"

#: megengine.module.conv.Conv1d:20 of
msgid "In other words, for an input of size :math:`(N, C_{in}, H_{in})`, a depthwise convolution with a depthwise multiplier `K`, can be constructed by arguments :math:`(in\\_channels=C_{in}, out\\_channels=C_{in} \\times K, ..., groups=C_{in})`."
msgstr "crwdns62982:0:math:crwdnd62982:0{in}crwdnd62982:0{in}crwdnd62982:0:math:crwdnd62982:0{in}crwdnd62982:0{in}crwdnd62982:0{in}crwdne62982:0"

#: megengine.module.conv.Conv1d of
msgid "参数"
msgstr "crwdns33538:0crwdne33538:0"

#: megengine.module.conv.Conv1d:25 of
msgid "number of input channels."
msgstr "crwdns33540:0crwdne33540:0"

#: megengine.module.conv.Conv1d:27 of
msgid "number of output channels."
msgstr "crwdns33542:0crwdne33542:0"

#: megengine.module.conv.Conv1d:29 of
msgid "size of weight on spatial dimensions."
msgstr "crwdns62984:0crwdne62984:0"

#: megengine.module.conv.Conv1d:31 of
msgid "stride of the 1D convolution operation."
msgstr "crwdns62986:0crwdne62986:0"

#: megengine.module.conv.Conv1d:33 of
msgid "size of the paddings added to the input on both sides of its spatial dimensions. Only zero-padding is supported. Default: 0"
msgstr "crwdns33548:0crwdne33548:0"

#: megengine.module.conv.Conv1d:36 of
msgid "dilation of the 1D convolution operation. Default: 1"
msgstr "crwdns33550:0crwdne33550:0"

#: megengine.module.conv.Conv1d:38 of
msgid "number of groups to divide input and output channels into, so as to perform a \"grouped convolution\". When ``groups`` is not 1, ``in_channels`` and ``out_channels`` must be divisible by ``groups``, and the shape of weight should be ``(groups, out_channel // groups, in_channels // groups, kernel_size)``. Default: 1"
msgstr "crwdns87967:0crwdne87967:0"

#: megengine.module.conv.Conv1d:44 of
msgid "whether to add a bias onto the result of convolution. Default: True"
msgstr "crwdns33554:0crwdne33554:0"

#: megengine.module.conv.Conv1d:46 of
msgid "Supports `cross_correlation`. Default: `cross_correlation`"
msgstr "crwdns50380:0crwdne50380:0"

#: megengine.module.conv.Conv1d:48 of
msgid "When set to \"default\", no special requirements will be placed on the precision of intermediate results. When set to \"float32\", \"float32\" would be used for accumulator and intermediate result, but only effective when input and output are of float16 dtype."
msgstr "crwdns50382:0crwdne50382:0"

#: megengine.module.conv.Conv1d:55 of
msgid "``weight`` usually has shape ``(out_channels, in_channels, kernel_size)`` , if groups is not 1, shape will be ``(groups, out_channels // groups, in_channels // groups, kernel_size)``"
msgstr "crwdns70933:0crwdne70933:0"

#: megengine.module.conv.Conv1d:57 of
msgid "``bias`` usually has shape ``(1, out_channels, 1)``"
msgstr "crwdns70935:0crwdne70935:0"

#: megengine.module.conv.Conv1d:60 of
msgid "实际案例"
msgstr "crwdns70937:0crwdne70937:0"

#: megengine.module.conv.Conv1d:72 of
msgid "Outputs:"
msgstr "crwdns33562:0crwdne33562:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:15
msgid "Methods"
msgstr "crwdns33564:0crwdne33564:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`apply <megengine.module.Conv1d.apply>`\\ \\(fn\\)"
msgstr "crwdns33572:0:obj:crwdne33572:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Applies function ``fn`` to all the modules within this module, including itself."
msgstr "crwdns33574:0crwdne33574:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`buffers <megengine.module.Conv1d.buffers>`\\ \\(\\[recursive\\]\\)"
msgstr "crwdns33576:0:obj:crwdne33576:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for the buffers of the module."
msgstr "crwdns33578:0crwdne33578:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`calc_conv <megengine.module.Conv1d.calc_conv>`\\ \\(inp\\, weight\\, bias\\)"
msgstr "crwdns33580:0:obj:crwdne33580:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`children <megengine.module.Conv1d.children>`\\ \\(\\*\\*kwargs\\)"
msgstr "crwdns33582:0:obj:crwdne33582:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for all the submodules that are direct attributes of this module."
msgstr "crwdns33584:0crwdne33584:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`disable_quantize <megengine.module.Conv1d.disable_quantize>`\\ \\(\\[value\\]\\)"
msgstr "crwdns33586:0:obj:crwdne33586:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Sets ``module``'s ``quantize_disabled`` attribute and return ``module``."
msgstr "crwdns33588:0crwdne33588:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`eval <megengine.module.Conv1d.eval>`\\ \\(\\)"
msgstr "crwdns33590:0:obj:crwdne33590:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Sets training mode of all the modules within this module (including itself) to ``False``."
msgstr "crwdns33592:0crwdne33592:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`forward <megengine.module.Conv1d.forward>`\\ \\(inp\\)"
msgstr "crwdns33594:0:obj:crwdne33594:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`load_state_dict <megengine.module.Conv1d.load_state_dict>`\\ \\(state\\_dict\\[\\, strict\\]\\)"
msgstr "crwdns33596:0:obj:crwdne33596:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Loads a given dictionary created by :func:`state_dict` into this module."
msgstr "crwdns33598:0:func:crwdne33598:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`modules <megengine.module.Conv1d.modules>`\\ \\(\\*\\*kwargs\\)"
msgstr "crwdns33600:0:obj:crwdne33600:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for all the modules within this module, including itself."
msgstr "crwdns33602:0crwdne33602:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`named_buffers <megengine.module.Conv1d.named_buffers>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr "crwdns33604:0:obj:crwdne33604:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for key buffer pairs of the module, where ``key`` is the dotted path from this module to the buffer."
msgstr "crwdns33606:0crwdne33606:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`named_children <megengine.module.Conv1d.named_children>`\\ \\(\\*\\*kwargs\\)"
msgstr "crwdns33608:0:obj:crwdne33608:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable of key-submodule pairs for all the submodules that are direct attributes of this module, where 'key' is the attribute name of submodules."
msgstr "crwdns33610:0crwdne33610:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`named_modules <megengine.module.Conv1d.named_modules>`\\ \\(\\[prefix\\]\\)"
msgstr "crwdns33612:0:obj:crwdne33612:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable of key-module pairs for all the modules within this module, including itself, where 'key' is the dotted path from this module to the submodules."
msgstr "crwdns33614:0crwdne33614:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`named_parameters <megengine.module.Conv1d.named_parameters>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr "crwdns33616:0:obj:crwdne33616:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for key :class:`~.Parameter` pairs of the module, where ``key`` is the dotted path from this module to the :class:`~.Parameter`."
msgstr "crwdns33618:0:class:crwdnd33618:0:class:crwdne33618:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`named_tensors <megengine.module.Conv1d.named_tensors>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr "crwdns70939:0:obj:crwdne70939:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for key tensor pairs of the module, where ``key`` is the dotted path from this module to the tensor."
msgstr "crwdns70941:0crwdne70941:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`parameters <megengine.module.Conv1d.parameters>`\\ \\(\\[recursive\\]\\)"
msgstr "crwdns33620:0:obj:crwdne33620:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for the :class:`~.Parameter` of the module."
msgstr "crwdns33622:0:class:crwdne33622:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`register_forward_hook <megengine.module.Conv1d.register_forward_hook>`\\ \\(hook\\)"
msgstr "crwdns33624:0:obj:crwdne33624:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Registers a hook to handle forward results."
msgstr "crwdns33626:0crwdne33626:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`register_forward_pre_hook <megengine.module.Conv1d.register_forward_pre_hook>`\\ \\(hook\\)"
msgstr "crwdns33628:0:obj:crwdne33628:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Registers a hook to handle forward inputs."
msgstr "crwdns33630:0crwdne33630:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`replace_param <megengine.module.Conv1d.replace_param>`\\ \\(params\\, start\\_pos\\[\\, seen\\]\\)"
msgstr "crwdns33632:0:obj:crwdne33632:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Replaces module's parameters with ``params``, used by :class:`~.ParamPack` to"
msgstr "crwdns70943:0:class:crwdne70943:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`reset_parameters <megengine.module.Conv1d.reset_parameters>`\\ \\(\\)"
msgstr "crwdns33636:0:obj:crwdne33636:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>
msgid "rtype"
msgstr "crwdns70945:0crwdne70945:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":py:obj:`None`"
msgstr "crwdns70947:0crwdne70947:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`state_dict <megengine.module.Conv1d.state_dict>`\\ \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
msgstr "crwdns33642:0:obj:crwdne33642:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`tensors <megengine.module.Conv1d.tensors>`\\ \\(\\[recursive\\]\\)"
msgstr "crwdns70949:0:obj:crwdne70949:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Returns an iterable for the :class:`~.Tensor` of the module."
msgstr "crwdns70951:0:class:crwdne70951:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`train <megengine.module.Conv1d.train>`\\ \\(\\[mode\\, recursive\\]\\)"
msgstr "crwdns33644:0:obj:crwdne33644:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Sets training mode of all the modules within this module (including itself) to ``mode``."
msgstr "crwdns33646:0crwdne33646:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid ":obj:`zero_grad <megengine.module.Conv1d.zero_grad>`\\ \\(\\)"
msgstr "crwdns33648:0:obj:crwdne33648:0"

#: ../../source/reference/api/megengine.module.Conv1d.rst:87:<autosummary>:1
msgid "Sets all parameters' grads to zero"
msgstr "crwdns33650:0crwdne33650:0"

#~ msgid "基类：:class:`megengine.module.conv._ConvNd`"
#~ msgstr "基类：:class:`megengine.module.conv._ConvNd`"

#~ msgid ""
#~ "\\text{out}(N_i, C_{\\text{out}_j}) = "
#~ "\\text{bias}(C_{\\text{out}_j}) +\n"
#~ "\\sum_{k = 0}^{C_{\\text{in}} - 1} "
#~ "\\text{weight}(C_{\\text{out}_j}, k) \\star "
#~ "\\text{input}(N_i, k)"
#~ msgstr ""

#~ msgid "Supports `CROSS_CORRELATION`. Default: `CROSS_CORRELATION`"
#~ msgstr "支持 `CROSS_CORRELATION`。默认：`CROSS_CORRELATION`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.Conv1d.__init__>`\\ "
#~ "\\(in\\_channels\\, out\\_channels\\, kernel\\_size\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.Conv1d.__init__>`\\ "
#~ "\\(in\\_channels\\, out\\_channels\\, kernel\\_size\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid "rtype"
#~ msgstr "返回类型"

#~ msgid ":py:obj:`None`"
#~ msgstr ":py:obj:`None`"

#~ msgid ""
#~ "\\text{out}(N_i, C_{\\text{out}_j}) = "
#~ "\\text{bias}(C_{\\text{out}_j}) +\n"
#~ "\\sum_{k = 0}^{C_{\\text{in}} - 1} "
#~ "\\text{weight}(C_{\\text{out}_j}, k) \\star "
#~ "\\text{input}(N_i, k)\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "For instance, given an input of "
#~ "the size :math:`(N, C_{     ext{in}}, "
#~ "H)`, this layer generates an output "
#~ "of the size :math:`(N, C_{      "
#~ "ext{out}}, H_{  ext{out}})` through the "
#~ "process described as below:"
#~ msgstr ""

#~ msgid ""
#~ "ext{out}(N_i, C_{       ext{out}_j}) =  "
#~ "ext{bias}(C_{   ext{out}_j}) +\n"
#~ "\\sum_{k = 0}^{C_{       ext{in}} - 1}"
#~ "   ext{weight}(C_{ ext{out}_j}, k) \\star   "
#~ "ext{input}(N_i, k)\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "In other words, for an input of"
#~ " size :math:`(N, C_{in}, H_{in})`, a "
#~ "depthwise convolution with a depthwise "
#~ "multiplier `K`, can be constructed by"
#~ " arguments :math:`(in\\_channels=C_{in}, "
#~ "out\\_channels=C_{in}      imes K, ..., "
#~ "groups=C_{in})`."
#~ msgstr ""

#~ msgid ""
#~ "size of weight on spatial dimensions."
#~ " If kernel_size is an :class:`int`, "
#~ "the actual kernel size would be "
#~ "`(kernel_size, kernel_size)`. Default: 1"
#~ msgstr ""
#~ "在空域维度权重的尺寸。如果 kernel_size 是一个 :class:`int` "
#~ "，则实际的卷积核尺寸是 `(kernel_size, kernel_size)` 。默认：1"

#~ msgid ""
#~ ":attr:`weight` usually has shape "
#~ "``(out_channels, in_channels, kernel_size)``,"
#~ msgstr ""

#~ msgid ""
#~ "if groups is not 1, shape will "
#~ "be ``(groups, out_channels // groups, "
#~ "in_channels // groups, kernel_size)``"
#~ msgstr ""

#~ msgid ":attr:`bias` usually has shape ``(1, out_channels, 1)``"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr "例如："

#~ msgid ""
#~ "number of groups into which the "
#~ "input and output channels are divided,"
#~ " so as to perform a \"grouped "
#~ "convolution\". When ``groups`` is not 1,"
#~ " ``in_channels`` and ``out_channels`` must "
#~ "be divisible by ``groups``, and there"
#~ " would be an extra dimension at "
#~ "the beginning of the weight's shape. "
#~ "Default: 1"
#~ msgstr ""


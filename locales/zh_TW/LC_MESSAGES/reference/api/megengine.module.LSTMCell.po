msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-04 16:51+0800\n"
"PO-Revision-Date: 2023-04-21 09:26\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.LSTMCell.po\n"
"X-Crowdin-File-ID: 9513\n"
"Language: zh_TW\n"

#: ../../source/reference/api/megengine.module.LSTMCell.rst:5
msgid "LSTMCell"
msgstr "crwdns104715:0crwdne104715:0"

#: megengine.module.rnn.LSTMCell:1 of
msgid "A long short-term memory (LSTM) cell."
msgstr "crwdns104717:0crwdne104717:0"

#: megengine.module.rnn.LSTMCell:3 of
msgid "\\begin{array}{ll}\n"
"i = \\sigma(W_{ii} x + b_{ii} + W_{hi} h + b_{hi}) \\\\\n"
"f = \\sigma(W_{if} x + b_{if} + W_{hf} h + b_{hf}) \\\\\n"
"g = \\tanh(W_{ig} x + b_{ig} + W_{hg} h + b_{hg}) \\\\\n"
"o = \\sigma(W_{io} x + b_{io} + W_{ho} h + b_{ho}) \\\\\n"
"c' = f * c + i * g \\\\\n"
"h' = o * \\tanh(c') \\\\\n"
"\\end{array}"
msgstr "crwdns104719:0{array}crwdnd104719:0{ll}crwdnd104719:0{ii}crwdnd104719:0{ii}crwdnd104719:0{hi}crwdnd104719:0{hi}crwdnd104719:0{if}crwdnd104719:0{if}crwdnd104719:0{hf}crwdnd104719:0{hf}crwdnd104719:0{ig}crwdnd104719:0{ig}crwdnd104719:0{hg}crwdnd104719:0{hg}crwdnd104719:0{io}crwdnd104719:0{io}crwdnd104719:0{ho}crwdnd104719:0{ho}crwdnd104719:0{array}crwdne104719:0"

#: megengine.module.rnn.LSTMCell:14 of
msgid "where :math:`\\sigma` is the sigmoid function, and :math:`*` is the Hadamard product."
msgstr "crwdns104721:0:math:crwdnd104721:0:math:crwdne104721:0"

#: megengine.module.rnn.LSTMCell of
msgid "参数"
msgstr "crwdns104723:0crwdne104723:0"

#: megengine.module.rnn.LSTMCell:17 of
msgid "The number of expected features in the input `x`"
msgstr "crwdns104725:0crwdne104725:0"

#: megengine.module.rnn.LSTMCell:19 of
msgid "The number of features in the hidden state `h`"
msgstr "crwdns104727:0crwdne104727:0"

#: megengine.module.rnn.LSTMCell:21 of
msgid "If ``False``, then the layer does not use bias weights `b_ih` and `b_hh`. Default: ``True``"
msgstr "crwdns104729:0crwdne104729:0"

#: megengine.module.rnn.LSTMCell:31 of
msgid "Inputs: input, (h_0, c_0)"
msgstr "crwdns104731:0crwdne104731:0"

#: megengine.module.rnn.LSTMCell:25 of
msgid "**input** of shape `(batch, input_size)`: tensor containing input features"
msgstr "crwdns104733:0crwdne104733:0"

#: megengine.module.rnn.LSTMCell:26 of
msgid "**h_0** of shape `(batch, hidden_size)`: tensor containing the initial hidden state for each element in the batch."
msgstr "crwdns104735:0crwdne104735:0"

#: megengine.module.rnn.LSTMCell:28 of
msgid "**c_0** of shape `(batch, hidden_size)`: tensor containing the initial cell state for each element in the batch."
msgstr "crwdns104737:0crwdne104737:0"

#: megengine.module.rnn.LSTMCell:31 of
msgid "If `(h_0, c_0)` is not provided, both **h_0** and **c_0** default to zero."
msgstr "crwdns104739:0crwdne104739:0"

#: megengine.module.rnn.LSTMCell:37 of
msgid "Outputs: (h_1, c_1)"
msgstr "crwdns104741:0crwdne104741:0"

#: megengine.module.rnn.LSTMCell:34 of
msgid "**h_1** of shape `(batch, hidden_size)`: tensor containing the next hidden state for each element in the batch"
msgstr "crwdns104743:0crwdne104743:0"

#: megengine.module.rnn.LSTMCell:36 of
msgid "**c_1** of shape `(batch, hidden_size)`: tensor containing the next cell state for each element in the batch"
msgstr "crwdns104745:0crwdne104745:0"

#: megengine.module.rnn.LSTMCell:40 of
msgid "实际案例"
msgstr "crwdns104747:0crwdne104747:0"

#: megengine.module.rnn.LSTMCell:55 of
msgid "Outputs:"
msgstr "crwdns104749:0crwdne104749:0"


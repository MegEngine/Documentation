msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-04-21 09:18\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.logical_and.po\n"
"X-Crowdin-File-ID: 9159\n"

#: ../../source/reference/api/megengine.functional.logical_and.rst:2
msgid "megengine.functional.logical\\_and"
msgstr "crwdns100905:0crwdne100905:0"

#: megengine.functional.elemwise.logical_and:1 of
msgid "Element-wise logical AND."
msgstr "crwdns100907:0crwdne100907:0"

#: megengine.functional.elemwise.logical_and:3 of
msgid "Computes the logical AND for each element :math:`x_i` of the input tensor :math:`x` with the respective element :math:`y_i` of the input tensor :math:`y`."
msgstr "crwdns100909:0:math:crwdnd100909:0:math:crwdnd100909:0:math:crwdnd100909:0:math:crwdne100909:0"

#: megengine.functional.elemwise.logical_and of
msgid "参数"
msgstr "crwdns100911:0crwdne100911:0"

#: megengine.functional.elemwise.logical_and:6 of
msgid "first input tensor. Should have a boolean data type."
msgstr "crwdns100913:0crwdne100913:0"

#: megengine.functional.elemwise.logical_and:7 of
msgid "second input tensor. Must be compatible with :math:`x` (see :ref:`broadcasting-rule` ). Should have a boolean data type."
msgstr "crwdns100915:0:math:crwdnd100915:0:ref:crwdne100915:0"

#: megengine.functional.elemwise.logical_and of
msgid "返回"
msgstr "crwdns100917:0crwdne100917:0"

#: megengine.functional.elemwise.logical_and:10 of
msgid "a tensor containing the result of the element-wise logical AND operation. The returned tensor must have a data type of ``bool``."
msgstr "crwdns100919:0crwdne100919:0"

#: megengine.functional.elemwise.logical_and:15 of
msgid ":func:`~.logical_or`, :func:`~.logical_not`, :func:`~.logical_xor`"
msgstr "crwdns100921:0:func:crwdnd100921:0:func:crwdnd100921:0:func:crwdne100921:0"

#: megengine.functional.elemwise.logical_and:18 of
msgid "实际案例"
msgstr "crwdns100923:0crwdne100923:0"

#: megengine.functional.elemwise.logical_and:22 of
msgid "Element-wise logical AND:"
msgstr "crwdns100925:0crwdne100925:0"

#: megengine.functional.elemwise.logical_and:29 of
msgid "The ``&`` operator can be used as a shorthand for ``F.logical_and`` on boolean tensors."
msgstr "crwdns100927:0crwdne100927:0"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-01 21:02+0800\n"
"PO-Revision-Date: 2022-09-02 12:13\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/pylite/global.po\n"
"X-Crowdin-File-ID: 8438\n"

#: ../../source/reference/pylite/global.rst:6
msgid "megenginelite.global_setting"
msgstr "crwdns92934:0crwdne92934:0"

#: megenginelite.global_setting.LiteGlobal:1 of
msgid "Some global config in lite"
msgstr "crwdns94894:0crwdne94894:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:1 of
msgid "Clear the physical and virtual address pair in MegEngine."
msgstr "crwdns94896:0crwdne94896:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair
#: megenginelite.global_setting.LiteGlobal.dump_persistent_cache
#: megenginelite.global_setting.LiteGlobal.get_device_count
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr
#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key
#: megenginelite.global_setting.LiteGlobal.register_memory_pair
#: megenginelite.global_setting.LiteGlobal.set_loader_lib_path
#: megenginelite.global_setting.LiteGlobal.set_persistent_cache
#: megenginelite.global_setting.LiteGlobal.set_tensorrt_cache
#: megenginelite.global_setting.LiteGlobal.update_decryption_key of
msgid "参数"
msgstr "crwdns94898:0crwdne94898:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:3
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:3
#: megenginelite.global_setting.LiteGlobal.register_memory_pair:4 of
msgid "the virtual ptr to set to MegEngine."
msgstr "crwdns94900:0crwdne94900:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:4
#: megenginelite.global_setting.LiteGlobal.register_memory_pair:5 of
msgid "the physical ptr to set to MegEngine."
msgstr "crwdns94902:0crwdne94902:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:5
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:4
#: megenginelite.global_setting.LiteGlobal.register_memory_pair:7 of
msgid "the the device to set the pair memory."
msgstr "crwdns94904:0crwdne94904:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:6
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:5 of
msgid "the backend to set the pair memory."
msgstr "crwdns94906:0crwdne94906:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair
#: megenginelite.global_setting.LiteGlobal.get_device_count
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr
#: megenginelite.global_setting.LiteGlobal.register_memory_pair of
msgid "返回"
msgstr "crwdns94908:0crwdne94908:0"

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:8 of
msgid "Whether the clear is operation successful."
msgstr "crwdns94910:0crwdne94910:0"

#: megenginelite.global_setting.LiteGlobal.dump_persistent_cache:1 of
msgid "Dump the PersistentCache policy cache to the specific file. If the network is set to profile when forward, though this the algo policy will dump to file."
msgstr "crwdns94912:0crwdne94912:0"

#: megenginelite.global_setting.LiteGlobal.dump_persistent_cache:5 of
msgid "the cache file path to be dumped."
msgstr "crwdns94914:0crwdne94914:0"

#: megenginelite.global_setting.LiteGlobal.dump_tensorrt_cache:1 of
msgid "Dump the TensorRT cache to the file set in :py:func:`~.set_tensorrt_cache`."
msgstr "crwdns94916:0crwdne94916:0"

#: megenginelite.global_setting.LiteGlobal.get_device_count:1 of
msgid "Get the number of device of the given device type in current context."
msgstr "crwdns94918:0crwdne94918:0"

#: megenginelite.global_setting.LiteGlobal.get_device_count:3 of
msgid "the device type to be counted."
msgstr "crwdns94920:0crwdne94920:0"

#: megenginelite.global_setting.LiteGlobal.get_device_count:5 of
msgid "the number of device."
msgstr "crwdns94922:0crwdne94922:0"

#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:1 of
msgid "Get the physic address by the virtual address in MegEngine."
msgstr "crwdns94924:0crwdne94924:0"

#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:7 of
msgid "The physic address to lookup."
msgstr "crwdns94926:0crwdne94926:0"

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:1 of
msgid "Register a custom decryption method and key to lite"
msgstr "crwdns94928:0crwdne94928:0"

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:3
#: megenginelite.global_setting.LiteGlobal.update_decryption_key:3 of
msgid "the name of the decryption, which will act as the hash key to find the decryption method."
msgstr "crwdns94930:0crwdne94930:0"

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:5 of
msgid "the decryption function, which will decrypt the model with the registered key, then return the decrypted model. See :py:func:`~.decryption_func` for more details."
msgstr "crwdns94932:0crwdne94932:0"

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:8 of
msgid "the decryption key of the method."
msgstr "crwdns94934:0crwdne94934:0"

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:1 of
msgid "Register the physical and virtual address pair to the MegEngine, some device need the map from physical to virtual."
msgstr "crwdns94936:0crwdne94936:0"

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:6 of
msgid "the length of bytes to set pair memory."
msgstr "crwdns94938:0crwdne94938:0"

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:8 of
msgid "the backend to set the pair memory"
msgstr "crwdns94940:0crwdne94940:0"

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:10 of
msgid "Whether the register operation is successful."
msgstr "crwdns94942:0crwdne94942:0"

#: megenginelite.global_setting.LiteGlobal.set_loader_lib_path:1 of
msgid "Set the loader path to be used in lite."
msgstr "crwdns94944:0crwdne94944:0"

#: megenginelite.global_setting.LiteGlobal.set_loader_lib_path:3 of
msgid "the file path which store the loader library."
msgstr "crwdns94946:0crwdne94946:0"

#: megenginelite.global_setting.LiteGlobal.set_persistent_cache:1 of
msgid "Set the algo policy cache file for CPU/CUDA, the algo policy cache is produced by MegEngine fast-run."
msgstr "crwdns94948:0crwdne94948:0"

#: megenginelite.global_setting.LiteGlobal.set_persistent_cache:4 of
msgid "the file path which store the cache."
msgstr "crwdns94950:0crwdne94950:0"

#: megenginelite.global_setting.LiteGlobal.set_persistent_cache:5 of
msgid "always update the cache file when model runs."
msgstr "crwdns94952:0crwdne94952:0"

#: megenginelite.global_setting.LiteGlobal.set_tensorrt_cache:1 of
msgid "Set the TensorRT engine cache path for serialized prebuilt ICudaEngine."
msgstr "crwdns94954:0crwdne94954:0"

#: megenginelite.global_setting.LiteGlobal.set_tensorrt_cache:3 of
msgid "the cache file path to set"
msgstr "crwdns94956:0crwdne94956:0"

#: megenginelite.global_setting.LiteGlobal.try_coalesce_all_free_memory:1 of
msgid "Try to coalesce all free memory in MegEngine. When call it MegEnine Lite will try to free all the unused memory thus decrease the runtime memory usage."
msgstr "crwdns94958:0crwdne94958:0"

#: megenginelite.global_setting.LiteGlobal.update_decryption_key:1 of
msgid "Update decryption key of a custom decryption method."
msgstr "crwdns94960:0crwdne94960:0"

#: megenginelite.global_setting.LiteGlobal.update_decryption_key:5 of
msgid "the decryption key of the method, if the length of key is zero, the key will not be updated."
msgstr "crwdns94962:0crwdne94962:0"

#~ msgid "some global config in lite"
#~ msgstr ""


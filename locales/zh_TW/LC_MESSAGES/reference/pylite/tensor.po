msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-01 21:02+0800\n"
"PO-Revision-Date: 2023-04-21 09:38\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/pylite/tensor.po\n"
"X-Crowdin-File-ID: 10029\n"

#: ../../source/reference/pylite/tensor.rst:6
msgid "megenginelite.tensor"
msgstr "crwdns121387:0crwdne121387:0"

#: megenginelite.tensor.LiteTensor:1 of
msgid "Description of a block of data with neccessary information."
msgstr "crwdns121389:0crwdne121389:0"

#: megenginelite.tensor.LiteLayout megenginelite.tensor.LiteTensor
#: megenginelite.tensor.LiteTensor.copy_from
#: megenginelite.tensor.LiteTensor.reshape
#: megenginelite.tensor.LiteTensor.set_data_by_copy
#: megenginelite.tensor.LiteTensor.set_data_by_share
#: megenginelite.tensor.LiteTensor.share_memory_with
#: megenginelite.tensor.LiteTensor.slice of
msgid "参数"
msgstr "crwdns121391:0crwdne121391:0"

#: megenginelite.tensor.LiteTensor:3 of
msgid "layout of Tensor"
msgstr "crwdns121393:0crwdne121393:0"

#: megenginelite.tensor.LiteTensor:4 of
msgid "device type of Tensor"
msgstr "crwdns121395:0crwdne121395:0"

#: megenginelite.tensor.LiteTensor:5 of
msgid "device id of Tensor"
msgstr "crwdns121397:0crwdne121397:0"

#: megenginelite.tensor.LiteTensor:6 of
msgid "when set, the storage memory of the tensor is pinned memory. This is used to Optimize the H2D or D2H memory copy, if the device or layout is not set, when copy form other device(CUDA) tensor, this tensor will be automatically set to pinned tensor"
msgstr "crwdns121399:0crwdne121399:0"

#: megenginelite.tensor.LiteTensor:10 of
msgid "the shape of data"
msgstr "crwdns121401:0crwdne121401:0"

#: megenginelite.tensor.LiteTensor:11 of
msgid "data type"
msgstr "crwdns121403:0crwdne121403:0"

#: megenginelite.tensor.LiteLayout:9 megenginelite.tensor.LiteTensor:15 of
msgid "Dims of shape should be less than 8. The supported data type defines at LiteDataType"
msgstr "crwdns121405:0crwdne121405:0"

#: megenginelite.tensor.LiteTensor.copy_from:1 of
msgid "copy memory form the src_tensor"
msgstr "crwdns121407:0crwdne121407:0"

#: megenginelite.tensor.LiteTensor.copy_from:3 of
msgid "source tensor"
msgstr "crwdns121409:0crwdne121409:0"

#: megenginelite.tensor.LiteTensor.device_id:1 of
msgid "get device id of the tensor"
msgstr "crwdns121411:0crwdne121411:0"

#: megenginelite.tensor.LiteTensor.device_type:1 of
msgid "get device type of the tensor"
msgstr "crwdns121413:0crwdne121413:0"

#: megenginelite.tensor.LiteTensor.fill_zero:1 of
msgid "fill the buffer memory with zero"
msgstr "crwdns121415:0crwdne121415:0"

#: megenginelite.tensor.LiteTensor.get_ctypes_memory:1 of
msgid "get the memory of the tensor, return c_void_p of the tensor memory"
msgstr "crwdns121417:0crwdne121417:0"

#: megenginelite.tensor.LiteTensor.get_data_by_share:2 of
msgid "get the data in the tensor, add share the data with a new numpy, and"
msgstr "crwdns121419:0crwdne121419:0"

#: megenginelite.tensor.LiteTensor.get_data_by_share:2 of
msgid "return the numpy arrray"
msgstr "crwdns121421:0crwdne121421:0"

#: megenginelite.tensor.LiteTensor.get_data_by_share:6 of
msgid "Be careful, the data in numpy is valid before the tensor memory is"
msgstr "crwdns121423:0crwdne121423:0"

#: megenginelite.tensor.LiteTensor.get_data_by_share:7 of
msgid "write again, such as LiteNetwok forward next time."
msgstr "crwdns121425:0crwdne121425:0"

#: megenginelite.tensor.LiteTensor.is_continue:1 of
msgid "whether the tensor memory is continue"
msgstr "crwdns121427:0crwdne121427:0"

#: megenginelite.tensor.LiteTensor.is_pinned_host:1 of
msgid "whether the tensor is pinned tensor"
msgstr "crwdns121429:0crwdne121429:0"

#: megenginelite.tensor.LiteTensor.nbytes:1 of
msgid "get the length of the meomry in byte"
msgstr "crwdns121431:0crwdne121431:0"

#: megenginelite.tensor.LiteTensor.reshape:1 of
msgid "reshape the tensor with data not change."
msgstr "crwdns121433:0crwdne121433:0"

#: megenginelite.tensor.LiteTensor.reshape:3 of
msgid "target shape"
msgstr "crwdns121435:0crwdne121435:0"

#: megenginelite.tensor.LiteTensor.set_data_by_copy:1 of
msgid "copy the data to the tensor"
msgstr "crwdns121437:0crwdne121437:0"

#: megenginelite.tensor.LiteTensor.set_data_by_copy:3 of
msgid "the data to copy to tensor, it should be list, numpy.ndarraya or ctypes with length"
msgstr "crwdns121439:0crwdne121439:0"

#: megenginelite.tensor.LiteTensor.set_data_by_copy:5 of
msgid "length of data in bytes"
msgstr "crwdns121441:0crwdne121441:0"

#: megenginelite.tensor.LiteTensor.set_data_by_copy:6 of
msgid "layout of data"
msgstr "crwdns121443:0crwdne121443:0"

#: megenginelite.tensor.LiteTensor.set_data_by_share:1 of
msgid "share the data to the tensor"
msgstr "crwdns121445:0crwdne121445:0"

#: megenginelite.tensor.LiteTensor.set_data_by_share:3 of
msgid "the data will shared to the tensor, it should be a numpy.ndarray or ctypes data"
msgstr "crwdns121447:0crwdne121447:0"

#: megenginelite.tensor.LiteTensor.share_memory_with:2 of
msgid "share the same memory with the ``src_tensor``, the self memory will be"
msgstr "crwdns121449:0crwdne121449:0"

#: megenginelite.tensor.LiteTensor.share_memory_with:2 of
msgid "freed"
msgstr "crwdns121451:0crwdne121451:0"

#: megenginelite.tensor.LiteTensor.share_memory_with:4 of
msgid "the source tensor that will share memory with this tensor"
msgstr "crwdns121453:0crwdne121453:0"

#: megenginelite.tensor.LiteTensor.slice:1 of
msgid "slice the tensor with gaven start, end, step"
msgstr "crwdns121455:0crwdne121455:0"

#: megenginelite.tensor.LiteTensor.slice:3 of
msgid "silce begin index of each dim"
msgstr "crwdns121457:0crwdne121457:0"

#: megenginelite.tensor.LiteTensor.slice:4 of
msgid "silce end index of each dim"
msgstr "crwdns121459:0crwdne121459:0"

#: megenginelite.tensor.LiteTensor.slice:5 of
msgid "silce step of each dim"
msgstr "crwdns121461:0crwdne121461:0"

#: megenginelite.tensor.LiteTensor.to_numpy:1 of
msgid "get the buffer of the tensor"
msgstr "crwdns121463:0crwdne121463:0"

#: megenginelite.tensor.LiteTensor.update:1 of
msgid "update the member from C, this will auto used after slice, share"
msgstr "crwdns121465:0crwdne121465:0"

#: megenginelite.tensor.LiteLayout:2 of
msgid "Description of layout using in Lite. A Lite layout will be totally defined"
msgstr "crwdns121467:0crwdne121467:0"

#: megenginelite.tensor.LiteLayout:2 of
msgid "by shape and data type."
msgstr "crwdns121469:0crwdne121469:0"

#: megenginelite.tensor.LiteLayout:4 of
msgid "the shape of data."
msgstr "crwdns121471:0crwdne121471:0"

#: megenginelite.tensor.LiteLayout:5 of
msgid "data type."
msgstr "crwdns121473:0crwdne121473:0"

#: megenginelite.tensor.LiteLayout:13 of
msgid "实际案例"
msgstr "crwdns121475:0crwdne121475:0"

#: ../../docstring megenginelite.tensor.LiteLayout.data_type:1
#: megenginelite.tensor.LiteLayout.ndim:1 of
msgid "Structure/Union member"
msgstr "crwdns121477:0crwdne121477:0"

#~ msgid "the tensor to hold a block of data"
#~ msgstr ""

#~ msgid "get device of the tensor"
#~ msgstr ""

#~ msgid ""
#~ "get the data in the tensor, add"
#~ " share the data with a new "
#~ "numpy, and return the numpy arrray, "
#~ "be careful, the data in numpy is"
#~ " valid before the tensor memory is"
#~ " write again, such as LiteNetwok "
#~ "forward next time."
#~ msgstr ""

#~ msgid ""
#~ "reshape the tensor with data not "
#~ "change, only change the shape :param "
#~ "shape: int arrary of dst_shape"
#~ msgstr ""

#~ msgid ""
#~ "copy the data to the tensor param"
#~ " data: the data to copy to "
#~ "tensor, it should be list, "
#~ "numpy.ndarraya or ctypes with length"
#~ msgstr ""

#~ msgid ""
#~ "share the data to the tensor param"
#~ " data: the data will shared to "
#~ "the tensor, it should be a "
#~ "numpy.ndarray or ctypes data"
#~ msgstr ""

#~ msgid ""
#~ "share the same memory with the "
#~ "src_tensor, the self memory will be "
#~ "freed"
#~ msgstr ""

#~ msgid ""
#~ "slice the tensor with gaven start, "
#~ "end, step :param start: silce begin "
#~ "index of each dim :param end: "
#~ "silce end index of each dim :param"
#~ " step: silce step of each dim"
#~ msgstr ""

#~ msgid "the simple layout description"
#~ msgstr ""


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-20 12:44+0800\n"
"PO-Revision-Date: 2022-04-20 05:28\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/pylite/tensor.po\n"
"X-Crowdin-File-ID: 8444\n"
"Language: zh_TW\n"

#: ../../source/reference/pylite/tensor.rst:6
msgid "megenginelite.tensor"
msgstr "crwdns93026:0crwdne93026:0"

#: megenginelite.tensor.LiteTensor:1 of
msgid "the tensor to hold a block of data"
msgstr "crwdns93028:0crwdne93028:0"

#: megenginelite.tensor.LiteTensor.copy_from:1 of
msgid "copy memory form the src_tensor"
msgstr "crwdns93030:0crwdne93030:0"

#: megenginelite.tensor.LiteTensor.device_id:1 of
msgid "get device id of the tensor"
msgstr "crwdns93032:0crwdne93032:0"

#: megenginelite.tensor.LiteTensor.device_type:1 of
msgid "get device of the tensor"
msgstr "crwdns93034:0crwdne93034:0"

#: megenginelite.tensor.LiteTensor.fill_zero:1 of
msgid "fill the buffer memory with zero"
msgstr "crwdns93036:0crwdne93036:0"

#: megenginelite.tensor.LiteTensor.get_ctypes_memory:1 of
msgid "get the memory of the tensor, return c_void_p of the tensor memory"
msgstr "crwdns93038:0crwdne93038:0"

#: megenginelite.tensor.LiteTensor.get_data_by_share:1 of
msgid "get the data in the tensor, add share the data with a new numpy, and return the numpy arrray, be careful, the data in numpy is valid before the tensor memory is write again, such as LiteNetwok forward next time."
msgstr "crwdns93040:0crwdne93040:0"

#: megenginelite.tensor.LiteTensor.is_continue:1 of
msgid "whether the tensor memory is continue"
msgstr "crwdns93042:0crwdne93042:0"

#: megenginelite.tensor.LiteTensor.is_pinned_host:1 of
msgid "whether the tensor is pinned tensor"
msgstr "crwdns93044:0crwdne93044:0"

#: megenginelite.tensor.LiteTensor.nbytes:1 of
msgid "get the length of the meomry in byte"
msgstr "crwdns93046:0crwdne93046:0"

#: megenginelite.tensor.LiteTensor.reshape:1 of
msgid "reshape the tensor with data not change, only change the shape :param shape: int arrary of dst_shape"
msgstr "crwdns93048:0crwdne93048:0"

#: megenginelite.tensor.LiteTensor.set_data_by_copy:1 of
msgid "copy the data to the tensor param data: the data to copy to tensor, it should be list, numpy.ndarraya or ctypes with length"
msgstr "crwdns93050:0crwdne93050:0"

#: megenginelite.tensor.LiteTensor.set_data_by_share:1 of
msgid "share the data to the tensor param data: the data will shared to the tensor, it should be a numpy.ndarray or ctypes data"
msgstr "crwdns93052:0crwdne93052:0"

#: megenginelite.tensor.LiteTensor.share_memory_with:1 of
msgid "share the same memory with the src_tensor, the self memory will be freed"
msgstr "crwdns93054:0crwdne93054:0"

#: megenginelite.tensor.LiteTensor.slice:1 of
msgid "slice the tensor with gaven start, end, step :param start: silce begin index of each dim :param end: silce end index of each dim :param step: silce step of each dim"
msgstr "crwdns93056:0crwdne93056:0"

#: megenginelite.tensor.LiteTensor.to_numpy:1 of
msgid "get the buffer of the tensor"
msgstr "crwdns93058:0crwdne93058:0"

#: megenginelite.tensor.LiteTensor.update:1 of
msgid "update the member from C, this will auto used after slice, share"
msgstr "crwdns93060:0crwdne93060:0"

#: megenginelite.tensor.LiteLayout:1 of
msgid "the simple layout description"
msgstr "crwdns93062:0crwdne93062:0"

#: ../../docstring megenginelite.tensor.LiteLayout.data_type:1
#: megenginelite.tensor.LiteLayout.ndim:1 of
msgid "Structure/Union member"
msgstr "crwdns93064:0crwdne93064:0"


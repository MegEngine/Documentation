msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-07 03:12+0000\n"
"PO-Revision-Date: 2023-09-21 06:33\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/functional.po\n"
"X-Crowdin-File-ID: 9791\n"

#: ../../source/reference/functional.rst:6
msgid "megengine.functional"
msgstr "crwdns109053:0crwdne109053:0"

#: ../../source/reference/functional.rst:14
msgid "顾名思义，:mod:`megengine.functional` 模块中包含着所有与 Tensor 有关的计算接口："
msgstr "crwdns109055:0:mod:crwdne109055:0"

#: ../../source/reference/functional.rst:16
msgid "与神经网络（Neural Network）相关的算子统一封装在 :mod:`megengine.functional.nn` 中；"
msgstr "crwdns109057:0:mod:crwdne109057:0"

#: ../../source/reference/functional.rst:17
msgid "分布式算子统一封装在 :mod:`megengine.functional.distributed` 中，方便调用；"
msgstr "crwdns109059:0:mod:crwdne109059:0"

#: ../../source/reference/functional.rst:18
msgid "其它的常见算子均可在 :mod:`megengine.functional` 中直接调用；"
msgstr "crwdns109061:0:mod:crwdne109061:0"

#: ../../source/reference/functional.rst:22
msgid "用户指南中对于 :ref:`functional-guide` 有另外一套分类逻辑，可作为参考。"
msgstr "crwdns109063:0:ref:crwdne109063:0"

#: ../../source/reference/functional.rst:27
msgid "General tensor operations"
msgstr "crwdns109065:0crwdne109065:0"

#: ../../source/reference/functional.rst:31
msgid "该部分的 API 设计接纳了 `Python 数据 API 标准联盟 <https://data-apis.org/>`_ 中的倡导, 尽可能地向 NumPy API 靠拢。"
msgstr "crwdns109067:0crwdne109067:0"

#: ../../source/reference/functional.rst:37
msgid "Creation Functions"
msgstr "crwdns109069:0crwdne109069:0"

#: ../../source/reference/functional.rst:40
msgid ":ref:`tensor-creation`"
msgstr "crwdns109071:0:ref:crwdne109071:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`arange <megengine.functional.arange>`"
msgstr "crwdns109073:0crwdne109073:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns evenly spaced values within the half-open interval ``[start, stop)`` as a one-dimensional tensor."
msgstr "crwdns109075:0crwdne109075:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`linspace <megengine.functional.linspace>`"
msgstr "crwdns109077:0crwdne109077:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns evenly spaced numbers over a specified interval."
msgstr "crwdns109079:0crwdne109079:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`eye <megengine.functional.eye>`"
msgstr "crwdns109081:0crwdne109081:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a two-dimensional tensor with ones on the diagonal and zeros elsewhere."
msgstr "crwdns109083:0crwdne109083:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`diag <megengine.functional.diag>`"
msgstr "crwdns109085:0crwdne109085:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Extract a diagonal or construct a diagonal tensor."
msgstr "crwdns109087:0crwdne109087:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`zeros <megengine.functional.zeros>`"
msgstr "crwdns109089:0crwdne109089:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a new tensor having a specified shape and filled with zeros."
msgstr "crwdns109091:0crwdne109091:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`zeros_like <megengine.functional.zeros_like>`"
msgstr "crwdns109093:0crwdne109093:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a tensor filled with zeros with the same shape and data type as input tensor."
msgstr "crwdns109095:0crwdne109095:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`ones <megengine.functional.ones>`"
msgstr "crwdns109097:0crwdne109097:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a new tensor having a specified shape and filled with ones."
msgstr "crwdns109099:0crwdne109099:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`ones_like <megengine.functional.ones_like>`"
msgstr "crwdns109101:0crwdne109101:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a tensor filled with ones with the same shape and data type as input tensor."
msgstr "crwdns109103:0crwdne109103:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`full <megengine.functional.full>`"
msgstr "crwdns109105:0crwdne109105:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a new tensor having a specified shape and filled with given value."
msgstr "crwdns109107:0crwdne109107:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`full_like <megengine.functional.full_like>`"
msgstr "crwdns109109:0crwdne109109:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a tensor filled with given value with the same shape as input tensor."
msgstr "crwdns109111:0crwdne109111:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`complex <megengine.functional.complex>`"
msgstr "crwdns122005:0crwdne122005:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Constructs a complex tensor with its real part equal to real and its imaginary part equal to imag."
msgstr "crwdns122007:0crwdne122007:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`polar <megengine.functional.polar>`"
msgstr "crwdns122009:0crwdne122009:0"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Constructs a complex tensor whose elements are Cartesian coordinates corresponding to the polar coordinates with absolute value abs and angle angle."
msgstr "crwdns122011:0crwdne122011:0"

#: ../../source/reference/functional.rst:62
msgid "Manipulation Functions"
msgstr "crwdns109113:0crwdne109113:0"

#: ../../source/reference/functional.rst:65
msgid ":ref:`tensor-manipulation`"
msgstr "crwdns109115:0:ref:crwdne109115:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`copy <megengine.functional.copy>`"
msgstr "crwdns109117:0crwdne109117:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Copies tensor to another device."
msgstr "crwdns109119:0crwdne109119:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`reshape <megengine.functional.reshape>`"
msgstr "crwdns109121:0crwdne109121:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Reshapes a tensor without changing its data."
msgstr "crwdns109123:0crwdne109123:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`flatten <megengine.functional.flatten>`"
msgstr "crwdns109125:0crwdne109125:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Reshapes the tensor by flattening the sub-tensor from dimension ``start_axis`` to dimension ``end_axis``."
msgstr "crwdns109127:0crwdne109127:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`transpose <megengine.functional.transpose>`"
msgstr "crwdns109129:0crwdne109129:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Swaps shapes and strides according to given pattern."
msgstr "crwdns109131:0crwdne109131:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`swapaxes <megengine.functional.swapaxes>`"
msgstr "crwdns109133:0crwdne109133:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Interchange two axes of a tensor."
msgstr "crwdns109135:0crwdne109135:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`broadcast_to <megengine.functional.broadcast_to>`"
msgstr "crwdns109137:0crwdne109137:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Broadcasts a tensor to given shape."
msgstr "crwdns109139:0crwdne109139:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`expand_dims <megengine.functional.expand_dims>`"
msgstr "crwdns109141:0crwdne109141:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Adds dimension before given axis."
msgstr "crwdns109143:0crwdne109143:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`squeeze <megengine.functional.squeeze>`"
msgstr "crwdns109145:0crwdne109145:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Removes dimension of shape 1."
msgstr "crwdns109147:0crwdne109147:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`concat <megengine.functional.concat>`"
msgstr "crwdns109149:0crwdne109149:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Concat some tensors"
msgstr "crwdns109151:0crwdne109151:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`stack <megengine.functional.stack>`"
msgstr "crwdns109153:0crwdne109153:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Concats a sequence of tensors along a new axis."
msgstr "crwdns109155:0crwdne109155:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`split <megengine.functional.split>`"
msgstr "crwdns109157:0crwdne109157:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Splits the input tensor into several smaller tensors."
msgstr "crwdns109159:0crwdne109159:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`tile <megengine.functional.tile>`"
msgstr "crwdns109161:0crwdne109161:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Construct an array by repeating ``inp`` the number of times given by ``reps``."
msgstr "crwdns109163:0crwdne109163:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`repeat <megengine.functional.repeat>`"
msgstr "crwdns109165:0crwdne109165:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Repeat elements of an array."
msgstr "crwdns109167:0crwdne109167:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`roll <megengine.functional.roll>`"
msgstr "crwdns109169:0crwdne109169:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Roll the tensor along the given axis(or axes)."
msgstr "crwdns109171:0crwdne109171:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`real <megengine.functional.real>`"
msgstr "crwdns122013:0crwdne122013:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Returns a new tensor containing real values of the complex tensor."
msgstr "crwdns122015:0crwdne122015:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`imag <megengine.functional.imag>`"
msgstr "crwdns122017:0crwdne122017:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Returns a new tensor containing imaginary values of the complex tensor."
msgstr "crwdns122019:0crwdne122019:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`cross <megengine.functional.cross>`"
msgstr "crwdns122021:0crwdne122021:0"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Return the cross product of two (arrays of) vectors."
msgstr "crwdns122023:0crwdne122023:0"

#: ../../source/reference/functional.rst:92
msgid "Arithmetic operations"
msgstr "crwdns109173:0crwdne109173:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`add <megengine.functional.add>`"
msgstr "crwdns109175:0crwdne109175:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise addition."
msgstr "crwdns109177:0crwdne109177:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`sub <megengine.functional.sub>`"
msgstr "crwdns109179:0crwdne109179:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise subtraction."
msgstr "crwdns109181:0crwdne109181:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`mul <megengine.functional.mul>`"
msgstr "crwdns109183:0crwdne109183:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise multiplication."
msgstr "crwdns109185:0crwdne109185:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`div <megengine.functional.div>`"
msgstr "crwdns109187:0crwdne109187:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise division."
msgstr "crwdns109189:0crwdne109189:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`floor_div <megengine.functional.floor_div>`"
msgstr "crwdns109191:0crwdne109191:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise floor division."
msgstr "crwdns109193:0crwdne109193:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`neg <megengine.functional.neg>`"
msgstr "crwdns109195:0crwdne109195:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise negation."
msgstr "crwdns109197:0crwdne109197:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`abs <megengine.functional.abs>`"
msgstr "crwdns109199:0crwdne109199:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{abs}(x)` function."
msgstr "crwdns109201:0:math:crwdnd109201:0{abs}crwdne109201:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`sign <megengine.functional.sign>`"
msgstr "crwdns109203:0crwdne109203:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise sign."
msgstr "crwdns109205:0crwdne109205:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`pow <megengine.functional.pow>`"
msgstr "crwdns109207:0crwdne109207:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise power."
msgstr "crwdns109209:0crwdne109209:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`mod <megengine.functional.mod>`"
msgstr "crwdns109211:0crwdne109211:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{mod}(x, y)` function."
msgstr "crwdns109213:0:math:crwdnd109213:0{mod}crwdne109213:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`sqrt <megengine.functional.sqrt>`"
msgstr "crwdns109215:0crwdne109215:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{sqrt}(x)` function."
msgstr "crwdns109217:0:math:crwdnd109217:0{sqrt}crwdne109217:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`square <megengine.functional.square>`"
msgstr "crwdns109219:0crwdne109219:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`x^2` function."
msgstr "crwdns109221:0:math:crwdne109221:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`maximum <megengine.functional.maximum>`"
msgstr "crwdns109223:0crwdne109223:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise maximum of tensor elements."
msgstr "crwdns109225:0crwdne109225:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`minimum <megengine.functional.minimum>`"
msgstr "crwdns109227:0crwdne109227:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise minimum of tensor elements."
msgstr "crwdns109229:0crwdne109229:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`round <megengine.functional.round>`"
msgstr "crwdns109231:0crwdne109231:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{round}(x)` function."
msgstr "crwdns109233:0:math:crwdnd109233:0{round}crwdne109233:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`ceil <megengine.functional.ceil>`"
msgstr "crwdns109235:0crwdne109235:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\lceil x \\rceil` function."
msgstr "crwdns109237:0:math:crwdne109237:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`floor <megengine.functional.floor>`"
msgstr "crwdns109239:0crwdne109239:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\lfloor x \\rfloor` function."
msgstr "crwdns109241:0:math:crwdne109241:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`clip <megengine.functional.clip>`"
msgstr "crwdns109243:0crwdne109243:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise clipping function."
msgstr "crwdns109245:0crwdne109245:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`exp <megengine.functional.exp>`"
msgstr "crwdns109247:0crwdne109247:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`e^x` function."
msgstr "crwdns109249:0:math:crwdne109249:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`expm1 <megengine.functional.expm1>`"
msgstr "crwdns109251:0crwdne109251:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`e^x - 1` function."
msgstr "crwdns109253:0:math:crwdne109253:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`log <megengine.functional.log>`"
msgstr "crwdns109255:0crwdne109255:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{log}(x)` function."
msgstr "crwdns109257:0:math:crwdnd109257:0{log}crwdne109257:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`log1p <megengine.functional.log1p>`"
msgstr "crwdns109259:0crwdne109259:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\log(1 + x)` function."
msgstr "crwdns109261:0:math:crwdne109261:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`logaddexp <megengine.functional.logaddexp>`"
msgstr "crwdns109263:0crwdne109263:0"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\log(e^x + e^y)` function."
msgstr "crwdns109265:0:math:crwdne109265:0"

#: ../../source/reference/functional.rst:124
msgid "Trigonometric functions"
msgstr "crwdns109267:0crwdne109267:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`sin <megengine.functional.sin>`"
msgstr "crwdns109269:0crwdne109269:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\sin(x)` function."
msgstr "crwdns109271:0:math:crwdne109271:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`cos <megengine.functional.cos>`"
msgstr "crwdns109273:0crwdne109273:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\cos(x)` function."
msgstr "crwdns109275:0:math:crwdne109275:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`tan <megengine.functional.tan>`"
msgstr "crwdns109277:0crwdne109277:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\tan(x)` function."
msgstr "crwdns109279:0:math:crwdne109279:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`asin <megengine.functional.asin>`"
msgstr "crwdns109281:0crwdne109281:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arcsin(x)` function."
msgstr "crwdns109283:0:math:crwdne109283:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`acos <megengine.functional.acos>`"
msgstr "crwdns109285:0crwdne109285:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arccos(x)` function."
msgstr "crwdns109287:0:math:crwdne109287:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`atan <megengine.functional.atan>`"
msgstr "crwdns109289:0crwdne109289:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arctan(x)` function."
msgstr "crwdns109291:0:math:crwdne109291:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`atan2 <megengine.functional.atan2>`"
msgstr "crwdns109293:0crwdne109293:0"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arctan(\\frac{y}{x})` function."
msgstr "crwdns109295:0:math:crwdnd109295:0{y}crwdnd109295:0{x}crwdne109295:0"

#: ../../source/reference/functional.rst:140
msgid "Hyperbolic functions"
msgstr "crwdns109297:0crwdne109297:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`sinh <megengine.functional.sinh>`"
msgstr "crwdns109299:0crwdne109299:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\sinh(x)` function."
msgstr "crwdns109301:0:math:crwdne109301:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`cosh <megengine.functional.cosh>`"
msgstr "crwdns109303:0crwdne109303:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\cosh(x)` function."
msgstr "crwdns109305:0:math:crwdne109305:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`tanh <megengine.functional.tanh>`"
msgstr "crwdns109307:0crwdne109307:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\tanh(x)` function."
msgstr "crwdns109309:0:math:crwdne109309:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`acosh <megengine.functional.acosh>`"
msgstr "crwdns109311:0crwdne109311:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\cosh^{-1}(x)` function."
msgstr "crwdns109313:0:math:crwdnd109313:0{-1}crwdne109313:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`asinh <megengine.functional.asinh>`"
msgstr "crwdns109315:0crwdne109315:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\sinh^{-1}(x)` function."
msgstr "crwdns109317:0:math:crwdnd109317:0{-1}crwdne109317:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`atanh <megengine.functional.atanh>`"
msgstr "crwdns109319:0crwdne109319:0"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\tanh^{-1}(x)` function."
msgstr "crwdns109321:0:math:crwdnd109321:0{-1}crwdne109321:0"

#: ../../source/reference/functional.rst:155
msgid "Bit operations"
msgstr "crwdns109323:0crwdne109323:0"

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid ":py:obj:`left_shift <megengine.functional.left_shift>`"
msgstr "crwdns109325:0crwdne109325:0"

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid "Element-wise left shift."
msgstr "crwdns109327:0crwdne109327:0"

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid ":py:obj:`right_shift <megengine.functional.right_shift>`"
msgstr "crwdns109329:0crwdne109329:0"

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid "Element-wise right shift."
msgstr "crwdns109331:0crwdne109331:0"

#: ../../source/reference/functional.rst:166
msgid "Logic functions"
msgstr "crwdns109333:0crwdne109333:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`isnan <megengine.functional.isnan>`"
msgstr "crwdns109335:0crwdne109335:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise ``NaN`` check."
msgstr "crwdns109337:0crwdne109337:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`isinf <megengine.functional.isinf>`"
msgstr "crwdns109339:0crwdne109339:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise ``infinity`` check."
msgstr "crwdns109341:0crwdne109341:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_and <megengine.functional.logical_and>`"
msgstr "crwdns109343:0crwdne109343:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical AND."
msgstr "crwdns109345:0crwdne109345:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_not <megengine.functional.logical_not>`"
msgstr "crwdns109347:0crwdne109347:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical NOT."
msgstr "crwdns109349:0crwdne109349:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_or <megengine.functional.logical_or>`"
msgstr "crwdns109351:0crwdne109351:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical OR."
msgstr "crwdns109353:0crwdne109353:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_xor <megengine.functional.logical_xor>`"
msgstr "crwdns109355:0crwdne109355:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical XOR."
msgstr "crwdns109357:0crwdne109357:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`greater <megengine.functional.greater>`"
msgstr "crwdns109359:0crwdne109359:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise greater-than comparison."
msgstr "crwdns109361:0crwdne109361:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`greater_equal <megengine.functional.greater_equal>`"
msgstr "crwdns109363:0crwdne109363:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise greater-than-or-equal-to comparison."
msgstr "crwdns109365:0crwdne109365:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`less <megengine.functional.less>`"
msgstr "crwdns109367:0crwdne109367:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise less-than comparison."
msgstr "crwdns109369:0crwdne109369:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`less_equal <megengine.functional.less_equal>`"
msgstr "crwdns109371:0crwdne109371:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise less-than-or-equal-to comparison."
msgstr "crwdns109373:0crwdne109373:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`equal <megengine.functional.equal>`"
msgstr "crwdns109375:0crwdne109375:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise equality comparison."
msgstr "crwdns109377:0crwdne109377:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`not_equal <megengine.functional.not_equal>`"
msgstr "crwdns109379:0crwdne109379:0"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise inequality comparison."
msgstr "crwdns109381:0crwdne109381:0"

#: ../../source/reference/functional.rst:187
msgid "Statistical Functions"
msgstr "crwdns109383:0crwdne109383:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`sum <megengine.functional.sum>`"
msgstr "crwdns109385:0crwdne109385:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the sum of tensor elements over a given axis (or axes)."
msgstr "crwdns109387:0crwdne109387:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`cumsum <megengine.functional.cumsum>`"
msgstr "crwdns109389:0crwdne109389:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the cumulative sum of tensor elements over a given axis."
msgstr "crwdns109391:0crwdne109391:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`prod <megengine.functional.prod>`"
msgstr "crwdns109393:0crwdne109393:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the product of tensor elements over a given axis (or axes)."
msgstr "crwdns109395:0crwdne109395:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`mean <megengine.functional.mean>`"
msgstr "crwdns109397:0crwdne109397:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the mean of tensor elements over a given axis (or axes)."
msgstr "crwdns109399:0crwdne109399:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`min <megengine.functional.min>`"
msgstr "crwdns109401:0crwdne109401:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the minimum of tensor elements over a given axis (or axes)."
msgstr "crwdns109403:0crwdne109403:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`max <megengine.functional.max>`"
msgstr "crwdns109405:0crwdne109405:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the maximum of tensor elements over a given axis (or axes)."
msgstr "crwdns109407:0crwdne109407:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`var <megengine.functional.var>`"
msgstr "crwdns109409:0crwdne109409:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the variance of tensor elements over a given axis (or axes)."
msgstr "crwdns109411:0crwdne109411:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`std <megengine.functional.std>`"
msgstr "crwdns109413:0crwdne109413:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the standard deviation of tensor elements over a given axis (or axes)."
msgstr "crwdns109415:0crwdne109415:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`norm <megengine.functional.norm>`"
msgstr "crwdns109417:0crwdne109417:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the norm of tensor elements over a given axis."
msgstr "crwdns109419:0crwdne109419:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`normalize <megengine.functional.normalize>`"
msgstr "crwdns109421:0crwdne109421:0"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Performs :math:`L_p` normalization of input tensor along given axis."
msgstr "crwdns109423:0:math:crwdne109423:0"

#: ../../source/reference/functional.rst:205
msgid "想要返回 ``min``, ``max`` 的索引而不是元素值，请参考 :ref:`searching-functions`"
msgstr "crwdns109425:0:ref:crwdne109425:0"

#: ../../source/reference/functional.rst:210
msgid "Linear Algebra Functions"
msgstr "crwdns109427:0crwdne109427:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`dot <megengine.functional.dot>`"
msgstr "crwdns109429:0crwdne109429:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid "Computes dot-product of two vectors ``inp1`` and ``inp2``."
msgstr "crwdns109431:0crwdne109431:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`matinv <megengine.functional.matinv>`"
msgstr "crwdns109433:0crwdne109433:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid "Computes the inverse of a batch of matrices; input must has shape [..., n, n]."
msgstr "crwdns109435:0crwdne109435:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`matmul <megengine.functional.matmul>`"
msgstr "crwdns109437:0crwdne109437:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid "Performs a matrix multiplication of the matrices ``inp1`` and ``inp2``."
msgstr "crwdns109439:0crwdne109439:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`svd <megengine.functional.svd>`"
msgstr "crwdns109441:0crwdne109441:0"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid "Computes the singular value decomposition of a matrix (or a stack of matrices) ``inp``."
msgstr "crwdns109443:0crwdne109443:0"

#: ../../source/reference/functional.rst:223
msgid "Indexing Functions"
msgstr "crwdns109445:0crwdne109445:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid ":py:obj:`gather <megengine.functional.gather>`"
msgstr "crwdns109447:0crwdne109447:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid "Gathers data from input tensor on axis using index."
msgstr "crwdns109449:0crwdne109449:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid ":py:obj:`scatter <megengine.functional.scatter>`"
msgstr "crwdns109451:0crwdne109451:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid "Writes all values from the tensor source into input tensor at the indices specified in the index tensor."
msgstr "crwdns109453:0crwdne109453:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid ":py:obj:`cond_take <megengine.functional.cond_take>`"
msgstr "crwdns109455:0crwdne109455:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid "Takes elements from data if specific condition is satisfied on mask."
msgstr "crwdns109457:0crwdne109457:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid ":py:obj:`where <megengine.functional.where>`"
msgstr "crwdns109459:0crwdne109459:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid "Selects elements either from Tensor x or Tensor y, according to mask."
msgstr "crwdns109461:0crwdne109461:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid ":py:obj:`non_zero <megengine.functional.non_zero>`"
msgstr "crwdns122025:0crwdne122025:0"

#: ../../source/reference/functional.rst:233:<autosummary>:1
msgid "When as_tuple is False (default): Returns a tensor including the indices of all non-zero elements of Tensor condition."
msgstr "crwdns122027:0crwdne122027:0"

#: ../../source/reference/functional.rst:237
msgid "Searching Functions"
msgstr "crwdns109463:0crwdne109463:0"

#: ../../source/reference/functional.rst:244:<autosummary>:1
msgid ":py:obj:`argmin <megengine.functional.argmin>`"
msgstr "crwdns109465:0crwdne109465:0"

#: ../../source/reference/functional.rst:244:<autosummary>:1
msgid "Returns the indices of the minimum values along given axis."
msgstr "crwdns109467:0crwdne109467:0"

#: ../../source/reference/functional.rst:244:<autosummary>:1
msgid ":py:obj:`argmax <megengine.functional.argmax>`"
msgstr "crwdns109469:0crwdne109469:0"

#: ../../source/reference/functional.rst:244:<autosummary>:1
msgid "Returns the indices of the maximum values along given axis."
msgstr "crwdns109471:0crwdne109471:0"

#: ../../source/reference/functional.rst:248
msgid "Sorting Functions"
msgstr "crwdns109473:0crwdne109473:0"

#: ../../source/reference/functional.rst:256:<autosummary>:1
msgid ":py:obj:`sort <megengine.functional.sort>`"
msgstr "crwdns109475:0crwdne109475:0"

#: ../../source/reference/functional.rst:256:<autosummary>:1
msgid "Returns sorted tensor and the indices would sort the input tensor."
msgstr "crwdns109477:0crwdne109477:0"

#: ../../source/reference/functional.rst:256:<autosummary>:1
msgid ":py:obj:`argsort <megengine.functional.argsort>`"
msgstr "crwdns109479:0crwdne109479:0"

#: ../../source/reference/functional.rst:256:<autosummary>:1
msgid "Returns the indices that would sort the input tensor."
msgstr "crwdns109481:0crwdne109481:0"

#: ../../source/reference/functional.rst:256:<autosummary>:1
msgid ":py:obj:`topk <megengine.functional.topk>`"
msgstr "crwdns109483:0crwdne109483:0"

#: ../../source/reference/functional.rst:256:<autosummary>:1
msgid "Selects the ``Top-K`` (by default) smallest elements of 2d matrix by row."
msgstr "crwdns109485:0crwdne109485:0"

#: ../../source/reference/functional.rst:263
msgid "Metric functions"
msgstr "crwdns109487:0crwdne109487:0"

#: ../../source/reference/functional.rst:269:<autosummary>:1
msgid ":py:obj:`topk_accuracy <megengine.functional.topk_accuracy>`"
msgstr "crwdns109489:0crwdne109489:0"

#: ../../source/reference/functional.rst:269:<autosummary>:1
msgid "Calculates the classification accuracy given predicted logits and ground-truth labels."
msgstr "crwdns109491:0crwdne109491:0"

#: ../../source/reference/functional.rst:276
msgid "Neural network operations"
msgstr "crwdns109493:0crwdne109493:0"

#: ../../source/reference/functional.rst:281
msgid "Convolution functions"
msgstr "crwdns109495:0crwdne109495:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`conv1d <megengine.functional.nn.conv1d>`"
msgstr "crwdns109497:0crwdne109497:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "1D convolution operation."
msgstr "crwdns109499:0crwdne109499:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`conv2d <megengine.functional.nn.conv2d>`"
msgstr "crwdns109501:0crwdne109501:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "2D convolution operation."
msgstr "crwdns109503:0crwdne109503:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`conv3d <megengine.functional.nn.conv3d>`"
msgstr "crwdns109505:0crwdne109505:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "3D convolution operation."
msgstr "crwdns109507:0crwdne109507:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`local_conv2d <megengine.functional.nn.local_conv2d>`"
msgstr "crwdns109509:0crwdne109509:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "Applies a spatial convolution with untied kernels over an groupped channeled input 4D tensor."
msgstr "crwdns109511:0crwdne109511:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`conv_transpose2d <megengine.functional.nn.conv_transpose2d>`"
msgstr "crwdns109513:0crwdne109513:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "2D transposed convolution operation."
msgstr "crwdns109515:0crwdne109515:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`conv_transpose3d <megengine.functional.nn.conv_transpose3d>`"
msgstr "crwdns109517:0crwdne109517:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "3D transposed convolution operation."
msgstr "crwdns109519:0crwdne109519:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`deformable_conv2d <megengine.functional.nn.deformable_conv2d>`"
msgstr "crwdns109521:0crwdne109521:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "Deformable Convolution."
msgstr "crwdns109523:0crwdne109523:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`sliding_window <megengine.functional.nn.sliding_window>`"
msgstr "crwdns109525:0crwdne109525:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "Extracts sliding local blocks from a batched input tensor."
msgstr "crwdns109527:0crwdne109527:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid ":py:obj:`sliding_window_transpose <megengine.functional.nn.sliding_window_transpose>`"
msgstr "crwdns109529:0crwdne109529:0"

#: ../../source/reference/functional.rst:295:<autosummary>:1
msgid "Sum over the sliding windows on the corresponding input location."
msgstr "crwdns109531:0crwdne109531:0"

#: ../../source/reference/functional.rst:299
msgid "Pooling functions"
msgstr "crwdns109533:0crwdne109533:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid ":py:obj:`avg_pool2d <megengine.functional.nn.avg_pool2d>`"
msgstr "crwdns109535:0crwdne109535:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid "Applies 2D average pooling over an input tensor."
msgstr "crwdns109537:0crwdne109537:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid ":py:obj:`max_pool2d <megengine.functional.nn.max_pool2d>`"
msgstr "crwdns109539:0crwdne109539:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid "Applies a 2D max pooling over an input tensor."
msgstr "crwdns109541:0crwdne109541:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid ":py:obj:`adaptive_avg_pool2d <megengine.functional.nn.adaptive_avg_pool2d>`"
msgstr "crwdns109543:0crwdne109543:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid "Applies a 2D average adaptive pooling over an input."
msgstr "crwdns109545:0crwdne109545:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid ":py:obj:`adaptive_max_pool2d <megengine.functional.nn.adaptive_max_pool2d>`"
msgstr "crwdns109547:0crwdne109547:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid "Applies a 2D max adaptive pooling over an input."
msgstr "crwdns109549:0crwdne109549:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid ":py:obj:`deformable_psroi_pooling <megengine.functional.nn.deformable_psroi_pooling>`"
msgstr "crwdns109551:0crwdne109551:0"

#: ../../source/reference/functional.rst:309:<autosummary>:1
msgid "Deformable PSROI(Position Sensitive Region of Interest) Pooling."
msgstr "crwdns109553:0crwdne109553:0"

#: ../../source/reference/functional.rst:313
msgid "Non-linear activation functions"
msgstr "crwdns109555:0crwdne109555:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`sigmoid <megengine.functional.nn.sigmoid>`"
msgstr "crwdns109557:0crwdne109557:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise `1 / ( 1 + exp( -x ) )`."
msgstr "crwdns109559:0crwdne109559:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`hsigmoid <megengine.functional.nn.hsigmoid>`"
msgstr "crwdns109561:0crwdne109561:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise `relu6(x + 3) / 6`."
msgstr "crwdns109563:0crwdne109563:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`hswish <megengine.functional.nn.hswish>`"
msgstr "crwdns109565:0crwdne109565:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise `x * relu6(x + 3) / 6`."
msgstr "crwdns109567:0crwdne109567:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`relu <megengine.functional.nn.relu>`"
msgstr "crwdns109569:0crwdne109569:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise `max(x, 0)`."
msgstr "crwdns109571:0crwdne109571:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`relu6 <megengine.functional.nn.relu6>`"
msgstr "crwdns109573:0crwdne109573:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise `min(max(x, 0), 6)`."
msgstr "crwdns109575:0crwdne109575:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`prelu <megengine.functional.nn.prelu>`"
msgstr "crwdns109577:0crwdne109577:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise `max(x, 0) + y * min(x, 0)`."
msgstr "crwdns109579:0crwdne109579:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`leaky_relu <megengine.functional.nn.leaky_relu>`"
msgstr "crwdns109581:0crwdne109581:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Element-wise LeakyReLU function"
msgstr "crwdns109583:0crwdne109583:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`silu <megengine.functional.nn.silu>`"
msgstr "crwdns109585:0crwdne109585:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Applies the element-wise Sigmoid Linear Unit function, i.e. `x * sigmoid(x)`."
msgstr "crwdns109587:0crwdne109587:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`gelu <megengine.functional.nn.gelu>`"
msgstr "crwdns109589:0crwdne109589:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Applies the element-wise function:"
msgstr "crwdns109591:0crwdne109591:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`softplus <megengine.functional.nn.softplus>`"
msgstr "crwdns109593:0crwdne109593:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`softmax <megengine.functional.nn.softmax>`"
msgstr "crwdns109595:0crwdne109595:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Applies a :math:`\\text{softmax}(x)` function."
msgstr "crwdns109597:0:math:crwdnd109597:0{softmax}crwdne109597:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`logsoftmax <megengine.functional.nn.logsoftmax>`"
msgstr "crwdns109599:0crwdne109599:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Applies the :math:`\\log(\\text{softmax}(x))` function to an n-dimensional input tensor."
msgstr "crwdns109601:0:math:crwdnd109601:0{softmax}crwdne109601:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`logsigmoid <megengine.functional.nn.logsigmoid>`"
msgstr "crwdns109603:0crwdne109603:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid ":py:obj:`logsumexp <megengine.functional.nn.logsumexp>`"
msgstr "crwdns109605:0crwdne109605:0"

#: ../../source/reference/functional.rst:332:<autosummary>:1
msgid "Calculates the logarithm of the inputs' exponential sum along the given :attr:`axis`."
msgstr "crwdns109607:0:attr:crwdne109607:0"

#: ../../source/reference/functional.rst:336
msgid "Normalization functions"
msgstr "crwdns109609:0crwdne109609:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid ":py:obj:`batch_norm <megengine.functional.nn.batch_norm>`"
msgstr "crwdns109611:0crwdne109611:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid "Applies batch normalization to the input."
msgstr "crwdns109613:0crwdne109613:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid ":py:obj:`sync_batch_norm <megengine.functional.nn.sync_batch_norm>`"
msgstr "crwdns109615:0crwdne109615:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid "Applies synchronized batch normalization to the input."
msgstr "crwdns109617:0crwdne109617:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid ":py:obj:`layer_norm <megengine.functional.nn.layer_norm>`"
msgstr "crwdns109619:0crwdne109619:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid "Applies layer normalization to the input."
msgstr "crwdns109621:0crwdne109621:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid ":py:obj:`local_response_norm <megengine.functional.nn.local_response_norm>`"
msgstr "crwdns109623:0crwdne109623:0"

#: ../../source/reference/functional.rst:345:<autosummary>:1
msgid "Apply local response normalization to the input tensor."
msgstr "crwdns109625:0crwdne109625:0"

#: ../../source/reference/functional.rst:349
msgid "Linear functions"
msgstr "crwdns109627:0crwdne109627:0"

#: ../../source/reference/functional.rst:355:<autosummary>:1
msgid ":py:obj:`linear <megengine.functional.nn.linear>`"
msgstr "crwdns109629:0crwdne109629:0"

#: ../../source/reference/functional.rst:355:<autosummary>:1
msgid "Applies a linear transformation to the input tensor."
msgstr "crwdns109631:0crwdne109631:0"

#: ../../source/reference/functional.rst:359
msgid "multi-head attention functions"
msgstr "crwdns122029:0crwdne122029:0"

#: ../../source/reference/functional.rst:365:<autosummary>:1
msgid ":py:obj:`multi_head_attention <megengine.functional.nn.multi_head_attention>`"
msgstr "crwdns122031:0crwdne122031:0"

#: ../../source/reference/functional.rst:365:<autosummary>:1
msgid "Allows the model to jointly attend to information from different representation subspaces."
msgstr "crwdns122033:0crwdne122033:0"

#: ../../source/reference/functional.rst:369
msgid "Dropout functions"
msgstr "crwdns109633:0crwdne109633:0"

#: ../../source/reference/functional.rst:375:<autosummary>:1
msgid ":py:obj:`dropout <megengine.functional.nn.dropout>`"
msgstr "crwdns109635:0crwdne109635:0"

#: ../../source/reference/functional.rst:375:<autosummary>:1
msgid "Returns a new tensor where each of the elements are randomly set to zero with probability P = ``drop_prob``."
msgstr "crwdns109637:0crwdne109637:0"

#: ../../source/reference/functional.rst:379
msgid "Sparse functions"
msgstr "crwdns109639:0crwdne109639:0"

#: ../../source/reference/functional.rst:387:<autosummary>:1
msgid ":py:obj:`one_hot <megengine.functional.nn.one_hot>`"
msgstr "crwdns109641:0crwdne109641:0"

#: ../../source/reference/functional.rst:387:<autosummary>:1
msgid "Performs one-hot encoding for the input tensor."
msgstr "crwdns109643:0crwdne109643:0"

#: ../../source/reference/functional.rst:387:<autosummary>:1
msgid ":py:obj:`indexing_one_hot <megengine.functional.nn.indexing_one_hot>`"
msgstr "crwdns109645:0crwdne109645:0"

#: ../../source/reference/functional.rst:387:<autosummary>:1
msgid "One-hot indexing for some axes."
msgstr "crwdns109647:0crwdne109647:0"

#: ../../source/reference/functional.rst:387:<autosummary>:1
msgid ":py:obj:`embedding <megengine.functional.nn.embedding>`"
msgstr "crwdns109649:0crwdne109649:0"

#: ../../source/reference/functional.rst:387:<autosummary>:1
msgid "Applies lookup table for embedding."
msgstr "crwdns109651:0crwdne109651:0"

#: ../../source/reference/functional.rst:391
msgid "Loss functions"
msgstr "crwdns109653:0crwdne109653:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid ":py:obj:`l1_loss <megengine.functional.nn.l1_loss>`"
msgstr "crwdns109655:0crwdne109655:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid "Calculates the mean absolute error (MAE) between each element in the pred :math:`x` and label :math:`y`."
msgstr "crwdns109657:0:math:crwdnd109657:0:math:crwdne109657:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid ":py:obj:`square_loss <megengine.functional.nn.square_loss>`"
msgstr "crwdns109659:0crwdne109659:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid "Calculates the mean squared error (squared L2 norm) between each element in the pred :math:`x` and label :math:`y`."
msgstr "crwdns109661:0:math:crwdnd109661:0:math:crwdne109661:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid ":py:obj:`hinge_loss <megengine.functional.nn.hinge_loss>`"
msgstr "crwdns109663:0crwdne109663:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid "Caculates the hinge loss which is often used in SVM."
msgstr "crwdns109665:0crwdne109665:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid ":py:obj:`binary_cross_entropy <megengine.functional.nn.binary_cross_entropy>`"
msgstr "crwdns109667:0crwdne109667:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid "Computes the binary cross entropy loss (using logits by default)."
msgstr "crwdns109669:0crwdne109669:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid ":py:obj:`cross_entropy <megengine.functional.nn.cross_entropy>`"
msgstr "crwdns109671:0crwdne109671:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid "Computes the multi-class cross entropy loss (using logits by default)."
msgstr "crwdns109673:0crwdne109673:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid ":py:obj:`ctc_loss <megengine.functional.nn.ctc_loss>`"
msgstr "crwdns109675:0crwdne109675:0"

#: ../../source/reference/functional.rst:402:<autosummary>:1
msgid "The Connectionist Temporal Classification loss."
msgstr "crwdns109677:0crwdne109677:0"

#: ../../source/reference/functional.rst:406
msgid "Vision functions"
msgstr "crwdns109679:0crwdne109679:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`cvt_color <megengine.functional.nn.cvt_color>`"
msgstr "crwdns109681:0crwdne109681:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Convert images from one format to another"
msgstr "crwdns109683:0crwdne109683:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`pad <megengine.functional.nn.pad>`"
msgstr "crwdns109685:0crwdne109685:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Pads the input tensor."
msgstr "crwdns109687:0crwdne109687:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`pixel_shuffle <megengine.functional.nn.pixel_shuffle>`"
msgstr "crwdns109689:0crwdne109689:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Rearranges elements in a tensor of shape `(..., C * r^2, H, W)` to a tensor of shape `(..., C, H * r, W * r)`, where `r` is an upscale factor, where `...` is zero or more batch dimensions."
msgstr "crwdns109691:0crwdne109691:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`interpolate <megengine.functional.nn.interpolate>`"
msgstr "crwdns109693:0crwdne109693:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Down/up samples the input tensor to either the given size or with the given scale_factor."
msgstr "crwdns109695:0crwdne109695:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`remap <megengine.functional.nn.remap>`"
msgstr "crwdns109697:0crwdne109697:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Applies remap transformation to batched 2D images."
msgstr "crwdns109699:0crwdne109699:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`warp_affine <megengine.functional.nn.warp_affine>`"
msgstr "crwdns109701:0crwdne109701:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Batched affine transformation on 2D images."
msgstr "crwdns109703:0crwdne109703:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`warp_perspective <megengine.functional.nn.warp_perspective>`"
msgstr "crwdns109705:0crwdne109705:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Applies perspective transformation to batched 2D images."
msgstr "crwdns109707:0crwdne109707:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`roi_pooling <megengine.functional.nn.roi_pooling>`"
msgstr "crwdns109709:0crwdne109709:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Applies RoI (Region of Interest) pooling on input feature, as described in Faster RCNN."
msgstr "crwdns109711:0crwdne109711:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`roi_align <megengine.functional.nn.roi_align>`"
msgstr "crwdns109713:0crwdne109713:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Applies RoI (Region of Interest) align on input feature, as described in Mask R-CNN."
msgstr "crwdns109715:0crwdne109715:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`nms <megengine.functional.nn.nms>`"
msgstr "crwdns109717:0crwdne109717:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Performs non-maximum suppression (NMS) on the boxes according to their intersection-over-union(IoU)."
msgstr "crwdns109719:0crwdne109719:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`correlation <megengine.functional.nn.correlation>`"
msgstr "crwdns109721:0crwdne109721:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Applies correlation to inputs."
msgstr "crwdns109723:0crwdne109723:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid ":py:obj:`nvof <megengine.functional.nn.nvof>`"
msgstr "crwdns109725:0crwdne109725:0"

#: ../../source/reference/functional.rst:423:<autosummary>:1
msgid "Implements NVIDIA Optical Flow SDK."
msgstr "crwdns109727:0crwdne109727:0"

#: ../../source/reference/functional.rst:430
msgid "Quantized functions"
msgstr "crwdns109729:0crwdne109729:0"

#: ../../source/reference/functional.rst:438:<autosummary>:1
msgid ":py:obj:`conv_bias_activation <megengine.functional.quantized.conv_bias_activation>`"
msgstr "crwdns109731:0crwdne109731:0"

#: ../../source/reference/functional.rst:438:<autosummary>:1
msgid "Convolution bias with activation operation, only for inference."
msgstr "crwdns109733:0crwdne109733:0"

#: ../../source/reference/functional.rst:438:<autosummary>:1
msgid ":py:obj:`batch_conv_bias_activation <megengine.functional.quantized.batch_conv_bias_activation>`"
msgstr "crwdns109735:0crwdne109735:0"

#: ../../source/reference/functional.rst:438:<autosummary>:1
msgid "Batch convolution bias with activation operation, only for inference."
msgstr "crwdns109737:0crwdne109737:0"

#: ../../source/reference/functional.rst:438:<autosummary>:1
msgid ":py:obj:`conv_transpose2d <megengine.functional.quantized.conv_transpose2d>`"
msgstr "crwdns109739:0crwdne109739:0"

#: ../../source/reference/functional.rst:438:<autosummary>
msgid "rtype"
msgstr "crwdns109741:0crwdne109741:0"

#: ../../source/reference/functional.rst:438:<autosummary>:1
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr "crwdns109743:0crwdne109743:0"

#: ../../source/reference/functional.rst:445
msgid "Distributed functions"
msgstr "crwdns109745:0crwdne109745:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`all_gather <megengine.functional.distributed.all_gather>`"
msgstr "crwdns109747:0crwdne109747:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Gather tensors across the specified group and concat them at first dimension."
msgstr "crwdns109749:0crwdne109749:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`all_reduce_max <megengine.functional.distributed.all_reduce_max>`"
msgstr "crwdns109751:0crwdne109751:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Reduce tensors with max operation on each value across the specified group."
msgstr "crwdns109753:0crwdne109753:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`all_reduce_min <megengine.functional.distributed.all_reduce_min>`"
msgstr "crwdns109755:0crwdne109755:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Reduce tensors with min operation on each value across the specified group."
msgstr "crwdns109757:0crwdne109757:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`all_reduce_sum <megengine.functional.distributed.all_reduce_sum>`"
msgstr "crwdns109759:0crwdne109759:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Reduce tensors with sum operation on each value across the specified group."
msgstr "crwdns109761:0crwdne109761:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`all_to_all <megengine.functional.distributed.all_to_all>`"
msgstr "crwdns109763:0crwdne109763:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Each process scatter input tensor to all processes and return gathered tensor."
msgstr "crwdns109765:0crwdne109765:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`broadcast <megengine.functional.distributed.broadcast>`"
msgstr "crwdns109767:0crwdne109767:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Broadcast tensor data from root process to others."
msgstr "crwdns109769:0crwdne109769:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`reduce_scatter_sum <megengine.functional.distributed.reduce_scatter_sum>`"
msgstr "crwdns109771:0crwdne109771:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Reduce tensors across the specified group by sum and split them at first dimension."
msgstr "crwdns109773:0crwdne109773:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`collective_comm <megengine.functional.distributed.collective_comm>`"
msgstr "crwdns109775:0crwdne109775:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Helper function for applying collective communication functions."
msgstr "crwdns109777:0crwdne109777:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`remote_send <megengine.functional.distributed.remote_send>`"
msgstr "crwdns109779:0crwdne109779:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Send tensor to another process."
msgstr "crwdns109781:0crwdne109781:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`remote_recv <megengine.functional.distributed.remote_recv>`"
msgstr "crwdns109783:0crwdne109783:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Receive a tensor from another process."
msgstr "crwdns109785:0crwdne109785:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`reduce_sum <megengine.functional.distributed.reduce_sum>`"
msgstr "crwdns109787:0crwdne109787:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Reduce tensor data across the specified group by sum."
msgstr "crwdns109789:0crwdne109789:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`gather <megengine.functional.distributed.gather>`"
msgstr "crwdns109791:0crwdne109791:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Gather tensors across the specified group."
msgstr "crwdns109793:0crwdne109793:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid ":py:obj:`scatter <megengine.functional.distributed.scatter>`"
msgstr "crwdns109795:0crwdne109795:0"

#: ../../source/reference/functional.rst:463:<autosummary>:1
msgid "Split tensor in root process at first dimension."
msgstr "crwdns109797:0crwdne109797:0"

#: ../../source/reference/functional.rst:470
msgid "External functions"
msgstr "crwdns109799:0crwdne109799:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid ":py:obj:`extern_opr_subgraph <megengine.functional.external.extern_opr_subgraph>`"
msgstr "crwdns109801:0crwdne109801:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid "Load a serialized extern opr subgraph and fake execute the operator."
msgstr "crwdns109803:0crwdne109803:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid ":py:obj:`tensorrt_runtime_opr <megengine.functional.external.tensorrt_runtime_opr>`"
msgstr "crwdns109805:0crwdne109805:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid ":py:obj:`cambricon_runtime_opr <megengine.functional.external.cambricon_runtime_opr>`"
msgstr "crwdns109807:0crwdne109807:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid "Load a serialized Cambricon model as a runtime operator in MegEngine."
msgstr "crwdns109809:0crwdne109809:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid ":py:obj:`atlas_runtime_opr <megengine.functional.external.atlas_runtime_opr>`"
msgstr "crwdns109811:0crwdne109811:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid "Load a serialized Atlas model as a runtime operator in MegEngine."
msgstr "crwdns109813:0crwdne109813:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid ":py:obj:`magicmind_runtime_opr <megengine.functional.external.magicmind_runtime_opr>`"
msgstr "crwdns109815:0crwdne109815:0"

#: ../../source/reference/functional.rst:479:<autosummary>:1
msgid "Load a serialized MagicMind model as a runtime operator in MegEngine."
msgstr "crwdns109817:0crwdne109817:0"

#~ msgid "tensor 子模块"
#~ msgstr "tensor 子模块"

#~ msgid "elemwise 子模块"
#~ msgstr "elemwise 子模块"

#~ msgid "基本运算"
#~ msgstr "基本运算"

#~ msgid "math 子模块"
#~ msgstr "math 子模块"

#~ msgid "条件计算"
#~ msgstr "条件计算"

#~ msgid "nn 子模块"
#~ msgstr "nn 子模块"

#~ msgid "loss 子模块"
#~ msgstr "loss 子模块"

#~ msgid "metric 子模块"
#~ msgstr "metric 子模块"

#~ msgid "distributed 子模块"
#~ msgstr "distributed 子模块"

#~ msgid "vision 模块"
#~ msgstr "vision 模块"

#~ msgid "函数式（Functional）"
#~ msgstr "函数式（Functional）"

#~ msgid "基础算子"
#~ msgstr ""

#~ msgid "创建张量"
#~ msgstr "创建张量"

#~ msgid "数值范围"
#~ msgstr ""

#~ msgid "处理张量"
#~ msgstr "处理张量"

#~ msgid "改变张量形状"
#~ msgstr ""

#~ msgid "转置操作"
#~ msgstr ""

#~ msgid "改变张量维度"
#~ msgstr ""

#~ msgid "拼接张量"
#~ msgstr ""

#~ msgid "切割张量"
#~ msgstr ""

#~ msgid "存取张量"
#~ msgstr ""

#~ msgid "重复张量"
#~ msgstr ""

#~ msgid "算术运算"
#~ msgstr ""

#~ msgid "舍入运算"
#~ msgstr ""

#~ msgid "指数与对数运算"
#~ msgstr ""

#~ msgid "三角运算"
#~ msgstr "三角运算"

#~ msgid "双曲函数"
#~ msgstr ""

#~ msgid "位运算"
#~ msgstr "位运算"

#~ msgid "逻辑运算"
#~ msgstr "逻辑运算"

#~ msgid "比较运算"
#~ msgstr "比较运算"

#~ msgid "归约计算"
#~ msgstr "归约计算"

#~ msgid "线性代数"
#~ msgstr "线性代数"

#~ msgid "概率统计"
#~ msgstr "概率统计"

#~ msgid "排序与搜索"
#~ msgstr ""

#~ msgid "杂项"
#~ msgstr ""

#~ msgid "神经网络算子"
#~ msgstr ""

#~ msgid "卷积函数"
#~ msgstr "卷积函数"

#~ msgid "池化函数"
#~ msgstr "池化函数"

#~ msgid "非线性激活函数"
#~ msgstr "非线性激活函数"

#~ msgid "归一化函数"
#~ msgstr "归一化函数"

#~ msgid "线性函数"
#~ msgstr "线性函数"

#~ msgid "随机失活函数"
#~ msgstr "随机失活函数"

#~ msgid "稀疏函数"
#~ msgstr "稀疏函数"

#~ msgid "损失函数"
#~ msgstr "随机失活函数"

#~ msgid ""
#~ "Calculates the mean absolute error (MAE)"
#~ " between each element in the pred "
#~ ":math:`x` and label :math:`y`."
#~ msgstr "计算预测值 :math:`x` 和标签值 :math:`y` 的每个元素之间的平均绝对误差(MAE)。"

#~ msgid "评估指标"
#~ msgstr ""

#~ msgid "计算机视觉"
#~ msgstr ""

#~ msgid "分布式算子"
#~ msgstr ""

#~ msgid "General Operations"
#~ msgstr ""

#~ msgid "Tensor creation"
#~ msgstr ""

#~ msgid "Tensor manipulation"
#~ msgstr ""

#~ msgid "Changing tensor shape"
#~ msgstr ""

#~ msgid "Transpose-like"
#~ msgstr ""

#~ msgid "Changing number of dimensions"
#~ msgstr ""

#~ msgid "Joining, Splitting, Tiling and others"
#~ msgstr ""

#~ msgid "Rounding"
#~ msgstr ""

#~ msgid "Exponents and logarithms"
#~ msgstr ""

#~ msgid "Comparison"
#~ msgstr ""

#~ msgid "Sums, products and others"
#~ msgstr ""

#~ msgid "Matrix operations"
#~ msgstr ""

#~ msgid "Statistics"
#~ msgstr ""

#~ msgid "Performs :math:`L_p` normalization of input tensor along"
#~ msgstr ""

#~ msgid "Sorting and searching"
#~ msgstr ""

#~ msgid ""
#~ "Applies a :math:`   ext{softmax}(x)` function."
#~ " :math:`      ext{softmax}(x)` is defined "
#~ "as:"
#~ msgstr ""

#~ msgid ""
#~ "Applies the :math:`\\log(    ext{softmax}(x))` "
#~ "function to an n-dimensional"
#~ msgstr ""

#~ msgid "Calculates the mean absolute error (MAE) between"
#~ msgstr ""

#~ msgid "Calculates the mean squared error (squared L2 norm) between"
#~ msgstr ""

#~ msgid "Searching Functions"
#~ msgstr ""

#~ msgid "Sorting Functions"
#~ msgstr ""

#~ msgid "Standard tensor operations"
#~ msgstr ""

#~ msgid "Returns a tensor with given shape and value."
#~ msgstr "返回一个给定形状和值的张量。"

#~ msgid "Element-wise `subtraction`."
#~ msgstr "逐元素相减。"

#~ msgid "Returns a new tensor with the square of the elements of input tensor."
#~ msgstr "返回一个包含输入张量中各元素平方的新的张量"

#~ msgid "Comparison functions"
#~ msgstr ""

#~ msgid "Searching and Sorting Functions"
#~ msgstr ""

#~ msgid "Applies the element-wise PReLU function."
#~ msgstr "逐元素计算 PReLU."

#~ msgid ":obj:`correlation <megengine.functional.vision.correlation>`"
#~ msgstr ""

#~ msgid ":obj:`nvof <megengine.functional.vision.nvof>`"
#~ msgstr ""

#~ msgid "Create all_reduce_max operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_reduce_max 算子。"

#~ msgid "Create all_reduce_min operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_reduce_min 算子。"

#~ msgid "Create all_reduce_sum operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_reduce_sum 算子。"

#~ msgid "Create broadcast operator for collective communication."
#~ msgstr "创建用于聚合通信的广播算子。"

#~ msgid "Create all_gather operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_gather 算子。"

#~ msgid "Create all_to_all operator for collective communication."
#~ msgstr "创建用于聚合通信 all_to_all 算子。"

#~ msgid "Create reduce_sum operator for collective communication."
#~ msgstr "创建用于聚合通信的 reduce_sum 算子"

#~ msgid "Create gather operator for collective communication."
#~ msgstr "创建用于聚合通信的 gather 算子。"

#~ msgid "Create scatter operator for collective communication."
#~ msgstr "创建用于聚合通信的 scatter 算子。"

#~ msgid "Create reduce_scatter_sum operator for collective communication."
#~ msgstr "创建用于聚合通信的 reduce_scatter_sum 算子"

#~ msgid ""
#~ "Returns the execution strategy of "
#~ ":class:`~.Conv2d` and :func:`~.matmul`"
#~ msgstr ""

#~ msgid "Sets the execution strategy of :class:`~.Conv2d` and :func:`~.matmul`"
#~ msgstr ""

#~ msgid ""
#~ "Returns a tensor with values from "
#~ "start to stop with adjacent interval "
#~ "step."
#~ msgstr "返回一个数值从 `start` 到  `stop` ，相邻间隔为 `step` 的张量。"

#~ msgid "Returns a zero tensor with given shape."
#~ msgstr "根据给定形状返回元素全为 0 的 Tensor"

#~ msgid "Returns a zero tensor with the same shape as input tensor."
#~ msgstr "返回一个和参数同维度，且数值全为 0 的 Tensor"

#~ msgid "Returns a ones tensor with given shape."
#~ msgstr "返回一个具有给定形状的全1张量。"

#~ msgid "Returns a ones tensor with the same shape as input tensor."
#~ msgstr "返回一个与输入张量形状相同的全1张量"

#~ msgid ""
#~ "Reshapes a tensor to given target "
#~ "shape; total number of logical elements"
#~ " must remain unchanged"
#~ msgstr "将一个张量重塑为给定的目标形状；逻辑元素的总数必须保持不变"

#~ msgid "Element-wise `multiplication`."
#~ msgstr "逐元素相乘。"

#~ msgid "Reduce tensors across the specified group by max."
#~ msgstr ""

#~ msgid "Reduce tensors across the specified group by min."
#~ msgstr ""

#~ msgid "Reduce tensors across the specified group by sum."
#~ msgstr ""

#~ msgid ":obj:`logaddexp <megengine.functional.logaddexp>`"
#~ msgstr ""

#~ msgid ":obj:`diag <megengine.functional.diag>`"
#~ msgstr ""

#~ msgid "Computes the singular value decompositions of input matrix."
#~ msgstr "对输入矩阵 ``inp`` 进行奇异值分解。"

#~ msgid ":obj:`conv1d <megengine.functional.nn.conv1d>`"
#~ msgstr ""

#~ msgid ":obj:`conv2d <megengine.functional.nn.conv2d>`"
#~ msgstr ""

#~ msgid ":obj:`conv3d <megengine.functional.nn.conv3d>`"
#~ msgstr ""

#~ msgid ":obj:`local_conv2d <megengine.functional.nn.local_conv2d>`"
#~ msgstr ""

#~ msgid ":obj:`conv_transpose2d <megengine.functional.nn.conv_transpose2d>`"
#~ msgstr ""

#~ msgid ":obj:`conv_transpose3d <megengine.functional.nn.conv_transpose3d>`"
#~ msgstr ""

#~ msgid ":obj:`deformable_conv2d <megengine.functional.nn.deformable_conv2d>`"
#~ msgstr ""

#~ msgid ":obj:`sliding_window <megengine.functional.nn.sliding_window>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`sliding_window_transpose "
#~ "<megengine.functional.nn.sliding_window_transpose>`"
#~ msgstr ""

#~ msgid ":obj:`avg_pool2d <megengine.functional.nn.avg_pool2d>`"
#~ msgstr ""

#~ msgid ":obj:`max_pool2d <megengine.functional.nn.max_pool2d>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`adaptive_avg_pool2d "
#~ "<megengine.functional.nn.adaptive_avg_pool2d>`"
#~ msgstr ""

#~ msgid ":obj:`topk_accuracy <megengine.functional.nn.topk_accuracy>`"
#~ msgstr ""

#~ msgid ":obj:`cvt_color <megengine.functional.nn.cvt_color>`"
#~ msgstr ""

#~ msgid ":obj:`pad <megengine.functional.nn.pad>`"
#~ msgstr ""

#~ msgid ""
#~ "Pad is python warpper for padding "
#~ "opr in megbrain, can padding in "
#~ "random one of the max 7 "
#~ "dimensions."
#~ msgstr ""

#~ msgid ":obj:`pixel_shuffle <megengine.functional.nn.pixel_shuffle>`"
#~ msgstr ""

#~ msgid ":obj:`interpolate <megengine.functional.nn.interpolate>`"
#~ msgstr ""

#~ msgid ":obj:`remap <megengine.functional.nn.remap>`"
#~ msgstr ""

#~ msgid ":obj:`warp_affine <megengine.functional.nn.warp_affine>`"
#~ msgstr ""

#~ msgid ":obj:`warp_perspective <megengine.functional.nn.warp_perspective>`"
#~ msgstr ""

#~ msgid ":obj:`roi_pooling <megengine.functional.nn.roi_pooling>`"
#~ msgstr ""

#~ msgid ":obj:`roi_align <megengine.functional.nn.roi_align>`"
#~ msgstr ""

#~ msgid ":obj:`nms <megengine.functional.nn.nms>`"
#~ msgstr ""

#~ msgid ":obj:`correlation <megengine.functional.nn.correlation>`"
#~ msgstr ""

#~ msgid ":obj:`nvof <megengine.functional.nn.nvof>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_execution_strategy "
#~ "<megengine.functional.debug_param.get_execution_strategy>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_execution_strategy "
#~ "<megengine.functional.debug_param.set_execution_strategy>`"
#~ msgstr ""

#~ msgid "Element-wise `addition`."
#~ msgstr "逐元素相加。"

#~ msgid "Element-wise `sub`."
#~ msgstr "Element-wise `sub`."

#~ msgid "Element-wise `(x / y)`."
#~ msgstr "逐元素相除。"

#~ msgid "Element-wise `floor(x / y)`."
#~ msgstr "逐元素相除并下取整。"

#~ msgid "Element-wise `negation`."
#~ msgstr "逐元素取相反数。"

#~ msgid "Element-wise `power`."
#~ msgstr "逐元素进行指数运算。"

#~ msgid "Element-wise `remainder of division`."
#~ msgstr "返回逐元素相除所得的余数。"

#~ msgid ""
#~ "Returns a singular value decomposition "
#~ "``A = USVh`` of a matrix (or "
#~ "a stack of matrices) ``x`` , where"
#~ " ``U`` is a matrix (or a stack"
#~ " of matrices) with orthonormal columns, "
#~ "``S`` is a vector of non-negative"
#~ " numbers (or stack of vectors), and"
#~ " ``Vh`` is a matrix (or a stack"
#~ " of matrices) with orthonormal rows."
#~ msgstr ""
#~ "返回一个矩阵 ``x``(或一个矩阵堆) 的奇异值分解 ``A = USVh``"
#~ " , 其中 ``U`` 是一个具有正交列的矩阵 (或一个矩阵堆) ,"
#~ " ``S`` 是一个非负数的向量 (或一个向量堆), ``Vh`` "
#~ "是一个具有正交行的矩阵 (或一个矩阵堆)。"

#~ msgid ":py:obj:`topk_accuracy <megengine.functional.nn.topk_accuracy>`"
#~ msgstr ""

#~ msgid "Debug Setting"
#~ msgstr "调试设置"

#~ msgid ""
#~ ":py:obj:`get_execution_strategy "
#~ "<megengine.functional.debug_param.get_execution_strategy>`"
#~ msgstr ""
#~ ":py:obj:`get_execution_strategy "
#~ "<megengine.functional.debug_param.get_execution_strategy>`"

#~ msgid ""
#~ "Returns the execution strategy of "
#~ ":class:`~.module.Conv2d` and :func:`~.matmul`"
#~ msgstr "返回 :class:`~.module.Conv2d`和:func:`~.matmul` 的执行策略"

#~ msgid ""
#~ ":py:obj:`set_execution_strategy "
#~ "<megengine.functional.debug_param.set_execution_strategy>`"
#~ msgstr ""
#~ ":py:obj:`set_execution_strategy "
#~ "<megengine.functional.debug_param.set_execution_strategy>`"

#~ msgid ""
#~ "Sets the execution strategy of "
#~ ":class:`~.module.Conv2d` and :func:`~.matmul`"
#~ msgstr "设置:class:`~.module.Conv2d` 和 :func:`~.matmul`的执行策略"

#~ msgid "Applies roi pooling on input feature."
#~ msgstr "对输入进行 roi pooling。"

#~ msgid "Applies roi align on input feature."
#~ msgstr "对输入进行 roi align。"

#~ msgid "Creates a tensor of shape ``shape`` filled with ``value``."
#~ msgstr "返回一个形状为shape类型为type元素值为value的张量"

#~ msgid ""
#~ "Calculates the sum for each element "
#~ ":math:`x_i` of the input tensor "
#~ ":math:`x` with the respective element "
#~ ":math:`y_i` of the input tensor "
#~ ":math:`y`."
#~ msgstr "计算输入 :math:`x` 与输入 :math:`y` 的逐元素和。"

#~ msgid ""
#~ "Calculates the difference for each "
#~ "element :math:`x_i` of the input tensor"
#~ " :math:`x` with the respective element "
#~ ":math:`y` of the input tensor :math:`y`."
#~ msgstr ""

#~ msgid ""
#~ "Calculates the product for each element"
#~ " :math:`x_i` of the input tensor `x`"
#~ " with the respective element :math:`y_i`"
#~ " of the input tensor :math:`y`."
#~ msgstr "计算输入张量 `x` 的每个元素 :math:`x_i` 与输入张量 :math:`y` 的相应元素 :math:`y_i` 的乘积。"

#~ msgid ""
#~ "Calculates the division for each element"
#~ " :math:`x_i` of the input tensor "
#~ ":math:`x` with the respective element "
#~ ":math:`y_i` of the input tensor "
#~ ":math:`y`."
#~ msgstr "计算输入 :math:`x` 与输入 :math:`y` 的逐元素除。"

#~ msgid ""
#~ "Rounds the result of dividing each "
#~ "element :math:`x_i` of the input tensor"
#~ " :math:`x` by the respective element "
#~ ":math:`y_i` of the input tensor "
#~ ":math:`y` to the greatest (i.e., closest"
#~ " to ``+infinity``) integer-value number "
#~ "that is not greater than the "
#~ "division result."
#~ msgstr ""
#~ "将输入张量 :math:`x` 的每个元素 :math:`x_i` 除以输入张量 "
#~ ":math:`y_i` 的相应元素 :math:`y` 的结果四舍五入到最大 (即最接近到"
#~ " ``+infinity``) 不大于除法结果的整数值数。"

#~ msgid ""
#~ "Computes the numerical negative of each"
#~ " element :math:`x_i` (i.e., :math:`y_i ="
#~ " -x_i` ) of the input tensor "
#~ ":math:`x`."
#~ msgstr "计算输入张量 :math:`x` 的每个元素 :math:`x_i` 的负数 (即 :math:`y_i = -x_i`)。"

#~ msgid "Element-wise `absolute value`."
#~ msgstr "逐元素取绝对值。"

#~ msgid ""
#~ "Returns a new tensor representing the"
#~ " sign of each element in input "
#~ "tensor."
#~ msgstr "返回一个新的张量，该张量表明每个元素的符号。"

#~ msgid ""
#~ "Calculates an implementation-dependent "
#~ "approximation of exponentiation by raising "
#~ "each element :math:`x_i` (the base) of"
#~ " the input tensor :math:`x` to the"
#~ " power of :math:`y_i` (the exponent), "
#~ "where :math:`y_i` is the corresponding "
#~ "element of the input tensor :math:`y`."
#~ msgstr ""
#~ "一种特定实现的近似取幂运算，将张量 :math:`x` 中的每一个元素 :math:`x_i` "
#~ "(底数) 跟张量 :math:`y` 中每一个元素 :math:`y_i` "
#~ "(指数)做幂运算。"

#~ msgid ""
#~ "Returns the remainder of division for"
#~ " each element ``x_i`` of the input"
#~ " tensor ``x`` and the respective "
#~ "element ``y_i`` of the input tensor "
#~ "``y``."
#~ msgstr "返回输入张量 ``x`` 的每个元素 ``x_i`` 和输入张量 ``y`` 的相应元素 ``y_i`` 的除法余数。"

#~ msgid "Element-wise `square`."
#~ msgstr "逐元素取平方。"

#~ msgid "Element-wise `rounding to int`."
#~ msgstr "逐元素四舍五入到整数。"

#~ msgid "Element-wise `ceiling`."
#~ msgstr "逐元素上取整。"

#~ msgid ""
#~ "Clamps all elements in input tensor "
#~ "into the range ``[ lower, upper "
#~ "]`` and returns a resulting tensor:"
#~ msgstr "将输入张量的所有元素限制在 ``[ lower, upper ]`` 区间并返回相应的结果："

#~ msgid "Element-wise `exponential`."
#~ msgstr "逐元素计算 `e` 的 `x` 次方。"

#~ msgid "Element-wise `exp(x)-1`."
#~ msgstr "逐元素计算 expm1 函数。"

#~ msgid "Element-wise `logarithm (base e)`."
#~ msgstr "逐元素计算以 `e` 为底的对数。"

#~ msgid "Element-wise `log(x+1) (base e)`."
#~ msgstr "逐元素计算 `(x+1)` 以 `e` 为底的对数。"

#~ msgid "Element-wise `numerically stable log(exp(x) + exp(y)`."
#~ msgstr "逐元素数值稳定的 `log(exp(x) + exp(y))`。"

#~ msgid "Element-wise `cosine`."
#~ msgstr "逐元素计算余弦函数。"

#~ msgid "Element-wise `tangent`."
#~ msgstr "逐元素计算正切函数。"

#~ msgid "Element-wise `inverse sine`."
#~ msgstr "逐元素计算反正弦函数。"

#~ msgid "Element-wise `inverse tangent`."
#~ msgstr "逐元素计算反正切函数。"

#~ msgid "Element-wise `2-argument arctangent`."
#~ msgstr "逐元素计算两个参数的反正切函数。"

#~ msgid "Element-wise `hyperbolic sine`."
#~ msgstr "逐元素计算双曲正弦函数。"

#~ msgid "Element-wise `hyperbolic tangent`."
#~ msgstr "逐元素计算双曲正切值。"

#~ msgid "Element-wise `inverse hyperbolic cosine`."
#~ msgstr "逐元素计算反双曲余弦函数。"

#~ msgid "Element-wise `inverse hyperbolic sine`."
#~ msgstr "逐元素计算反双曲正弦函数。"

#~ msgid "Element-wise `inverse hyperbolic tangent`."
#~ msgstr "逐元素计算反双曲正切函数。"

#~ msgid "Element-wise `bitwise binary: x << y`."
#~ msgstr "逐元素计算 x << y。"

#~ msgid "Element-wise `bitwise binary: x >> y`."
#~ msgstr "逐元素计算 x >> y。"

#~ msgid "Returns a new tensor representing if each element is ``NaN`` or not."
#~ msgstr "返回一个新的张量，该张量表明每个元素是否为非数值类型 ``NaN``."

#~ msgid "Returns a new tensor representing if each element is ``Inf`` or not."
#~ msgstr "返回一个张量，它表示每个元素是否是无穷大值 ``Inf``."

#~ msgid "Element-wise `logical or: x || y`."
#~ msgstr "逐元素进行逻辑或运算。"

#~ msgid "Element-wise `(x > y)`."
#~ msgstr "逐元素计算 x 大于 y."

#~ msgid "Element-wise `(x >= y)`."
#~ msgstr "逐元素判断 x 大于或者等于 y."

#~ msgid "Element-wise `(x < y)`."
#~ msgstr "逐元素的计算 x 小于 y."

#~ msgid "Element-wise `(x <= y)`."
#~ msgstr "逐元素计算 x 小于或等于 y."

#~ msgid "Element-wise `(x == y)`."
#~ msgstr "逐元素判断是否相等。"

#~ msgid "Element-wise `(x != y)`."
#~ msgstr "逐元素计算 x 不等于 y."

#~ msgid "Returns the sum of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求和后的结果。"

#~ msgid "Returns the product of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求乘积后的结果。"

#~ msgid "Returns the mean value of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求平均后的结果。"

#~ msgid "Returns the min value of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求最小值后的结果。"

#~ msgid "Returns the max value of the input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求最大值后的结果。"

#~ msgid "Returns the variance value of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求方差后的结果。"

#~ msgid ""
#~ "If ``inp`` is a 1D tensor, then"
#~ " returns a 2D tensor with the "
#~ "elements of ``inp`` as the diagonal."
#~ msgstr "如果 ``inp`` 是一维tensor，返回值是一个以 ``inp`` 为对角线的二维tensor。"


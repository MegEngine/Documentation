msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-03 10:50+0800\n"
"PO-Revision-Date: 2023-04-21 09:34\n"
"Last-Translator: \n"
"Language: zh_TW\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /dev/locales/en/LC_MESSAGES/user-guide/model-development/data.po\n"
"X-Crowdin-File-ID: 9879\n"

#: ../../source/user-guide/model-development/data.rst:5
msgid "数据加载与预处理"
msgstr "crwdns115699:0crwdne115699:0"

#: ../../source/user-guide/model-development/data.rst:7
msgid "数据集是一组数据的集合，例如 MNIST、Cifar10 等图像数据集。 :py:class:`~.data.dataset.Dataset` 是 MegEngine 中表示数据集的抽象类。 我们自定义的数据集类应该继承 :py:class:`~.data.dataset.Dataset` 并重写下列方法："
msgstr "crwdns115701:0crwdne115701:0"

#: ../../source/user-guide/model-development/data.rst:11
msgid "``__init__``: 一般在其中实现读取数据源文件的功能。也可以添加任何其它的必要功能；"
msgstr "crwdns115703:0__init__crwdne115703:0"

#: ../../source/user-guide/model-development/data.rst:12
msgid "``__getitem__``: 通过索引操作来获取数据集中某一个样本，使得可以通过 for 循环来遍历整个数据集；"
msgstr "crwdns115705:0__getitem__crwdne115705:0"

#: ../../source/user-guide/model-development/data.rst:13
msgid "``__len__``: 返回数据集大小"
msgstr "crwdns115707:0__len__crwdne115707:0"

#: ../../source/user-guide/model-development/data.rst:16
msgid "自定义数据集"
msgstr "crwdns115709:0crwdne115709:0"

#: ../../source/user-guide/model-development/data.rst:18
msgid "下面是一个简单示例。我们根据下图所示的二分类数据，创建一个 :py:class:`~.data.dataset.Dataset` 。 每个数据是一个二维平面上的点，横坐标和纵坐标在 [-1, 1] 之间。共有两个类别标签（图中的蓝色 * 和红色 +）， 标签为 0 的点处于一、三象限；标签为 1 的点处于二、四象限。"
msgstr "crwdns115711:0crwdne115711:0"

#: ../../source/user-guide/model-development/data.rst:25
msgid "该数据集的创建过程如下："
msgstr "crwdns115713:0crwdne115713:0"

#: ../../source/user-guide/model-development/data.rst:27
msgid "在 ``__init__`` 中利用 NumPy 随机生成 ndarray 作为数据；"
msgstr "crwdns115715:0__init__crwdne115715:0"

#: ../../source/user-guide/model-development/data.rst:28
msgid "在 ``__getitem__`` 中返回 ndarray 中的一个样本；"
msgstr "crwdns115717:0__getitem__crwdne115717:0"

#: ../../source/user-guide/model-development/data.rst:29
msgid "在 ``__len__`` 中返回整个数据集中样本的个数；"
msgstr "crwdns115719:0__len__crwdne115719:0"

#: ../../source/user-guide/model-development/data.rst:74
msgid "输出："
msgstr "crwdns115721:0crwdne115721:0"

#: ../../source/user-guide/model-development/data.rst:82
msgid "MegEngine 中也提供了一些已经继承自 :py:class:`~.data.dataset.Dataset` 的数据集类，方便我们使用， 比如 :py:class:`~.data.dataset.ArrayDataset` ，允许通过传入单个或多个 NumPy 数组，对它进行初始化。 其内部实现如下："
msgstr "crwdns115723:0crwdne115723:0"

#: ../../source/user-guide/model-development/data.rst:86
msgid "``_init__``: 检查传入的多个 NumPy 数组的长度是否一致；不一致则无法成功创建；"
msgstr "crwdns115725:0crwdne115725:0"

#: ../../source/user-guide/model-development/data.rst:87
msgid "``__getitem__``: 将多个 NumPy 数组相同索引位置的元素构成一个 tuple 并返回；"
msgstr "crwdns115727:0__getitem__crwdne115727:0"

#: ../../source/user-guide/model-development/data.rst:88
msgid "``__len__``: 返回数据集的大小；"
msgstr "crwdns115729:0__len__crwdne115729:0"


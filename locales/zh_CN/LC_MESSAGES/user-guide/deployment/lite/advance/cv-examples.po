# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2022, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 16:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:5
msgid "CV 算法示例"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:7
msgid ""
"为了方便大家使用 MegEngine Lite 快速部署 CV 相关算法，MegEngine Lite 提供了一些基本的 CV 算法的部署 "
"Demo, 为用户在实际部署这些算法时候提供参考，这些 Demo 都是 C++ 编写的， 位于 "
":src:`lite/example/cpp_example/mge/cv` 中，:ref:`build-megengine-lite` "
"的时候将会自动编译这些示例。"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:12
msgid "NN 分类算法"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:14
msgid ""
"NN 分类将从用户读取输入图片，将图片进行预处理之后输入到模型中进行推理，最终输出输入图片中物体的类别信息。 代码在 "
":src:`lite/example/cpp_example/mge/cv/picture_classification.cpp`. "
"编译之后运行："
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:21
msgid "将看到图片的类别信息。"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:25
msgid "NN 目标检测"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:27
msgid "部署 `YOLOX <https://github.com/MegEngine/YOLOX>`_ 工程中训练完成的模型。"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:29
msgid "代码在 :src:`lite/example/cpp_example/mge/cv/detect_yolox.cpp`。主要代码功能为："
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:31
msgid "输入图片前处理，包括 resize, padding, 归一化"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:32
msgid "使用 MegEngine Lite 进行推理"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:33
msgid "对输出数据处理"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:35
msgid "生成对应的框"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:36
msgid "结合模型的输出数据，选择满足条件的框"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:37
msgid "对选择的框进行非极大值抑制"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:38
msgid "输出最终的框"
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:40
msgid "编译之后运行："
msgstr ""

#: ../../source/user-guide/deployment/lite/advance/cv-examples.rst:46
msgid ""
"将以 log 形式输出图片中框的信息（其中 ``yolox_s.mge`` 文件来自 `此处 <https://github.com"
"/Megvii-BaseDetection/storage/releases/download/0.0.1/yolox_s.mge>`_ ）。"
msgstr ""



msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-03 01:02+0000\n"
"PO-Revision-Date: 2023-05-11 13:05+0000\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/reference/functional.rst:6
msgid "megengine.functional"
msgstr ""

#: ../../source/reference/functional.rst:14
msgid "顾名思义，:mod:`megengine.functional` 模块中包含着所有与 Tensor 有关的计算接口："
msgstr ""

#: ../../source/reference/functional.rst:16
msgid "与神经网络（Neural Network）相关的算子统一封装在 :mod:`megengine.functional.nn` 中；"
msgstr ""

#: ../../source/reference/functional.rst:17
msgid "分布式算子统一封装在 :mod:`megengine.functional.distributed` 中，方便调用；"
msgstr ""

#: ../../source/reference/functional.rst:18
msgid "其它的常见算子均可在 :mod:`megengine.functional` 中直接调用；"
msgstr ""

#: ../../source/reference/functional.rst:22
msgid "用户指南中对于 :ref:`functional-guide` 有另外一套分类逻辑，可作为参考。"
msgstr ""

#: ../../source/reference/functional.rst:27
msgid "General tensor operations"
msgstr "全局tensor操作"

#: ../../source/reference/functional.rst:31
msgid ""
"该部分的 API 设计接纳了 `Python 数据 API 标准联盟 <https://data-apis.org/>`_ 中的倡导, 尽可能地向"
" NumPy API 靠拢。"
msgstr ""

#: ../../source/reference/functional.rst:37
msgid "Creation Functions"
msgstr "创建功能"

#: ../../source/reference/functional.rst:40
msgid ":ref:`tensor-creation`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`arange <megengine.functional.arange>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Returns evenly spaced values within the half-open interval ``[start, "
"stop)`` as a one-dimensional tensor."
msgstr "返回半开区间 [start, stop) 内均匀间隔的值组成的1维Tensor。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`linspace <megengine.functional.linspace>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns evenly spaced numbers over a specified interval."
msgstr "返回指定区间内均匀分布的数字。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`eye <megengine.functional.eye>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Returns a two-dimensional tensor with ones on the diagonal and zeros "
"elsewhere."
msgstr "返回一个对角线全1而其他元素全0的二维张量。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`diag <megengine.functional.diag>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Extract a diagonal or construct a diagonal tensor."
msgstr "提取或者构造一个对角线向量"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`zeros <megengine.functional.zeros>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a new tensor having a specified shape and filled with zeros."
msgstr "返回一个特定形状的元素全为 0 的张量。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`zeros_like <megengine.functional.zeros_like>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Returns a tensor filled with zeros with the same shape and data type as "
"input tensor."
msgstr "返回一个跟输入tensor拥有相同shape和dtype的全零tensor。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`ones <megengine.functional.ones>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a new tensor having a specified shape and filled with ones."
msgstr "返回一个新创建的拥有指定shape且被1填充的tensor。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`ones_like <megengine.functional.ones_like>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Returns a tensor filled with ones with the same shape and data type as "
"input tensor."
msgstr "使用输入 Tensor 来填充输出 Tensor，保持相同的形状和数据类型。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`full <megengine.functional.full>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid "Returns a new tensor having a specified shape and filled with given value."
msgstr "返回一个新的拥有指定 shape 且全部元素均为指定值的张量。"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`full_like <megengine.functional.full_like>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Returns a tensor filled with given value with the same shape as input "
"tensor."
msgstr "返回一个与输入张量形状相同的且值为给定值的零张量"

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`complex <megengine.functional.complex>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Constructs a complex tensor with its real part equal to real and its "
"imaginary part equal to imag."
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ":py:obj:`polar <megengine.functional.polar>`"
msgstr ""

#: ../../source/reference/functional.rst:58:<autosummary>:1
msgid ""
"Constructs a complex tensor whose elements are Cartesian coordinates "
"corresponding to the polar coordinates with absolute value abs and angle "
"angle."
msgstr ""

#: ../../source/reference/functional.rst:62
msgid "Manipulation Functions"
msgstr "操作功能"

#: ../../source/reference/functional.rst:65
msgid ":ref:`tensor-manipulation`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`copy <megengine.functional.copy>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Copies tensor to another device."
msgstr "把张量复制到另一个设备上。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`reshape <megengine.functional.reshape>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Reshapes a tensor without changing its data."
msgstr "在不改变数据的情况下更改 Tensor 的形状。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`flatten <megengine.functional.flatten>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ""
"Reshapes the tensor by flattening the sub-tensor from dimension "
"``start_axis`` to dimension ``end_axis``."
msgstr "通过将子张量从 ``start_axis`` 维展平到 ``end_axis`` 维，实现对张量的重塑（reshape）。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`transpose <megengine.functional.transpose>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Swaps shapes and strides according to given pattern."
msgstr "根据给定模板交换形状和步长。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`swapaxes <megengine.functional.swapaxes>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Interchange two axes of a tensor."
msgstr "交换一个 tensor 的两个坐标轴。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`broadcast_to <megengine.functional.broadcast_to>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Broadcasts a tensor to given shape."
msgstr "将张量广播至指定的形状。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`expand_dims <megengine.functional.expand_dims>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Adds dimension before given axis."
msgstr "在给定轴之前添加维度。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`squeeze <megengine.functional.squeeze>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Removes dimension of shape 1."
msgstr "移除形状中下标为1的维度。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`concat <megengine.functional.concat>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Concat some tensors"
msgstr "拼接一些张量"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`stack <megengine.functional.stack>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Concats a sequence of tensors along a new axis."
msgstr "沿新轴对张量进行拼接。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`split <megengine.functional.split>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Splits the input tensor into several smaller tensors."
msgstr "将输入张量拆分成更小的张量。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`tile <megengine.functional.tile>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ""
"Construct an array by repeating ``inp`` the number of times given by "
"``reps``."
msgstr "通过重复 ``inp`` 数据 ``reps`` 次来构造一个数组。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`repeat <megengine.functional.repeat>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Repeat elements of an array."
msgstr "重复数组的元素。"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`roll <megengine.functional.roll>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Roll the tensor along the given axis(or axes)."
msgstr "沿给定轴axis循环滚动张量"

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`real <megengine.functional.real>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Returns a new tensor containing real values of the complex tensor."
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`imag <megengine.functional.imag>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Returns a new tensor containing imaginary values of the complex tensor."
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid ":py:obj:`cross <megengine.functional.cross>`"
msgstr ""

#: ../../source/reference/functional.rst:88:<autosummary>:1
msgid "Return the cross product of two (arrays of) vectors."
msgstr ""

#: ../../source/reference/functional.rst:92
msgid "Arithmetic operations"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`add <megengine.functional.add>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise addition."
msgstr "逐元素相加。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`sub <megengine.functional.sub>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise subtraction."
msgstr "逐元素减法。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`mul <megengine.functional.mul>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise multiplication."
msgstr "逐元素乘法"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`div <megengine.functional.div>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise division."
msgstr "逐元素除法。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`floor_div <megengine.functional.floor_div>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise floor division."
msgstr "逐元素取整除法"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`neg <megengine.functional.neg>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise negation."
msgstr "逐元素取反。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`abs <megengine.functional.abs>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{abs}(x)` function."
msgstr "将函数 :math:`\\operatorname{abs}(x)` 应用于每一个元素。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`sign <megengine.functional.sign>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise sign."
msgstr "元素求 sign"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`pow <megengine.functional.pow>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise power."
msgstr "逐元素幂。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`mod <megengine.functional.mod>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{mod}(x, y)` function."
msgstr "逐元素 :math:`\\operatorname{mod}(x, y)` 函数"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`sqrt <megengine.functional.sqrt>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{sqrt}(x)` function."
msgstr "元素 :math:`\\operatorname{sqrt}(x)` 函数"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`square <megengine.functional.square>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`x^2` function."
msgstr "元素 :math:`x^2` 函数"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`maximum <megengine.functional.maximum>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise maximum of tensor elements."
msgstr "Tensor中的逐元素最大值。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`minimum <megengine.functional.minimum>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise minimum of tensor elements."
msgstr "Tensor中的逐元素最小值。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`round <megengine.functional.round>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{round}(x)` function."
msgstr "逐元素的 :math:`\\operatorname{round}(x)` 函数."

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`ceil <megengine.functional.ceil>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\lceil x \\rceil` function."
msgstr "逐元素 :math:`\\lceil x \\rceil` 函数。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`floor <megengine.functional.floor>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\lfloor x \\rfloor` function."
msgstr "逐元素 :math:`\\lfloor x \\rfloor` 操作。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`clip <megengine.functional.clip>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise clipping function."
msgstr "逐元素裁切函数。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`exp <megengine.functional.exp>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`e^x` function."
msgstr "逐元素 :math:`e^x` 操作。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`expm1 <megengine.functional.expm1>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`e^x - 1` function."
msgstr "逐元素 :math:`e^x - 1` 操作。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`log <megengine.functional.log>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\operatorname{log}(x)` function."
msgstr "Element-wise :math:`\\operatorname{log}(x)` 方法。"

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`log1p <megengine.functional.log1p>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\log(1 + x)` function."
msgstr "Element-wise :math:`\\log(1 + x)` 方法."

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid ":py:obj:`logaddexp <megengine.functional.logaddexp>`"
msgstr ""

#: ../../source/reference/functional.rst:120:<autosummary>:1
msgid "Element-wise :math:`\\log(e^x + e^y)` function."
msgstr "Element-wise :math:`\\log(e^x + e^y)` 方法。"

#: ../../source/reference/functional.rst:124
msgid "Trigonometric functions"
msgstr "三角函数"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`sin <megengine.functional.sin>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\sin(x)` function."
msgstr "元素 :math:`\\sin(x)` 函数"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`cos <megengine.functional.cos>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\cos(x)` function."
msgstr "逐个元素的 :math:`\\cos(x)` 函数。"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`tan <megengine.functional.tan>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\tan(x)` function."
msgstr "元素 :math:`\\tan(x)` 函数"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`asin <megengine.functional.asin>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arcsin(x)` function."
msgstr "逐元素 :math:`\\arcsin(x)` 函数。"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`acos <megengine.functional.acos>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arccos(x)` function."
msgstr "将函数 :math:`\\arccos(x)` 应用于每一个元素"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`atan <megengine.functional.atan>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arctan(x)` function."
msgstr "逐元素 :math:`\\arctan(x)` 函数。"

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid ":py:obj:`atan2 <megengine.functional.atan2>`"
msgstr ""

#: ../../source/reference/functional.rst:136:<autosummary>:1
msgid "Element-wise :math:`\\arctan(\\frac{y}{x})` function."
msgstr "逐元素 :math:`\\arctan(\\frac{y}{x})` 函数。"

#: ../../source/reference/functional.rst:140
msgid "Hyperbolic functions"
msgstr "双曲函数"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`sinh <megengine.functional.sinh>`"
msgstr ""

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\sinh(x)` function."
msgstr "元素 :math:`\\sinh(x)` 函数"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`cosh <megengine.functional.cosh>`"
msgstr ""

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\cosh(x)` function."
msgstr "Element-wise :math:`\\cosh(x)` function."

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`tanh <megengine.functional.tanh>`"
msgstr ""

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\tanh(x)` function."
msgstr "元素 :math:`\\tanh(x)` 函数"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`acosh <megengine.functional.acosh>`"
msgstr ""

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\cosh^{-1}(x)` function."
msgstr "将函数 :math:`\\cosh^{-1}(x)` 应用于每一个元素。"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`asinh <megengine.functional.asinh>`"
msgstr ""

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\sinh^{-1}(x)` function."
msgstr "逐元素 :math:`\\sinh^{-1}(x)` 函数。"

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid ":py:obj:`atanh <megengine.functional.atanh>`"
msgstr ""

#: ../../source/reference/functional.rst:151:<autosummary>:1
msgid "Element-wise :math:`\\tanh^{-1}(x)` function."
msgstr "逐元素 :math:`\\tanh^{-1}(x)` 函数。\\t"

#: ../../source/reference/functional.rst:155
msgid "Bit operations"
msgstr "位操作"

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid ":py:obj:`left_shift <megengine.functional.left_shift>`"
msgstr ""

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid "Element-wise left shift."
msgstr "逐个元素的左移。"

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid ":py:obj:`right_shift <megengine.functional.right_shift>`"
msgstr ""

#: ../../source/reference/functional.rst:162:<autosummary>:1
msgid "Element-wise right shift."
msgstr "元素右移。"

#: ../../source/reference/functional.rst:166
msgid "Logic functions"
msgstr "逻辑函数"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`isnan <megengine.functional.isnan>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise ``NaN`` check."
msgstr "逐个元素的 ``NaN`` 检查。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`isinf <megengine.functional.isinf>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise ``infinity`` check."
msgstr "逐个元素的 ``infinity`` 检查。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_and <megengine.functional.logical_and>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical AND."
msgstr "Element-wise 逻辑与（AND）。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_not <megengine.functional.logical_not>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical NOT."
msgstr "Element-wise 逻辑非（NOT）。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_or <megengine.functional.logical_or>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical OR."
msgstr "逐元素逻辑或操作。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`logical_xor <megengine.functional.logical_xor>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise logical XOR."
msgstr "逐元素逻辑异或。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`greater <megengine.functional.greater>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise greater-than comparison."
msgstr "逐元素的大于比较。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`greater_equal <megengine.functional.greater_equal>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise greater-than-or-equal-to comparison."
msgstr "逐元素的大于或等于比较。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`less <megengine.functional.less>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise less-than comparison."
msgstr "逐元素的小于比较。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`less_equal <megengine.functional.less_equal>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise less-than-or-equal-to comparison."
msgstr "逐元素的小于或等于比较。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`equal <megengine.functional.equal>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise equality comparison."
msgstr "逐元素相等比较。"

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid ":py:obj:`not_equal <megengine.functional.not_equal>`"
msgstr ""

#: ../../source/reference/functional.rst:183:<autosummary>:1
msgid "Element-wise inequality comparison."
msgstr "逐元素的不等式比较。"

#: ../../source/reference/functional.rst:187
msgid "Statistical Functions"
msgstr "统计函数"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`sum <megengine.functional.sum>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the sum of tensor elements over a given axis (or axes)."
msgstr "计算给定维度 (或坐标轴) 元素的求和结果。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`cumsum <megengine.functional.cumsum>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the cumulative sum of tensor elements over a given axis."
msgstr "计算给定轴上的向量元素的累积和。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`prod <megengine.functional.prod>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the product of tensor elements over a given axis (or axes)."
msgstr "计算张量元素在给定轴上的乘积。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`mean <megengine.functional.mean>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the mean of tensor elements over a given axis (or axes)."
msgstr "计算tensor在给定轴（或所有轴）上的平均值。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`min <megengine.functional.min>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the minimum of tensor elements over a given axis (or axes)."
msgstr "计算tensor在给定轴（或多个轴）上的最小值。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`max <megengine.functional.max>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the maximum of tensor elements over a given axis (or axes)."
msgstr "计算tensor在给定轴（或多个轴）上的最大值。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`var <megengine.functional.var>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the variance of tensor elements over a given axis (or axes)."
msgstr "计算给定维度 (或坐标轴) 元素的方差"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`std <megengine.functional.std>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ""
"Calculates the standard deviation of tensor elements over a given axis "
"(or axes)."
msgstr "在给定的维度 (或坐标轴) 上计算元素的标准差。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`norm <megengine.functional.norm>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Calculates the norm of tensor elements over a given axis."
msgstr "计算张量在给定轴上的范数。"

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid ":py:obj:`normalize <megengine.functional.normalize>`"
msgstr ""

#: ../../source/reference/functional.rst:202:<autosummary>:1
msgid "Performs :math:`L_p` normalization of input tensor along given axis."
msgstr "返回在给定轴 ``axis`` 上 ``inp`` 张量每一行进行 :math:`L_p` 归一化后的结果。"

#: ../../source/reference/functional.rst:205
msgid "想要返回 ``min``, ``max`` 的索引而不是元素值，请参考 :ref:`searching-functions`"
msgstr ""

#: ../../source/reference/functional.rst:210
msgid "Linear Algebra Functions"
msgstr "线性代数函数"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`dot <megengine.functional.dot>`"
msgstr ""

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid "Computes dot-product of two vectors ``inp1`` and ``inp2``."
msgstr "计算两个向量 ``inp1`` 和 ``inp2`` 的点积。"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`matinv <megengine.functional.matinv>`"
msgstr ""

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ""
"Computes the inverse of a batch of matrices; input must has shape [..., "
"n, n]."
msgstr "计算一批矩阵的逆；输入必须满足 [...，n，n] 的形状。"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`matmul <megengine.functional.matmul>`"
msgstr ""

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid "Performs a matrix multiplication of the matrices ``inp1`` and ``inp2``."
msgstr "对矩阵 ``inp1`` 和 ``inp2`` 进行矩阵乘法。"

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ":py:obj:`svd <megengine.functional.svd>`"
msgstr ""

#: ../../source/reference/functional.rst:219:<autosummary>:1
msgid ""
"Computes the singular value decomposition of a matrix (or a stack of "
"matrices) ``inp``."
msgstr "计算矩阵(或一组矩阵) ``inp`` 的奇异值分解。"

#: ../../source/reference/functional.rst:223
msgid "Indexing Functions"
msgstr ""

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid ":py:obj:`gather <megengine.functional.gather>`"
msgstr ""

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid "Gathers data from input tensor on axis using index."
msgstr "使用 ``index`` 从 ``axis`` 上的 ``inp`` 聚合数据。"

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid ":py:obj:`scatter <megengine.functional.scatter>`"
msgstr ""

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid ""
"Writes all values from the tensor source into input tensor at the indices"
" specified in the index tensor."
msgstr "把 ``source`` 张量中所有的值通过 ``index`` 张量指定的索引位置上写入到输入张量中。"

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid ":py:obj:`cond_take <megengine.functional.cond_take>`"
msgstr ""

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid "Takes elements from data if specific condition is satisfied on mask."
msgstr "如果在满足特定条件，则从数据中获取元素。"

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid ":py:obj:`where <megengine.functional.where>`"
msgstr ""

#: ../../source/reference/functional.rst:232:<autosummary>:1
msgid "Selects elements either from Tensor x or Tensor y, according to mask."
msgstr "根据 mask 条件选择张量 ``x`` 或 ``y`` 作为对应的输出。"

#: ../../source/reference/functional.rst:236
msgid "Searching Functions"
msgstr ""

#: ../../source/reference/functional.rst:243:<autosummary>:1
msgid ":py:obj:`argmin <megengine.functional.argmin>`"
msgstr ""

#: ../../source/reference/functional.rst:243:<autosummary>:1
msgid "Returns the indices of the minimum values along given axis."
msgstr "返回沿给定轴的最小值的索引。"

#: ../../source/reference/functional.rst:243:<autosummary>:1
msgid ":py:obj:`argmax <megengine.functional.argmax>`"
msgstr ""

#: ../../source/reference/functional.rst:243:<autosummary>:1
msgid "Returns the indices of the maximum values along given axis."
msgstr "返回沿给定轴的最大值的索引。"

#: ../../source/reference/functional.rst:247
msgid "Sorting Functions"
msgstr ""

#: ../../source/reference/functional.rst:255:<autosummary>:1
msgid ":py:obj:`sort <megengine.functional.sort>`"
msgstr ""

#: ../../source/reference/functional.rst:255:<autosummary>:1
msgid "Returns sorted tensor and the indices would sort the input tensor."
msgstr "返回经过排序后的张量。"

#: ../../source/reference/functional.rst:255:<autosummary>:1
msgid ":py:obj:`argsort <megengine.functional.argsort>`"
msgstr ""

#: ../../source/reference/functional.rst:255:<autosummary>:1
msgid "Returns the indices that would sort the input tensor."
msgstr "返回经过排序后的张量。"

#: ../../source/reference/functional.rst:255:<autosummary>:1
msgid ":py:obj:`topk <megengine.functional.topk>`"
msgstr ""

#: ../../source/reference/functional.rst:255:<autosummary>:1
msgid "Selects the ``Top-K`` (by default) smallest elements of 2d matrix by row."
msgstr "按行排序，选出二维矩阵中 Top-K （默认情况下）个最小元素。"

#: ../../source/reference/functional.rst:262
msgid "Metric functions"
msgstr "度量函数"

#: ../../source/reference/functional.rst:268:<autosummary>:1
msgid ":py:obj:`topk_accuracy <megengine.functional.topk_accuracy>`"
msgstr ""

#: ../../source/reference/functional.rst:268:<autosummary>:1
msgid ""
"Calculates the classification accuracy given predicted logits and ground-"
"truth labels."
msgstr "根据给定的预测的logits和真实值标签计算分类准确率。"

#: ../../source/reference/functional.rst:275
msgid "Neural network operations"
msgstr "神经网络运算"

#: ../../source/reference/functional.rst:280
msgid "Convolution functions"
msgstr "卷积运算"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`conv1d <megengine.functional.nn.conv1d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "1D convolution operation."
msgstr "一维卷积运算。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`conv2d <megengine.functional.nn.conv2d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "2D convolution operation."
msgstr "二维卷积运算。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`conv3d <megengine.functional.nn.conv3d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "3D convolution operation."
msgstr "三维卷积运算。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`local_conv2d <megengine.functional.nn.local_conv2d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ""
"Applies a spatial convolution with untied kernels over an groupped "
"channeled input 4D tensor."
msgstr "对4D输入tensor进行通道分组并应用非统一kernel的空间卷积操作。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`conv_transpose2d <megengine.functional.nn.conv_transpose2d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "2D transposed convolution operation."
msgstr "二维转置卷积运算。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`conv_transpose3d <megengine.functional.nn.conv_transpose3d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "3D transposed convolution operation."
msgstr "3D 转置卷积算子。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`deformable_conv2d <megengine.functional.nn.deformable_conv2d>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "Deformable Convolution."
msgstr "可变形卷积"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ":py:obj:`sliding_window <megengine.functional.nn.sliding_window>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "Extracts sliding local blocks from a batched input tensor."
msgstr "从多batch输入tensor中提取滑窗大小的局部分块。"

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid ""
":py:obj:`sliding_window_transpose "
"<megengine.functional.nn.sliding_window_transpose>`"
msgstr ""

#: ../../source/reference/functional.rst:294:<autosummary>:1
msgid "Sum over the sliding windows on the corresponding input location."
msgstr "对滑动窗口对应的输入数据求和。"

#: ../../source/reference/functional.rst:298
msgid "Pooling functions"
msgstr "池化函数"

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid ":py:obj:`avg_pool2d <megengine.functional.nn.avg_pool2d>`"
msgstr ""

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid "Applies 2D average pooling over an input tensor."
msgstr "对输入进行二维平均池化。"

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid ":py:obj:`max_pool2d <megengine.functional.nn.max_pool2d>`"
msgstr ""

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid "Applies a 2D max pooling over an input tensor."
msgstr "对输入张量进行二维最大池化。"

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid ""
":py:obj:`adaptive_avg_pool2d "
"<megengine.functional.nn.adaptive_avg_pool2d>`"
msgstr ""

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid "Applies a 2D average adaptive pooling over an input."
msgstr "对输入进行二维平均池化。"

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid ""
":py:obj:`adaptive_max_pool2d "
"<megengine.functional.nn.adaptive_max_pool2d>`"
msgstr ""

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid "Applies a 2D max adaptive pooling over an input."
msgstr "对输入数据进行2D最大池化。"

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid ""
":py:obj:`deformable_psroi_pooling "
"<megengine.functional.nn.deformable_psroi_pooling>`"
msgstr ""

#: ../../source/reference/functional.rst:308:<autosummary>:1
msgid "Deformable PSROI(Position Sensitive Region of Interest) Pooling."
msgstr "可变形的位置敏感的感兴趣区域池化"

#: ../../source/reference/functional.rst:312
msgid "Non-linear activation functions"
msgstr "非线性激活函数"

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`sigmoid <megengine.functional.nn.sigmoid>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise `1 / ( 1 + exp( -x ) )`."
msgstr "逐元素计算 `1 / ( 1 + exp( -x ) )`."

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`hsigmoid <megengine.functional.nn.hsigmoid>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise `relu6(x + 3) / 6`."
msgstr "逐元素计算 `relu6(x + 3) / 6`."

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`hswish <megengine.functional.nn.hswish>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise `x * relu6(x + 3) / 6`."
msgstr "逐元素计算 `x * relu6(x + 3) / 6`."

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`relu <megengine.functional.nn.relu>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise `max(x, 0)`."
msgstr "逐元素计算 `max(x, 0)`."

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`relu6 <megengine.functional.nn.relu6>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise `min(max(x, 0), 6)`."
msgstr "逐元素计算 `min(max(x, 0), 6)`."

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`prelu <megengine.functional.nn.prelu>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise `max(x, 0) + y * min(x, 0)`."
msgstr "逐元素进行 `max(x, 0) + y * min(x, 0)` 操作。"

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`leaky_relu <megengine.functional.nn.leaky_relu>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Element-wise LeakyReLU function"
msgstr "LeakyReLU 函数。"

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`silu <megengine.functional.nn.silu>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ""
"Applies the element-wise Sigmoid Linear Unit function, i.e. `x * "
"sigmoid(x)`."
msgstr "逐元素应用 SiLU 函数： `x * sigmoid(x)` 。"

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`gelu <megengine.functional.nn.gelu>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Applies the element-wise function:"
msgstr "逐元素应用函数："

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`softplus <megengine.functional.nn.softplus>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`softmax <megengine.functional.nn.softmax>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid "Applies a :math:`\\text{softmax}(x)` function."
msgstr "应用 :math:`\\text{softmax}(x)` 函数"

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`logsoftmax <megengine.functional.nn.logsoftmax>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ""
"Applies the :math:`\\log(\\text{softmax}(x))` function to an "
"n-dimensional input tensor."
msgstr "将 :math:`\\log(\\text{softmax}(x))` 函数应用于一个 n 维 Tensor 输入上"

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`logsigmoid <megengine.functional.nn.logsigmoid>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ":py:obj:`logsumexp <megengine.functional.nn.logsumexp>`"
msgstr ""

#: ../../source/reference/functional.rst:331:<autosummary>:1
msgid ""
"Calculates the logarithm of the inputs' exponential sum along the given "
":attr:`axis`."
msgstr "计算输入数据沿给定维度 :attr:`axis` 的指数之和的对数。该计算是数值稳定的。"

#: ../../source/reference/functional.rst:335
msgid "Normalization functions"
msgstr "标准化函数"

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid ":py:obj:`batch_norm <megengine.functional.nn.batch_norm>`"
msgstr ""

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid "Applies batch normalization to the input."
msgstr "对输入进行批标准化。"

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid ":py:obj:`sync_batch_norm <megengine.functional.nn.sync_batch_norm>`"
msgstr ""

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid "Applies synchronized batch normalization to the input."
msgstr "对输入进同步批标准化。"

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid ":py:obj:`layer_norm <megengine.functional.nn.layer_norm>`"
msgstr ""

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid "Applies layer normalization to the input."
msgstr "对输入应用 layer normalization。"

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid ""
":py:obj:`local_response_norm "
"<megengine.functional.nn.local_response_norm>`"
msgstr ""

#: ../../source/reference/functional.rst:344:<autosummary>:1
msgid "Apply local response normalization to the input tensor."
msgstr "对输入 Tensor 进行局部响应归一化。"

#: ../../source/reference/functional.rst:348
msgid "Linear functions"
msgstr "线性函数"

#: ../../source/reference/functional.rst:354:<autosummary>:1
msgid ":py:obj:`linear <megengine.functional.nn.linear>`"
msgstr ""

#: ../../source/reference/functional.rst:354:<autosummary>:1
msgid "Applies a linear transformation to the input tensor."
msgstr "对输入张量进行线性变换。"

#: ../../source/reference/functional.rst:358
msgid "Dropout functions"
msgstr "Dropout 函数"

#: ../../source/reference/functional.rst:364:<autosummary>:1
msgid ":py:obj:`dropout <megengine.functional.nn.dropout>`"
msgstr ""

#: ../../source/reference/functional.rst:364:<autosummary>:1
msgid ""
"Returns a new tensor where each of the elements are randomly set to zero "
"with probability P = ``drop_prob``."
msgstr "返回一个新的张量，其中每个元素以 P = ``drop_prob`` 的概率随机设置为零。"

#: ../../source/reference/functional.rst:368
msgid "Sparse functions"
msgstr "Sparse 函数"

#: ../../source/reference/functional.rst:376:<autosummary>:1
msgid ":py:obj:`one_hot <megengine.functional.nn.one_hot>`"
msgstr ""

#: ../../source/reference/functional.rst:376:<autosummary>:1
msgid "Performs one-hot encoding for the input tensor."
msgstr "对输入张量进行 one-hot 编码。"

#: ../../source/reference/functional.rst:376:<autosummary>:1
msgid ":py:obj:`indexing_one_hot <megengine.functional.nn.indexing_one_hot>`"
msgstr ""

#: ../../source/reference/functional.rst:376:<autosummary>:1
msgid "One-hot indexing for some axes."
msgstr "对一些轴进行 One-hot 索引。"

#: ../../source/reference/functional.rst:376:<autosummary>:1
msgid ":py:obj:`embedding <megengine.functional.nn.embedding>`"
msgstr ""

#: ../../source/reference/functional.rst:376:<autosummary>:1
msgid "Applies lookup table for embedding."
msgstr "应用查找表进行 embedding。"

#: ../../source/reference/functional.rst:380
msgid "Loss functions"
msgstr "损失函数"

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ":py:obj:`l1_loss <megengine.functional.nn.l1_loss>`"
msgstr ""

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ""
"Calculates the mean absolute error (MAE) between each element in the pred"
" :math:`x` and label :math:`y`."
msgstr "计算预测值 :math:`x` 和标签值 :math:`y` 的每个元素之间的平均绝对误差(MAE)。"

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ":py:obj:`square_loss <megengine.functional.nn.square_loss>`"
msgstr ""

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ""
"Calculates the mean squared error (squared L2 norm) between each element "
"in the pred :math:`x` and label :math:`y`."
msgstr "计算预测值 :math:`x` 和标签值 :math:`y` 之间的均方误差(平方L2范数)。"

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ":py:obj:`hinge_loss <megengine.functional.nn.hinge_loss>`"
msgstr ""

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid "Caculates the hinge loss which is often used in SVM."
msgstr "计算支持向量机 SVM 中经常使用的 hinge loss。"

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ""
":py:obj:`binary_cross_entropy "
"<megengine.functional.nn.binary_cross_entropy>`"
msgstr ""

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid "Computes the binary cross entropy loss (using logits by default)."
msgstr "计算 binary cross entropy loss（默认使用 logits）。"

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ":py:obj:`cross_entropy <megengine.functional.nn.cross_entropy>`"
msgstr ""

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid "Computes the multi-class cross entropy loss (using logits by default)."
msgstr "计算 multi-class cross entropy loss（默认使用 logits）。"

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid ":py:obj:`ctc_loss <megengine.functional.nn.ctc_loss>`"
msgstr ""

#: ../../source/reference/functional.rst:391:<autosummary>:1
msgid "The Connectionist Temporal Classification loss."
msgstr "计算 Connectionist Temporal Classification loss 。"

#: ../../source/reference/functional.rst:395
msgid "Vision functions"
msgstr "视觉运算"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`cvt_color <megengine.functional.nn.cvt_color>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Convert images from one format to another"
msgstr "将图像从一种格式转化成另一种格式。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`pad <megengine.functional.nn.pad>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Pads the input tensor."
msgstr "填充输入张量。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`pixel_shuffle <megengine.functional.nn.pixel_shuffle>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ""
"Rearranges elements in a tensor of shape `(..., C * r^2, H, W)` to a "
"tensor of shape `(..., C, H * r, W * r)`, where `r` is an upscale factor,"
" where `...` is zero or more batch dimensions."
msgstr ""
"将形状为 `(..., C * r^2, H, W)` 的张量的元素重排为一个形状为 `(..., C, H * r, W * r)` "
"的张量，其中 `r` 是一个放大系数， `...` 是零个或更多的 batch 维度。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`interpolate <megengine.functional.nn.interpolate>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ""
"Down/up samples the input tensor to either the given size or with the "
"given scale_factor."
msgstr "根据给定的大小或缩放因子将输入张量进行上/下采样。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`remap <megengine.functional.nn.remap>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Applies remap transformation to batched 2D images."
msgstr "对按批组织的二维图像进行重映射变换。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`warp_affine <megengine.functional.nn.warp_affine>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Batched affine transformation on 2D images."
msgstr "二维图像的批量仿射变换。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`warp_perspective <megengine.functional.nn.warp_perspective>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Applies perspective transformation to batched 2D images."
msgstr "对按批组织的二维图像进行透视变换。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`roi_pooling <megengine.functional.nn.roi_pooling>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ""
"Applies RoI (Region of Interest) pooling on input feature, as described "
"in Faster RCNN."
msgstr "在指定输入的感兴趣区域上执行池化，并获得固定大小的特征图， 如Faster RCNN中所述"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`roi_align <megengine.functional.nn.roi_align>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ""
"Applies RoI (Region of Interest) align on input feature, as described in "
"Mask R-CNN."
msgstr "RoI Align 是在指定输入的感兴趣区域上获得特征图，如 Mask R-CNN 论文中所述。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`nms <megengine.functional.nn.nms>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ""
"Performs non-maximum suppression (NMS) on the boxes according to their "
"intersection-over-union(IoU)."
msgstr "根据小方框的 IoU 值进行 非最大值抑制（NMS）。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`correlation <megengine.functional.nn.correlation>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Applies correlation to inputs."
msgstr "对输入进行相关性计算。"

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid ":py:obj:`nvof <megengine.functional.nn.nvof>`"
msgstr ""

#: ../../source/reference/functional.rst:412:<autosummary>:1
msgid "Implements NVIDIA Optical Flow SDK."
msgstr "NVIDIA光流SDK的实现"

#: ../../source/reference/functional.rst:419
msgid "Quantized functions"
msgstr "量化函数"

#: ../../source/reference/functional.rst:427:<autosummary>:1
msgid ""
":py:obj:`conv_bias_activation "
"<megengine.functional.quantized.conv_bias_activation>`"
msgstr ""

#: ../../source/reference/functional.rst:427:<autosummary>:1
msgid "Convolution bias with activation operation, only for inference."
msgstr "带有激活函数的卷积偏置操作，仅用于推理"

#: ../../source/reference/functional.rst:427:<autosummary>:1
msgid ""
":py:obj:`batch_conv_bias_activation "
"<megengine.functional.quantized.batch_conv_bias_activation>`"
msgstr ""

#: ../../source/reference/functional.rst:427:<autosummary>:1
msgid "Batch convolution bias with activation operation, only for inference."
msgstr "带有激活函数的批量卷积偏置，仅用于推理"

#: ../../source/reference/functional.rst:427:<autosummary>:1
msgid ""
":py:obj:`conv_transpose2d "
"<megengine.functional.quantized.conv_transpose2d>`"
msgstr ""

#: ../../source/reference/functional.rst:427:<autosummary>
msgid "rtype"
msgstr ""

#: ../../source/reference/functional.rst:427:<autosummary>:1
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ":py:class:`~megengine.tensor.Tensor`"

#: ../../source/reference/functional.rst:434
msgid "Distributed functions"
msgstr "分布式算子"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`all_gather <megengine.functional.distributed.all_gather>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
"Gather tensors across the specified group and concat them at first "
"dimension."
msgstr "在指定的组中收集张量，并沿第一维对其进行拼接。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`all_reduce_max <megengine.functional.distributed.all_reduce_max>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
"Reduce tensors with max operation on each value across the specified "
"group."
msgstr "在指定组中以 max 操作来对张量进行规约操作。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`all_reduce_min <megengine.functional.distributed.all_reduce_min>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
"Reduce tensors with min operation on each value across the specified "
"group."
msgstr "在指定组中以 min 操作来对张量进行规约操作。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`all_reduce_sum <megengine.functional.distributed.all_reduce_sum>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
"Reduce tensors with sum operation on each value across the specified "
"group."
msgstr "在指定组中以求和操作来对张量进行规约操作。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`all_to_all <megengine.functional.distributed.all_to_all>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
"Each process scatter input tensor to all processes and return gathered "
"tensor."
msgstr "每个进程将输入张量分散到所有进程，并返回收集的张量。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`broadcast <megengine.functional.distributed.broadcast>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Broadcast tensor data from root process to others."
msgstr "从根进程向其他进程广播张量数据。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
":py:obj:`reduce_scatter_sum "
"<megengine.functional.distributed.reduce_scatter_sum>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
"Reduce tensors across the specified group by sum and split them at first "
"dimension."
msgstr "通过求和规约指定组中的张量，并在第一维度将其拆分。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ""
":py:obj:`collective_comm "
"<megengine.functional.distributed.collective_comm>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Helper function for applying collective communication functions."
msgstr "用于集合通信的辅助函数。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`remote_send <megengine.functional.distributed.remote_send>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Send tensor to another process."
msgstr "发送张量到另一个进程。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`remote_recv <megengine.functional.distributed.remote_recv>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Receive a tensor from another process."
msgstr "从另一个进程接收张量。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`reduce_sum <megengine.functional.distributed.reduce_sum>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Reduce tensor data across the specified group by sum."
msgstr "在指定组中以 sum操作来对张量进行规约操作。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`gather <megengine.functional.distributed.gather>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Gather tensors across the specified group."
msgstr "在指定的组中收集张量。"

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid ":py:obj:`scatter <megengine.functional.distributed.scatter>`"
msgstr ""

#: ../../source/reference/functional.rst:452:<autosummary>:1
msgid "Split tensor in root process at first dimension."
msgstr "在根进程中沿第一维度切分张量。"

#: ../../source/reference/functional.rst:459
msgid "External functions"
msgstr "External 函数"

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid ""
":py:obj:`extern_opr_subgraph "
"<megengine.functional.external.extern_opr_subgraph>`"
msgstr ""

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid "Load a serialized extern opr subgraph and fake execute the operator."
msgstr "加载序列化的extern opr子图并假执行运算符。"

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid ""
":py:obj:`tensorrt_runtime_opr "
"<megengine.functional.external.tensorrt_runtime_opr>`"
msgstr ""

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid ""
":py:obj:`cambricon_runtime_opr "
"<megengine.functional.external.cambricon_runtime_opr>`"
msgstr ""

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid "Load a serialized Cambricon model as a runtime operator in MegEngine."
msgstr "将一个序列化后的寒武纪模型加载成 MegEngine 中的一个运行时算子。"

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid ""
":py:obj:`atlas_runtime_opr "
"<megengine.functional.external.atlas_runtime_opr>`"
msgstr ""

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid "Load a serialized Atlas model as a runtime operator in MegEngine."
msgstr "加载 ``Atlas`` 模型。"

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid ""
":py:obj:`magicmind_runtime_opr "
"<megengine.functional.external.magicmind_runtime_opr>`"
msgstr ""

#: ../../source/reference/functional.rst:468:<autosummary>:1
msgid "Load a serialized MagicMind model as a runtime operator in MegEngine."
msgstr "加载序列化的MagicMind模型作为MegEngine中的运行时操作符。"

#~ msgid "tensor 子模块"
#~ msgstr "tensor 子模块"

#~ msgid "elemwise 子模块"
#~ msgstr "elemwise 子模块"

#~ msgid "基本运算"
#~ msgstr "基本运算"

#~ msgid "math 子模块"
#~ msgstr "math 子模块"

#~ msgid "条件计算"
#~ msgstr "条件计算"

#~ msgid "nn 子模块"
#~ msgstr "nn 子模块"

#~ msgid "loss 子模块"
#~ msgstr "loss 子模块"

#~ msgid "metric 子模块"
#~ msgstr "metric 子模块"

#~ msgid "distributed 子模块"
#~ msgstr "distributed 子模块"

#~ msgid "vision 模块"
#~ msgstr "vision 模块"

#~ msgid "函数式（Functional）"
#~ msgstr "函数式（Functional）"

#~ msgid "基础算子"
#~ msgstr ""

#~ msgid "创建张量"
#~ msgstr "创建张量"

#~ msgid "数值范围"
#~ msgstr ""

#~ msgid "处理张量"
#~ msgstr "处理张量"

#~ msgid "改变张量形状"
#~ msgstr ""

#~ msgid "转置操作"
#~ msgstr ""

#~ msgid "改变张量维度"
#~ msgstr ""

#~ msgid "拼接张量"
#~ msgstr ""

#~ msgid "切割张量"
#~ msgstr ""

#~ msgid "存取张量"
#~ msgstr ""

#~ msgid "重复张量"
#~ msgstr ""

#~ msgid "算术运算"
#~ msgstr ""

#~ msgid "舍入运算"
#~ msgstr ""

#~ msgid "指数与对数运算"
#~ msgstr ""

#~ msgid "三角运算"
#~ msgstr "三角运算"

#~ msgid "双曲函数"
#~ msgstr ""

#~ msgid "位运算"
#~ msgstr "位运算"

#~ msgid "逻辑运算"
#~ msgstr "逻辑运算"

#~ msgid "比较运算"
#~ msgstr "比较运算"

#~ msgid "归约计算"
#~ msgstr "归约计算"

#~ msgid "线性代数"
#~ msgstr "线性代数"

#~ msgid "概率统计"
#~ msgstr "概率统计"

#~ msgid "排序与搜索"
#~ msgstr ""

#~ msgid "杂项"
#~ msgstr ""

#~ msgid "神经网络算子"
#~ msgstr ""

#~ msgid "卷积函数"
#~ msgstr "卷积函数"

#~ msgid "池化函数"
#~ msgstr "池化函数"

#~ msgid "非线性激活函数"
#~ msgstr "非线性激活函数"

#~ msgid "归一化函数"
#~ msgstr "归一化函数"

#~ msgid "线性函数"
#~ msgstr "线性函数"

#~ msgid "随机失活函数"
#~ msgstr "随机失活函数"

#~ msgid "稀疏函数"
#~ msgstr "稀疏函数"

#~ msgid "损失函数"
#~ msgstr "随机失活函数"

#~ msgid ""
#~ "Calculates the mean absolute error (MAE)"
#~ " between each element in the pred "
#~ ":math:`x` and label :math:`y`."
#~ msgstr "计算预测值 :math:`x` 和标签值 :math:`y` 的每个元素之间的平均绝对误差(MAE)。"

#~ msgid "评估指标"
#~ msgstr ""

#~ msgid "计算机视觉"
#~ msgstr ""

#~ msgid "分布式算子"
#~ msgstr ""

#~ msgid "General Operations"
#~ msgstr ""

#~ msgid "Tensor creation"
#~ msgstr ""

#~ msgid "Tensor manipulation"
#~ msgstr ""

#~ msgid "Changing tensor shape"
#~ msgstr ""

#~ msgid "Transpose-like"
#~ msgstr ""

#~ msgid "Changing number of dimensions"
#~ msgstr ""

#~ msgid "Joining, Splitting, Tiling and others"
#~ msgstr ""

#~ msgid "Rounding"
#~ msgstr ""

#~ msgid "Exponents and logarithms"
#~ msgstr ""

#~ msgid "Comparison"
#~ msgstr ""

#~ msgid "Sums, products and others"
#~ msgstr ""

#~ msgid "Matrix operations"
#~ msgstr ""

#~ msgid "Statistics"
#~ msgstr ""

#~ msgid "Performs :math:`L_p` normalization of input tensor along"
#~ msgstr ""

#~ msgid "Sorting and searching"
#~ msgstr ""

#~ msgid ""
#~ "Applies a :math:`   ext{softmax}(x)` function."
#~ " :math:`      ext{softmax}(x)` is defined "
#~ "as:"
#~ msgstr ""

#~ msgid ""
#~ "Applies the :math:`\\log(    ext{softmax}(x))` "
#~ "function to an n-dimensional"
#~ msgstr ""

#~ msgid "Calculates the mean absolute error (MAE) between"
#~ msgstr ""

#~ msgid "Calculates the mean squared error (squared L2 norm) between"
#~ msgstr ""

#~ msgid "Searching Functions"
#~ msgstr ""

#~ msgid "Sorting Functions"
#~ msgstr ""

#~ msgid "Standard tensor operations"
#~ msgstr ""

#~ msgid "Returns a tensor with given shape and value."
#~ msgstr "返回一个给定形状和值的张量。"

#~ msgid "Element-wise `subtraction`."
#~ msgstr "逐元素相减。"

#~ msgid "Returns a new tensor with the square of the elements of input tensor."
#~ msgstr "返回一个包含输入张量中各元素平方的新的张量"

#~ msgid "Comparison functions"
#~ msgstr ""

#~ msgid "Searching and Sorting Functions"
#~ msgstr ""

#~ msgid "Applies the element-wise PReLU function."
#~ msgstr "逐元素计算 PReLU."

#~ msgid ":obj:`correlation <megengine.functional.vision.correlation>`"
#~ msgstr ""

#~ msgid ":obj:`nvof <megengine.functional.vision.nvof>`"
#~ msgstr ""

#~ msgid "Create all_reduce_max operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_reduce_max 算子。"

#~ msgid "Create all_reduce_min operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_reduce_min 算子。"

#~ msgid "Create all_reduce_sum operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_reduce_sum 算子。"

#~ msgid "Create broadcast operator for collective communication."
#~ msgstr "创建用于聚合通信的广播算子。"

#~ msgid "Create all_gather operator for collective communication."
#~ msgstr "创建用于聚合通信的 all_gather 算子。"

#~ msgid "Create all_to_all operator for collective communication."
#~ msgstr "创建用于聚合通信 all_to_all 算子。"

#~ msgid "Create reduce_sum operator for collective communication."
#~ msgstr "创建用于聚合通信的 reduce_sum 算子"

#~ msgid "Create gather operator for collective communication."
#~ msgstr "创建用于聚合通信的 gather 算子。"

#~ msgid "Create scatter operator for collective communication."
#~ msgstr "创建用于聚合通信的 scatter 算子。"

#~ msgid "Create reduce_scatter_sum operator for collective communication."
#~ msgstr "创建用于聚合通信的 reduce_scatter_sum 算子"

#~ msgid ""
#~ "Returns the execution strategy of "
#~ ":class:`~.Conv2d` and :func:`~.matmul`"
#~ msgstr ""

#~ msgid "Sets the execution strategy of :class:`~.Conv2d` and :func:`~.matmul`"
#~ msgstr ""

#~ msgid ""
#~ "Returns a tensor with values from "
#~ "start to stop with adjacent interval "
#~ "step."
#~ msgstr "返回一个数值从 `start` 到  `stop` ，相邻间隔为 `step` 的张量。"

#~ msgid "Returns a zero tensor with given shape."
#~ msgstr "根据给定形状返回元素全为 0 的 Tensor"

#~ msgid "Returns a zero tensor with the same shape as input tensor."
#~ msgstr "返回一个和参数同维度，且数值全为 0 的 Tensor"

#~ msgid "Returns a ones tensor with given shape."
#~ msgstr "返回一个具有给定形状的全1张量。"

#~ msgid "Returns a ones tensor with the same shape as input tensor."
#~ msgstr "返回一个与输入张量形状相同的全1张量"

#~ msgid ""
#~ "Reshapes a tensor to given target "
#~ "shape; total number of logical elements"
#~ " must remain unchanged"
#~ msgstr "将一个张量重塑为给定的目标形状；逻辑元素的总数必须保持不变"

#~ msgid "Element-wise `multiplication`."
#~ msgstr "逐元素相乘。"

#~ msgid "Reduce tensors across the specified group by max."
#~ msgstr ""

#~ msgid "Reduce tensors across the specified group by min."
#~ msgstr ""

#~ msgid "Reduce tensors across the specified group by sum."
#~ msgstr ""

#~ msgid ":obj:`logaddexp <megengine.functional.logaddexp>`"
#~ msgstr ""

#~ msgid ":obj:`diag <megengine.functional.diag>`"
#~ msgstr ""

#~ msgid "Computes the singular value decompositions of input matrix."
#~ msgstr "对输入矩阵 ``inp`` 进行奇异值分解。"

#~ msgid ":obj:`conv1d <megengine.functional.nn.conv1d>`"
#~ msgstr ""

#~ msgid ":obj:`conv2d <megengine.functional.nn.conv2d>`"
#~ msgstr ""

#~ msgid ":obj:`conv3d <megengine.functional.nn.conv3d>`"
#~ msgstr ""

#~ msgid ":obj:`local_conv2d <megengine.functional.nn.local_conv2d>`"
#~ msgstr ""

#~ msgid ":obj:`conv_transpose2d <megengine.functional.nn.conv_transpose2d>`"
#~ msgstr ""

#~ msgid ":obj:`conv_transpose3d <megengine.functional.nn.conv_transpose3d>`"
#~ msgstr ""

#~ msgid ":obj:`deformable_conv2d <megengine.functional.nn.deformable_conv2d>`"
#~ msgstr ""

#~ msgid ":obj:`sliding_window <megengine.functional.nn.sliding_window>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`sliding_window_transpose "
#~ "<megengine.functional.nn.sliding_window_transpose>`"
#~ msgstr ""

#~ msgid ":obj:`avg_pool2d <megengine.functional.nn.avg_pool2d>`"
#~ msgstr ""

#~ msgid ":obj:`max_pool2d <megengine.functional.nn.max_pool2d>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`adaptive_avg_pool2d "
#~ "<megengine.functional.nn.adaptive_avg_pool2d>`"
#~ msgstr ""

#~ msgid ":obj:`topk_accuracy <megengine.functional.nn.topk_accuracy>`"
#~ msgstr ""

#~ msgid ":obj:`cvt_color <megengine.functional.nn.cvt_color>`"
#~ msgstr ""

#~ msgid ":obj:`pad <megengine.functional.nn.pad>`"
#~ msgstr ""

#~ msgid ""
#~ "Pad is python warpper for padding "
#~ "opr in megbrain, can padding in "
#~ "random one of the max 7 "
#~ "dimensions."
#~ msgstr ""

#~ msgid ":obj:`pixel_shuffle <megengine.functional.nn.pixel_shuffle>`"
#~ msgstr ""

#~ msgid ":obj:`interpolate <megengine.functional.nn.interpolate>`"
#~ msgstr ""

#~ msgid ":obj:`remap <megengine.functional.nn.remap>`"
#~ msgstr ""

#~ msgid ":obj:`warp_affine <megengine.functional.nn.warp_affine>`"
#~ msgstr ""

#~ msgid ":obj:`warp_perspective <megengine.functional.nn.warp_perspective>`"
#~ msgstr ""

#~ msgid ":obj:`roi_pooling <megengine.functional.nn.roi_pooling>`"
#~ msgstr ""

#~ msgid ":obj:`roi_align <megengine.functional.nn.roi_align>`"
#~ msgstr ""

#~ msgid ":obj:`nms <megengine.functional.nn.nms>`"
#~ msgstr ""

#~ msgid ":obj:`correlation <megengine.functional.nn.correlation>`"
#~ msgstr ""

#~ msgid ":obj:`nvof <megengine.functional.nn.nvof>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_execution_strategy "
#~ "<megengine.functional.debug_param.get_execution_strategy>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_execution_strategy "
#~ "<megengine.functional.debug_param.set_execution_strategy>`"
#~ msgstr ""

#~ msgid "Element-wise `addition`."
#~ msgstr "逐元素相加。"

#~ msgid "Element-wise `sub`."
#~ msgstr "Element-wise `sub`."

#~ msgid "Element-wise `(x / y)`."
#~ msgstr "逐元素相除。"

#~ msgid "Element-wise `floor(x / y)`."
#~ msgstr "逐元素相除并下取整。"

#~ msgid "Element-wise `negation`."
#~ msgstr "逐元素取相反数。"

#~ msgid "Element-wise `power`."
#~ msgstr "逐元素进行指数运算。"

#~ msgid "Element-wise `remainder of division`."
#~ msgstr "返回逐元素相除所得的余数。"

#~ msgid ""
#~ "Returns a singular value decomposition "
#~ "``A = USVh`` of a matrix (or "
#~ "a stack of matrices) ``x`` , where"
#~ " ``U`` is a matrix (or a stack"
#~ " of matrices) with orthonormal columns, "
#~ "``S`` is a vector of non-negative"
#~ " numbers (or stack of vectors), and"
#~ " ``Vh`` is a matrix (or a stack"
#~ " of matrices) with orthonormal rows."
#~ msgstr ""
#~ "返回一个矩阵 ``x``(或一个矩阵堆) 的奇异值分解 ``A = USVh``"
#~ " , 其中 ``U`` 是一个具有正交列的矩阵 (或一个矩阵堆) ,"
#~ " ``S`` 是一个非负数的向量 (或一个向量堆), ``Vh`` "
#~ "是一个具有正交行的矩阵 (或一个矩阵堆)。"

#~ msgid ":py:obj:`topk_accuracy <megengine.functional.nn.topk_accuracy>`"
#~ msgstr ""

#~ msgid "Debug Setting"
#~ msgstr "调试设置"

#~ msgid ""
#~ ":py:obj:`get_execution_strategy "
#~ "<megengine.functional.debug_param.get_execution_strategy>`"
#~ msgstr ""
#~ ":py:obj:`get_execution_strategy "
#~ "<megengine.functional.debug_param.get_execution_strategy>`"

#~ msgid ""
#~ "Returns the execution strategy of "
#~ ":class:`~.module.Conv2d` and :func:`~.matmul`"
#~ msgstr "返回 :class:`~.module.Conv2d`和:func:`~.matmul` 的执行策略"

#~ msgid ""
#~ ":py:obj:`set_execution_strategy "
#~ "<megengine.functional.debug_param.set_execution_strategy>`"
#~ msgstr ""
#~ ":py:obj:`set_execution_strategy "
#~ "<megengine.functional.debug_param.set_execution_strategy>`"

#~ msgid ""
#~ "Sets the execution strategy of "
#~ ":class:`~.module.Conv2d` and :func:`~.matmul`"
#~ msgstr "设置:class:`~.module.Conv2d` 和 :func:`~.matmul`的执行策略"

#~ msgid "Applies roi pooling on input feature."
#~ msgstr "对输入进行 roi pooling。"

#~ msgid "Applies roi align on input feature."
#~ msgstr "对输入进行 roi align。"

#~ msgid "Creates a tensor of shape ``shape`` filled with ``value``."
#~ msgstr "返回一个形状为shape类型为type元素值为value的张量"

#~ msgid ""
#~ "Calculates the sum for each element "
#~ ":math:`x_i` of the input tensor "
#~ ":math:`x` with the respective element "
#~ ":math:`y_i` of the input tensor "
#~ ":math:`y`."
#~ msgstr "计算输入 :math:`x` 与输入 :math:`y` 的逐元素和。"

#~ msgid ""
#~ "Calculates the difference for each "
#~ "element :math:`x_i` of the input tensor"
#~ " :math:`x` with the respective element "
#~ ":math:`y` of the input tensor :math:`y`."
#~ msgstr ""

#~ msgid ""
#~ "Calculates the product for each element"
#~ " :math:`x_i` of the input tensor `x`"
#~ " with the respective element :math:`y_i`"
#~ " of the input tensor :math:`y`."
#~ msgstr "计算输入张量 `x` 的每个元素 :math:`x_i` 与输入张量 :math:`y` 的相应元素 :math:`y_i` 的乘积。"

#~ msgid ""
#~ "Calculates the division for each element"
#~ " :math:`x_i` of the input tensor "
#~ ":math:`x` with the respective element "
#~ ":math:`y_i` of the input tensor "
#~ ":math:`y`."
#~ msgstr "计算输入 :math:`x` 与输入 :math:`y` 的逐元素除。"

#~ msgid ""
#~ "Rounds the result of dividing each "
#~ "element :math:`x_i` of the input tensor"
#~ " :math:`x` by the respective element "
#~ ":math:`y_i` of the input tensor "
#~ ":math:`y` to the greatest (i.e., closest"
#~ " to ``+infinity``) integer-value number "
#~ "that is not greater than the "
#~ "division result."
#~ msgstr ""
#~ "将输入张量 :math:`x` 的每个元素 :math:`x_i` 除以输入张量 "
#~ ":math:`y_i` 的相应元素 :math:`y` 的结果四舍五入到最大 (即最接近到"
#~ " ``+infinity``) 不大于除法结果的整数值数。"

#~ msgid ""
#~ "Computes the numerical negative of each"
#~ " element :math:`x_i` (i.e., :math:`y_i ="
#~ " -x_i` ) of the input tensor "
#~ ":math:`x`."
#~ msgstr "计算输入张量 :math:`x` 的每个元素 :math:`x_i` 的负数 (即 :math:`y_i = -x_i`)。"

#~ msgid "Element-wise `absolute value`."
#~ msgstr "逐元素取绝对值。"

#~ msgid ""
#~ "Returns a new tensor representing the"
#~ " sign of each element in input "
#~ "tensor."
#~ msgstr "返回一个新的张量，该张量表明每个元素的符号。"

#~ msgid ""
#~ "Calculates an implementation-dependent "
#~ "approximation of exponentiation by raising "
#~ "each element :math:`x_i` (the base) of"
#~ " the input tensor :math:`x` to the"
#~ " power of :math:`y_i` (the exponent), "
#~ "where :math:`y_i` is the corresponding "
#~ "element of the input tensor :math:`y`."
#~ msgstr ""
#~ "一种特定实现的近似取幂运算，将张量 :math:`x` 中的每一个元素 :math:`x_i` "
#~ "(底数) 跟张量 :math:`y` 中每一个元素 :math:`y_i` "
#~ "(指数)做幂运算。"

#~ msgid ""
#~ "Returns the remainder of division for"
#~ " each element ``x_i`` of the input"
#~ " tensor ``x`` and the respective "
#~ "element ``y_i`` of the input tensor "
#~ "``y``."
#~ msgstr "返回输入张量 ``x`` 的每个元素 ``x_i`` 和输入张量 ``y`` 的相应元素 ``y_i`` 的除法余数。"

#~ msgid "Element-wise `square`."
#~ msgstr "逐元素取平方。"

#~ msgid "Element-wise `rounding to int`."
#~ msgstr "逐元素四舍五入到整数。"

#~ msgid "Element-wise `ceiling`."
#~ msgstr "逐元素上取整。"

#~ msgid ""
#~ "Clamps all elements in input tensor "
#~ "into the range ``[ lower, upper "
#~ "]`` and returns a resulting tensor:"
#~ msgstr "将输入张量的所有元素限制在 ``[ lower, upper ]`` 区间并返回相应的结果："

#~ msgid "Element-wise `exponential`."
#~ msgstr "逐元素计算 `e` 的 `x` 次方。"

#~ msgid "Element-wise `exp(x)-1`."
#~ msgstr "逐元素计算 expm1 函数。"

#~ msgid "Element-wise `logarithm (base e)`."
#~ msgstr "逐元素计算以 `e` 为底的对数。"

#~ msgid "Element-wise `log(x+1) (base e)`."
#~ msgstr "逐元素计算 `(x+1)` 以 `e` 为底的对数。"

#~ msgid "Element-wise `numerically stable log(exp(x) + exp(y)`."
#~ msgstr "逐元素数值稳定的 `log(exp(x) + exp(y))`。"

#~ msgid "Element-wise `cosine`."
#~ msgstr "逐元素计算余弦函数。"

#~ msgid "Element-wise `tangent`."
#~ msgstr "逐元素计算正切函数。"

#~ msgid "Element-wise `inverse sine`."
#~ msgstr "逐元素计算反正弦函数。"

#~ msgid "Element-wise `inverse tangent`."
#~ msgstr "逐元素计算反正切函数。"

#~ msgid "Element-wise `2-argument arctangent`."
#~ msgstr "逐元素计算两个参数的反正切函数。"

#~ msgid "Element-wise `hyperbolic sine`."
#~ msgstr "逐元素计算双曲正弦函数。"

#~ msgid "Element-wise `hyperbolic tangent`."
#~ msgstr "逐元素计算双曲正切值。"

#~ msgid "Element-wise `inverse hyperbolic cosine`."
#~ msgstr "逐元素计算反双曲余弦函数。"

#~ msgid "Element-wise `inverse hyperbolic sine`."
#~ msgstr "逐元素计算反双曲正弦函数。"

#~ msgid "Element-wise `inverse hyperbolic tangent`."
#~ msgstr "逐元素计算反双曲正切函数。"

#~ msgid "Element-wise `bitwise binary: x << y`."
#~ msgstr "逐元素计算 x << y。"

#~ msgid "Element-wise `bitwise binary: x >> y`."
#~ msgstr "逐元素计算 x >> y。"

#~ msgid "Returns a new tensor representing if each element is ``NaN`` or not."
#~ msgstr "返回一个新的张量，该张量表明每个元素是否为非数值类型 ``NaN``."

#~ msgid "Returns a new tensor representing if each element is ``Inf`` or not."
#~ msgstr "返回一个张量，它表示每个元素是否是无穷大值 ``Inf``."

#~ msgid "Element-wise `logical or: x || y`."
#~ msgstr "逐元素进行逻辑或运算。"

#~ msgid "Element-wise `(x > y)`."
#~ msgstr "逐元素计算 x 大于 y."

#~ msgid "Element-wise `(x >= y)`."
#~ msgstr "逐元素判断 x 大于或者等于 y."

#~ msgid "Element-wise `(x < y)`."
#~ msgstr "逐元素的计算 x 小于 y."

#~ msgid "Element-wise `(x <= y)`."
#~ msgstr "逐元素计算 x 小于或等于 y."

#~ msgid "Element-wise `(x == y)`."
#~ msgstr "逐元素判断是否相等。"

#~ msgid "Element-wise `(x != y)`."
#~ msgstr "逐元素计算 x 不等于 y."

#~ msgid "Returns the sum of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求和后的结果。"

#~ msgid "Returns the product of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求乘积后的结果。"

#~ msgid "Returns the mean value of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求平均后的结果。"

#~ msgid "Returns the min value of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求最小值后的结果。"

#~ msgid "Returns the max value of the input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求最大值后的结果。"

#~ msgid "Returns the variance value of input tensor along given axis."
#~ msgstr "返回输入张量在给定轴上所有元素求方差后的结果。"

#~ msgid ""
#~ "If ``inp`` is a 1D tensor, then"
#~ " returns a 2D tensor with the "
#~ "elements of ``inp`` as the diagonal."
#~ msgstr "如果 ``inp`` 是一维tensor，返回值是一个以 ``inp`` 为对角线的二维tensor。"


msgid ""
msgstr ""
"Project-Id-Version: megengine-documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-04-20 08:31\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine-documentation\n"
"X-Crowdin-Project-ID: 582157\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.logical_and.po\n"
"X-Crowdin-File-ID: 503\n"

#: ../../source/reference/api/megengine.functional.logical_and.rst:2
msgid "megengine.functional.logical\\_and"
msgstr ""

#: megengine.functional.elemwise.logical_and:1 of
msgid "Element-wise logical AND."
msgstr "Element-wise 逻辑与（AND）。"

#: megengine.functional.elemwise.logical_and:3 of
msgid "Computes the logical AND for each element :math:`x_i` of the input tensor :math:`x` with the respective element :math:`y_i` of the input tensor :math:`y`."
msgstr "为输入 tensor :math:`x`的每个元素 :math:`x_i` 和输入 tensor :math:`y` 的每个对应元素 :math:`y_i` 计算逻辑与。"

#: megengine.functional.elemwise.logical_and of
msgid "参数"
msgstr ""

#: megengine.functional.elemwise.logical_and:6 of
msgid "first input tensor. Should have a boolean data type."
msgstr "第一个输入tensor。应该是bool类型。"

#: megengine.functional.elemwise.logical_and:7 of
msgid "second input tensor. Must be compatible with :math:`x` (see :ref:`broadcasting-rule` ). Should have a boolean data type."
msgstr "第二个输入 tensor。必须兼容 :math:`x` (see :ref:`broadcasting-rule` )。应该是个bool类型。"

#: megengine.functional.elemwise.logical_and of
msgid "返回"
msgstr ""

#: megengine.functional.elemwise.logical_and:10 of
msgid "a tensor containing the result of the element-wise logical AND operation. The returned tensor must have a data type of ``bool``."
msgstr "一个包含element-wise逻辑与结果的tensor。返回tensor的结果数据类型必须是 ``bool``."

#: megengine.functional.elemwise.logical_and:15 of
msgid ":func:`~.logical_or`, :func:`~.logical_not`, :func:`~.logical_xor`"
msgstr ""

#: megengine.functional.elemwise.logical_and:18 of
msgid "实际案例"
msgstr ""

#: megengine.functional.elemwise.logical_and:22 of
msgid "Element-wise logical AND:"
msgstr "Element-wise 逻辑与:"

#: megengine.functional.elemwise.logical_and:29 of
msgid "The ``&`` operator can be used as a shorthand for ``F.logical_and`` on boolean tensors."
msgstr "``&`` 运算符可以被用作 ``F.logical_and`` 在bool类型tensors上的简写。"


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.4.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-12 09:02+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.module.LayerNorm.load_state_dict.rst:2
msgid "megengine.module.LayerNorm.load\\_state\\_dict"
msgstr ""

#: megengine.module.module.Module.load_state_dict:1 of
msgid ""
"Loads a given dictionary created by :func:`state_dict` into this module. "
"If ``strict`` is ``True``, the keys of :func:`state_dict` must exactly "
"match the keys returned by :func:`state_dict`."
msgstr ""

#: megengine.module.module.Module.load_state_dict:5 of
msgid ""
"Users can also pass a closure: ``Function[key: str, var: Tensor] -> "
"Optional[np.ndarray]`` as a `state_dict`, in order to handle complex "
"situations. For example, load everything except for the final linear "
"classifier:"
msgstr ""

#: megengine.module.module.Module.load_state_dict:17 of
msgid "Here returning ``None`` means skipping parameter ``k``."
msgstr ""

#: megengine.module.module.Module.load_state_dict:19 of
msgid ""
"To prevent shape mismatch (e.g. load PyTorch weights), we can reshape "
"before loading:"
msgstr ""

#: megengine.module.module.Module.load_state_dict:28 of
msgid "We can also perform inplace re-initialization or pruning:"
msgstr ""


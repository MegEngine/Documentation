msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-09-21 06:21\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.mod.po\n"
"X-Crowdin-File-ID: 9181\n"

#: ../../source/reference/api/megengine.functional.mod.rst:2
msgid "megengine.functional.mod"
msgstr "megengine.functional.mod"

#: megengine.functional.elemwise.mod:1 of
msgid "Element-wise :math:`\\operatorname{mod}(x, y)` function."
msgstr "逐元素 :math:`\\operatorname{mod}(x, y)` 函数"

#: megengine.functional.elemwise.mod:3 of
msgid "Returns the remainder of division for each element :math:`x_i` of the input tensor :math:`x` and the respective element :math:`y_i` of the input tensor :math:`y`."
msgstr "返回余数，即由输入张量 :math:`x` 中的每个元素 :math:`x_i` 关于输入张量 :math:`y`中的每个元素:math:`y_i`取模所得到余数。"

#: megengine.functional.elemwise.mod:8 of
#, python-format
msgid "In general, similar to Python’s % operator, this function is not recommended for floating-point operands as semantics do not follow IEEE 754. That this function is specified to accept floating-point operands is primarily for reasons of backward compatibility."
msgstr "类似于Python的%运算符，不建议将此函数用于浮点数，因为语义不符合IEEE 754。该函数可以接受浮点数主要是为了向后兼容。"

#: megengine.functional.elemwise.mod:10 of
msgid "``mod`` is an alias of ``remainder`` in NumPy."
msgstr "``mod`` 是 NumPy 中 ``remainder`` 的别名。"

#: megengine.functional.elemwise.mod:12 of
msgid ":func:`~.div` / :func:`~.floor_div`"
msgstr ":func:`~.div` / :func:`~.floor_div`"

#: megengine.functional.elemwise.mod of
msgid "参数"
msgstr "参数"

#: megengine.functional.elemwise.mod:15 of
msgid "dividend input tensor. Should have a numeric data type."
msgstr "输入 tensor，被除数。类型为数值数据类型。"

#: megengine.functional.elemwise.mod:17 of
msgid "divisor input tensor. Must be compatible with :math:`x` (see :ref:`broadcasting-rule` ). Should have a numeric data type."
msgstr "输入 tensor，除数，必须兼容:math:`x `(参见:ref:`broadcasting-rule`)。类型为数值数据类型。"

#: megengine.functional.elemwise.mod of
msgid "返回类型"
msgstr "返回类型"

#: megengine.functional.elemwise.mod:19 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ":py:class:`~megengine.tensor.Tensor`"

#: megengine.functional.elemwise.mod of
msgid "返回"
msgstr "返回"

#: megengine.functional.elemwise.mod:20 of
msgid "A tensor containing the element-wise results. The returned tensor must have a data type determined by :ref:`dtype-promotion`."
msgstr "包含逐元素结果的张量。 返回的张量必须具有由 :ref:`dtype-promotion` 确定的数据类型。"

#: megengine.functional.elemwise.mod:23 of
msgid "Special cases"
msgstr "特殊的案例"

#: megengine.functional.elemwise.mod:25 of
msgid "For floating-point operands,"
msgstr "对于浮点数的操作，"

#: megengine.functional.elemwise.mod:27 of
msgid "If either :math:`x_i` or :math:`y_i` is ``NaN``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 或 :math:`y_i` 是 ``NaN``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:28 of
msgid "If :math:`x_i` is either ``+infinity`` or ``-infinity`` and :math:`y_i` is either ``+infinity`` or ``-infinity``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``+infinity`` 或 ``-infinity``，并且 :math:`y_i` 是 ``+infinity`` 或 ``-infinity``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:29 of
msgid "If :math:`x_i` is either ``+0`` or ``-0`` and :math:`y_i` is either ``+0`` or ``-0``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``+0`` 或 ``-0``，并且 :math:`y_i` 是 ``+0`` 或 ``-0``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:30 of
msgid "If :math:`x_i` is ``+0`` and :math:`y_i` is greater than 0, the result is ``+0``."
msgstr "如果 :math:`x_i` 是 ``+0``，并且 :math:`y_i` 大于 ``0``，则结果是 ``+0``。"

#: megengine.functional.elemwise.mod:31 of
msgid "If :math:`x_i` is ``-0`` and :math:`y_i` is greater than 0, the result is ``+0``."
msgstr "如果 :math:`x_i` 是 ``-0``，并且 :math:`y_i` 大于 ``0``，则结果是 ``+0``。"

#: megengine.functional.elemwise.mod:32 of
msgid "If :math:`x_i` is ``+0`` and :math:`y_i` is less than 0, the result is ``-0``."
msgstr "如果 :math:`x_i` 是 ``+0``，并且 :math:`y_i` 小于 ``0``，则结果是 ``-0``。"

#: megengine.functional.elemwise.mod:33 of
msgid "If :math:`x_i` is ``-0`` and :math:`y_i` is less than 0, the result is ``-0``."
msgstr "如果 :math:`x_i` 是 ``-0``，并且 :math:`y_i` 小于 ``0``，则结果是 ``-0``。"

#: megengine.functional.elemwise.mod:34 of
msgid "If :math:`x_i` is greater than ``0`` and :math:`y_i` is ``+0``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 大于 ``0``，并且 :math:`y_i` 是 ``+0``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:35 of
msgid "If :math:`x_i` is greater than ``0`` and :math:`y_i` is ``-0``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 大于 ``0``，并且 :math:`y_i` 是 ``-0``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:36 of
msgid "If :math:`x_i` is less than ``0`` and :math:`y_i` is ``+0``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 小于 ``0``，并且 :math:`y_i` 是 ``+0``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:37 of
msgid "If :math:`x_i` is less than ``0`` and :math:`y_i` is ``-0``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 小于 ``0``，并且 :math:`y_i` 是 ``-0``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:38 of
msgid "If :math:`x_i` is ``+infinity`` and :math:`y_i` is a positive (i.e., greater than 0) finite number, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``+infinity``，并且 :math:`y_i` 是正数(即大于 ``0``)，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:39 of
msgid "If :math:`x_i` is ``+infinity`` and :math:`y_i` is a negative (i.e., less than 0) finite number, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``+infinity``，并且 :math:`y_i` 是负数(即小于 ``0``)，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:40 of
msgid "If :math:`x_i` is ``-infinity`` and :math:`y_i` is a positive (i.e., greater than 0) finite number, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``-infinity``，并且 :math:`y_i` 是正数(即大于 ``0``)，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:41 of
msgid "If :math:`x_i` is ``-infinity`` and :math:`y_i` is a negative (i.e., less than 0) finite number, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``-infinity``，并且 :math:`y_i` 是负数(即小于 ``0``)，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mod:42 of
msgid "If :math:`x_i` is a positive (i.e., greater than ``0``) finite number and :math:`y_i` is ``+infinity``, the result is :math:`x_i`. (note: this result matches Python behavior.)"
msgstr "如果 :math:`x_i` 是正数(即大于 ``0``)，并且 :math:`y_i` 是 ``+infinity``，则结果是 :math:`x_i`。(注：与Python行为一致)"

#: megengine.functional.elemwise.mod:44 of
msgid "If :math:`x_i` is a positive (i.e., greater than ``0``) finite number and :math:`y_i` is ``-infinity``, the result is :math:`y_i`. (note: this result matches Python behavior.)"
msgstr "如果 :math:`x_i` 是正数(即大于 ``0``)，并且 :math:`y_i` 是 ``-infinity``，则结果是 :math:`y_i`。(注：与Python行为一致)"

#: megengine.functional.elemwise.mod:46 of
msgid "If :math:`x_i` is a negative (i.e., less than ``0``) finite number and :math:`y_i` is ``+infinity``, the result is :math:`y_i`. (note: this results matches Python behavior.)"
msgstr "如果 :math:`x_i` 是负数(即小于 ``0``)，并且 :math:`y_i` 是 ``+infinity``，则结果是 :math:`y_i`。(注：与Python行为一致)"

#: megengine.functional.elemwise.mod:48 of
msgid "If :math:`x_i` is a negative (i.e., less than ``0``) finite number and :math:`y_i` is ``-infinity``, the result is :math:`x_i`. (note: this result matches Python behavior.)"
msgstr "如果 :math:`x_i` 是负数(即小于 ``0``)，并且 :math:`y_i` 是 ``-infinity``，则结果是 :math:`x_i`。(注：与Python行为一致)"

#: megengine.functional.elemwise.mod:50 of
msgid "In the remaining cases, the result must match that of the Python ``%`` operator."
msgstr "对于其余情况，必须与Python中的 ``%`` 操作符的结果一致。"

#: megengine.functional.elemwise.mod:53 of
msgid "实际案例"
msgstr "实际案例"

#: megengine.functional.elemwise.mod:57 of
msgid "Element-wise mod:"
msgstr "逐元素取模："

#: megengine.functional.elemwise.mod:64 of
msgid "Broadcasting:"
msgstr "广播："

#~ msgid "Element-wise `remainder of division`."
#~ msgstr "返回逐元素相除所得的余数。"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-05-11 10:49\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.logical_not.po\n"
"X-Crowdin-File-ID: 9161\n"

#: ../../source/reference/api/megengine.functional.logical_not.rst:2
msgid "megengine.functional.logical\\_not"
msgstr ""

#: megengine.functional.elemwise.logical_not:1 of
msgid "Element-wise logical NOT."
msgstr "Element-wise 逻辑非（NOT）。"

#: megengine.functional.elemwise.logical_not:3 of
msgid "Computes the logical NOT for each element :math:`x_i` of the input tensor :math:`x`."
msgstr "计算输入tensor :math:`x` 每个元素 :math:`x_i` 的逻辑非。"

#: megengine.functional.elemwise.logical_not of
msgid "参数"
msgstr ""

#: megengine.functional.elemwise.logical_not:5 of
msgid "input tensor. Should have a boolean data type."
msgstr "输入tensor。应该是bool类型数据。"

#: megengine.functional.elemwise.logical_not of
msgid "返回"
msgstr ""

#: megengine.functional.elemwise.logical_not:7 of
msgid "a tensor containing the result of the element-wise logical NOT operation. The returned tensor must have a data type of ``bool``."
msgstr "包含 element-wise 逻辑非计算结果的tensor。 返回的 tensor 的数据类型必须是 ``bool``。"

#: megengine.functional.elemwise.logical_not:12 of
msgid ":func:`~.logical_and`, :func:`~.logical_or`, :func:`~.logical_xor`"
msgstr ""

#: megengine.functional.elemwise.logical_not:15 of
msgid "实际案例"
msgstr "实际案例"

#: megengine.functional.elemwise.logical_not:19 of
msgid "Element-wise logical NOT:"
msgstr "Element-wise 逻辑非:"

#: megengine.functional.elemwise.logical_not:25 of
msgid "The ``~`` operator can be used as a shorthand for ``F.logical_and`` on boolean tensors."
msgstr "``~`` 运算符可以用作 ``F.logical_and`` 在bool类型tensors上的简写。"


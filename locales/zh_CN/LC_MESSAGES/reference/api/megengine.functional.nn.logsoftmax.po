# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.4.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-14 14:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.functional.nn.logsoftmax.rst:2
msgid "megengine.functional.nn.logsoftmax"
msgstr ""

#: megengine.functional.nn.logsoftmax:1 of
msgid ""
"Applies the :math:`\\log(    ext{softmax}(x))` function to an "
"n-dimensional input tensor. The :math:`   ext{logsoftmax}(x)` formulation"
" can be simplified as:"
msgstr ""

#: megengine.functional.nn.logsoftmax:4 of
msgid ""
"ext{logsoftmax}(x_{i}) = \\log(\n"
"\n"
msgstr ""

#: megengine.functional.nn.logsoftmax:6 of
msgid "rac{\\exp(x_i) }{ \\sum_j \\exp(x_j)} )"
msgstr ""

#: megengine.functional.nn.logsoftmax:8 of
msgid "For numerical stability the implementation follows this transformation:"
msgstr ""

#: megengine.functional.nn.logsoftmax:10 of
msgid ""
"ext{logsoftmax}(x)\n"
"= \\log (\n"
"\n"
msgstr ""

#: megengine.functional.nn.logsoftmax:36 of
msgid "rac{\\exp (x)}{\\sum_{i}(\\exp (x_{i}))})"
msgstr ""

#: megengine.functional.nn.logsoftmax:14 of
msgid "= x - \\log (\\sum_{i}(\\exp (x_{i}))) = x -   ext{logsumexp}(x)"
msgstr ""

#: megengine.functional.nn.logsoftmax of
msgid "param inp"
msgstr ""

#: megengine.functional.nn.logsoftmax:17 of
msgid "input tensor."
msgstr ""

#: megengine.functional.nn.logsoftmax of
msgid "param axis"
msgstr ""

#: megengine.functional.nn.logsoftmax:18 of
msgid "axis along which :math:`       ext{logsoftmax}(x)` will be applied."
msgstr ""

#: megengine.functional.nn.logsoftmax:20 of
msgid "Examples:"
msgstr ""

#: megengine.functional.nn.logsoftmax:32 of
msgid "Outputs:"
msgstr ""

#~ msgid ""
#~ "Applies the :math:`\\log(\\text{softmax}(x))` "
#~ "function to an n-dimensional input "
#~ "tensor. The :math:`\\text{logsoftmax}(x)` "
#~ "formulation can be simplified as:"
#~ msgstr ""

#~ msgid ""
#~ "\\text{logsoftmax}(x_{i}) = \\log(\\frac{\\exp(x_i) "
#~ "}{ \\sum_j \\exp(x_j)} )\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "\\text{logsoftmax}(x)\n"
#~ "= \\log (\\frac{\\exp (x)}{\\sum_{i}(\\exp (x_{i}))})\n"
#~ "= x - \\log (\\sum_{i}(\\exp (x_{i})))\n"
#~ "= x - \\text{logsumexp}(x)\n"
#~ "\n"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid "axis along which :math:`\\text{logsoftmax}(x)` will be applied."
#~ msgstr ""


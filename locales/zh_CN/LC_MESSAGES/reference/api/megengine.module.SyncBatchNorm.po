
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 16:12+0800\n"
"PO-Revision-Date: 2022-01-24 11:08+0000\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.SyncBatchNorm.rst:5
msgid "SyncBatchNorm"
msgstr ""

#: megengine.module.batchnorm.SyncBatchNorm:1 of
msgid "Applies Synchronized Batch Normalization for distributed training."
msgstr "对于分布式训练执行组同步Batch Normalization操作。"

#: megengine.module.batchnorm.SyncBatchNorm of
msgid "参数"
msgstr ""

#: megengine.module.batchnorm.SyncBatchNorm:3 of
msgid ""
"usually :math:`C` from an input of shape :math:`(N, C, H, W)` or the "
"highest ranked dimension of an input less than 4D."
msgstr "通常是形状为 :math:`(N, C, H, W)` 输入数据的 :math:`C` 或者维度低于四维的输入的最高维。"

#: megengine.module.batchnorm.SyncBatchNorm:6 of
msgid "a value added to the denominator for numerical stability. Default: 1e-5"
msgstr "添加到分母的单个值，增加数值稳定性。默认：1e-5"

#: megengine.module.batchnorm.SyncBatchNorm:8 of
msgid ""
"the value used for the ``running_mean`` and ``running_var`` computation. "
"Default: 0.9"
msgstr "用于计算 ``running_mean`` 和 ``running_var`` 的值。默认：0.9"

#: megengine.module.batchnorm.SyncBatchNorm:10 of
msgid ""
"a boolean value that when set to True, this module has learnable affine "
"parameters. Default: True"
msgstr "单个布尔值，当设置为 ``True`` ，那么这个模块具有可学习的仿射（affine）参数。默认：True"

#: megengine.module.batchnorm.SyncBatchNorm:12 of
msgid ""
"when set to True, this module tracks the running mean and variance. When "
"set to False, this module does not track such statistics and always uses "
"batch statistics in both training and eval modes. Default: True"
msgstr ""
"当设置为 True，则这个模块跟踪运行时的不同batch的均值和方差。当设置为 "
"False，该模块不跟踪这样的统计数据并在训练和eval模式下始终使用当前批统计数据。默认： True"

#: megengine.module.batchnorm.SyncBatchNorm:16 of
msgid ""
"when set to True, this module does not update the running mean and "
"variance, and uses the running mean and variance instead of the batch "
"mean and batch variance to normalize the input. The parameter takes "
"effect only when the module is initilized with track_running_stats as "
"True. Default: False"
msgstr ""
"设置为True时，此模块不会更新运行运行时平均值和运行时方差，使用运行时平均值和方差而不是批次均值和批次方差来标准化输入。这个参数产生作用仅在使用"
" track_running_stats=True 初始化模块时有效并且模块处于训练模式。默认：False"

#: megengine.module.batchnorm.SyncBatchNorm:22 of
msgid ""
"communication group, caculate mean and variance between this group. "
"Default: :obj:`~.distributed.WORLD`"
msgstr ""

#~ msgid "基类：:class:`megengine.module.batchnorm._BatchNorm`"
#~ msgstr "基类：:class:`megengine.module.batchnorm._BatchNorm`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.SyncBatchNorm.__init__>`\\ "
#~ "\\(num\\_features\\[\\, eps\\, momentum\\, ...\\]\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.SyncBatchNorm.__init__>`\\ "
#~ "\\(num\\_features\\[\\, eps\\, momentum\\, ...\\]\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid "rtype"
#~ msgstr ""

#~ msgid ":py:obj:`None`"
#~ msgstr ""

#~ msgid "megengine.module.SyncBatchNorm"
#~ msgstr "megengine.module.SyncBatchNorm"

#~ msgid "Methods"
#~ msgstr "方法"

#~ msgid ":obj:`apply <megengine.module.SyncBatchNorm.apply>`\\ \\(fn\\)"
#~ msgstr ":obj:`apply <megengine.module.SyncBatchNorm.apply>`\\ \\(fn\\)"

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "对当前模块中的所有模块应用函数 ``fn``，包括当前模块本身。"

#~ msgid ""
#~ ":obj:`buffers <megengine.module.SyncBatchNorm.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`buffers <megengine.module.SyncBatchNorm.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr "返回该模块中对于buffers的一个可迭代对象。"

#~ msgid ""
#~ ":obj:`children <megengine.module.SyncBatchNorm.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`children <megengine.module.SyncBatchNorm.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr "返回一个可迭代对象，可遍历所有属于当前模块的直接属性的子模块。"

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.SyncBatchNorm.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.SyncBatchNorm.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr "设置 ``module`` 的 ``quantize_diabled`` 属性，并返回 ``module`` 。"

#~ msgid ":obj:`eval <megengine.module.SyncBatchNorm.eval>`\\ \\(\\)"
#~ msgstr ":obj:`eval <megengine.module.SyncBatchNorm.eval>`\\ \\(\\)"

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``False`` ，并将其切换为推理模式。"

#~ msgid ":obj:`forward <megengine.module.SyncBatchNorm.forward>`\\ \\(inp\\)"
#~ msgstr ":obj:`forward <megengine.module.SyncBatchNorm.forward>`\\ \\(inp\\)"

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.SyncBatchNorm.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.SyncBatchNorm.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr "加载一个参数字典，这个字典通常使用 :func:`state_dict` 得到。"

#~ msgid ""
#~ ":obj:`modules <megengine.module.SyncBatchNorm.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`modules <megengine.module.SyncBatchNorm.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "返回一个可迭代对象，可以遍历当前模块中的所有模块，包括其本身。"

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.SyncBatchNorm.named_buffers>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.SyncBatchNorm.named_buffers>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""
#~ "返回可遍历模块中 key 与 buffer 的键值对的可迭代对象，其中 "
#~ "``key`` 为从该模块至 buffer 的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.SyncBatchNorm.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`named_children "
#~ "<megengine.module.SyncBatchNorm.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历属于当前模块的直接属性的所有子模块（submodule）与键（key）组成的”key-"
#~ "submodule”对，其中'key'是子模块对应的属性名。"

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.SyncBatchNorm.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""
#~ ":obj:`named_modules "
#~ "<megengine.module.SyncBatchNorm.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历当前模块包括自身在内的所有其内部模块所组成的key-"
#~ "module键-模块对，其中'key'是从当前模块到各子模块的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.SyncBatchNorm.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.SyncBatchNorm.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""
#~ "返回一个可迭代对象，可以遍历当前模块中key与 :class:`~.Parameter` 组成的键值对。其中"
#~ "  ``key`` 是从模块到 :class:`~.Parameter` 的点路径（dotted"
#~ " path）。"

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.SyncBatchNorm.named_tensors>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters <megengine.module.SyncBatchNorm.parameters>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`parameters <megengine.module.SyncBatchNorm.parameters>`\\"
#~ " \\(\\[recursive\\]\\)"

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr "返回一个可迭代对象，遍历当前模块中的所有 :class:`~.Parameter`"

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.SyncBatchNorm.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.SyncBatchNorm.register_forward_hook>`\\ "
#~ "\\(hook\\)"

#~ msgid "Registers a hook to handle forward results."
#~ msgstr "给模块输出注册一个回调函数。"

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.SyncBatchNorm.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.SyncBatchNorm.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr "给模块输入注册一个回调函数。"

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.SyncBatchNorm.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""
#~ ":obj:`replace_param "
#~ "<megengine.module.SyncBatchNorm.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_parameters "
#~ "<megengine.module.SyncBatchNorm.reset_parameters>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`reset_parameters "
#~ "<megengine.module.SyncBatchNorm.reset_parameters>`\\ \\(\\)"

#~ msgid ""
#~ ":obj:`reset_running_stats "
#~ "<megengine.module.SyncBatchNorm.reset_running_stats>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`reset_running_stats "
#~ "<megengine.module.SyncBatchNorm.reset_running_stats>`\\ \\(\\)"

#~ msgid ""
#~ ":obj:`state_dict <megengine.module.SyncBatchNorm.state_dict>`\\"
#~ " \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""
#~ ":obj:`state_dict <megengine.module.SyncBatchNorm.state_dict>`\\"
#~ " \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"

#~ msgid ""
#~ ":obj:`tensors <megengine.module.SyncBatchNorm.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.SyncBatchNorm.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`train <megengine.module.SyncBatchNorm.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``mode``。"

#~ msgid ":obj:`zero_grad <megengine.module.SyncBatchNorm.zero_grad>`\\ \\(\\)"
#~ msgstr ":obj:`zero_grad <megengine.module.SyncBatchNorm.zero_grad>`\\ \\(\\)"

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr "将所有参数的梯度置0。"


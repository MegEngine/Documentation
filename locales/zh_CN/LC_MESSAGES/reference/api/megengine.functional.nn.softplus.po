# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.4.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-14 14:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.functional.nn.softplus.rst:2
msgid "megengine.functional.nn.softplus"
msgstr ""

#: megengine.functional.nn.softplus:1 of
msgid "Applies the element-wise function:"
msgstr ""

#: megengine.functional.nn.softplus:3 of
msgid ""
"ext{softplus}(x) = \\log(1 + \\exp(x))\n"
"\n"
msgstr ""

#: megengine.functional.nn.softplus:6 of
msgid ""
"softplus is a smooth approximation to the ReLU function and can be used "
"to constrain the output to be always positive. For numerical stability "
"the implementation follows this transformation:"
msgstr ""

#: megengine.functional.nn.softplus:10 of
msgid ""
"ext{softplus}(x) = \\log(1 + \\exp(x))\n"
"           = \\log(1 + \\exp(-    ext{abs}(x))) + \\max(x, 0)\n"
"           = \\log1p(\\exp(-      ext{abs}(x))) +         ext{relu}(x)\n"
"\n"
msgstr ""

#: megengine.functional.nn.softplus of
msgid "参数"
msgstr ""

#: megengine.functional.nn.softplus:15 of
msgid "input tensor."
msgstr ""

#: megengine.functional.nn.softplus:17 of
msgid "Examples:"
msgstr ""

#: megengine.functional.nn.softplus:29 of
msgid "Outputs:"
msgstr ""

#~ msgid ""
#~ "\\text{softplus}(x) = \\log(1 + \\exp(x))\n"
#~ "\n"
#~ msgstr ""

#~ msgid ""
#~ "\\text{softplus}(x) = \\log(1 + \\exp(x))\n"
#~ "                   = \\log(1 + \\exp(-\\text{abs}(x))) + \\max(x, 0)\n"
#~ "                   = \\log1p(\\exp(-\\text{abs}(x))) "
#~ "+ \\text{relu}(x)\n"
#~ "\n"
#~ msgstr ""


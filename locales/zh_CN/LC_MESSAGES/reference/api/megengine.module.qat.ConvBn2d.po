
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2021-11-09 06:47+0000\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/api/megengine.module.qat.ConvBn2d.rst:5
msgid "ConvBn2d"
msgstr ""

#: megengine.module.qat.conv_bn.ConvBn2d:1 of
msgid ""
"A fused :class:`~.QATModule` including :class:`~.module.Conv2d` and "
":class:`~.module.BatchNorm2d` with QAT support. Could be applied with "
":class:`~.Observer` and :class:`~.FakeQuantize`."
msgstr ""
"支持 QAT 并融合 :class:`~.module.Conv2d` 和 :class:`~.module.BatchNorm2d` 的 "
":class:`~.QATModule` . 可搭配使用 :class:`~.Observer` 与 "
":class:`~.FakeQuantize`."

#~ msgid "基类：:class:`megengine.module.qat.conv_bn._ConvBnActivation2d`"
#~ msgstr "基类：:class:`megengine.module.qat.conv_bn._ConvBnActivation2d`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.qat.ConvBn2d.__init__>`\\ "
#~ "\\(in\\_channels\\, out\\_channels\\, kernel\\_size\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.qat.ConvBn2d.__init__>`\\ "
#~ "\\(in\\_channels\\, out\\_channels\\, kernel\\_size\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid ""
#~ "Return a :class:`~.QATModule` instance "
#~ "converted from a float :class:`~.Module` "
#~ "instance."
#~ msgstr "返回从浮点型 :class:`~.Module` 实例转换而来的 :class:`~.QATModule` 实例。"

#~ msgid "megengine.module.qat.ConvBn2d"
#~ msgstr "megengine.module.qat.ConvBn2d"

#~ msgid "Attributes"
#~ msgstr "属性。"

#~ msgid ":obj:`with_act <megengine.module.qat.ConvBn2d.with_act>`\\"
#~ msgstr ":obj:`with_act <megengine.module.qat.ConvBn2d.with_act>`\\"

#~ msgid ":obj:`with_weight <megengine.module.qat.ConvBn2d.with_weight>`\\"
#~ msgstr ":obj:`with_weight <megengine.module.qat.ConvBn2d.with_weight>`\\"

#~ msgid "Methods"
#~ msgstr "方法"

#~ msgid ":obj:`apply <megengine.module.qat.ConvBn2d.apply>`\\ \\(fn\\)"
#~ msgstr ":obj:`apply <megengine.module.qat.ConvBn2d.apply>`\\ \\(fn\\)"

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "对当前模块中的所有模块应用函数 ``fn``，包括当前模块本身。"

#~ msgid ""
#~ ":obj:`apply_quant_activation "
#~ "<megengine.module.qat.ConvBn2d.apply_quant_activation>`\\ "
#~ "\\(target\\)"
#~ msgstr ""
#~ ":obj:`apply_quant_activation "
#~ "<megengine.module.qat.ConvBn2d.apply_quant_activation>`\\ "
#~ "\\(target\\)"

#~ msgid "Apply weight's observer and fake_quant from ``qconfig`` on ``target``."
#~ msgstr "在 ``target`` 上根据 ``qconfig`` 应用权重observer以及fake_quant。"

#~ msgid ""
#~ ":obj:`apply_quant_bias "
#~ "<megengine.module.qat.ConvBn2d.apply_quant_bias>`\\ \\(target\\,"
#~ " inp\\, w\\_qat\\)"
#~ msgstr ""
#~ ":obj:`apply_quant_bias "
#~ "<megengine.module.qat.ConvBn2d.apply_quant_bias>`\\ \\(target\\,"
#~ " inp\\, w\\_qat\\)"

#~ msgid "Use :func:`~.fake_quant_bias` to process ``target``."
#~ msgstr "使用 :func:`~.fake_quant_bias` 来处理 ``target``."

#~ msgid ""
#~ ":obj:`apply_quant_weight "
#~ "<megengine.module.qat.ConvBn2d.apply_quant_weight>`\\ "
#~ "\\(target\\)"
#~ msgstr ""
#~ ":obj:`apply_quant_weight "
#~ "<megengine.module.qat.ConvBn2d.apply_quant_weight>`\\ "
#~ "\\(target\\)"

#~ msgid ""
#~ ":obj:`buffers <megengine.module.qat.ConvBn2d.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`buffers <megengine.module.qat.ConvBn2d.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr "返回该模块中对于buffers的一个可迭代对象。"

#~ msgid ""
#~ ":obj:`calc_conv_bn_qat "
#~ "<megengine.module.qat.ConvBn2d.calc_conv_bn_qat>`\\ \\(inp\\[\\,"
#~ " approx\\]\\)"
#~ msgstr ""
#~ ":obj:`calc_conv_bn_qat "
#~ "<megengine.module.qat.ConvBn2d.calc_conv_bn_qat>`\\ \\(inp\\[\\,"
#~ " approx\\]\\)"

#~ msgid ""
#~ ":obj:`children <megengine.module.qat.ConvBn2d.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`children <megengine.module.qat.ConvBn2d.children>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr "返回一个可迭代对象，可遍历所有属于当前模块的直接属性的子模块。"

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.qat.ConvBn2d.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.qat.ConvBn2d.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr "设置 ``module`` 的 ``quantize_diabled`` 属性，并返回 ``module`` 。"

#~ msgid ":obj:`eval <megengine.module.qat.ConvBn2d.eval>`\\ \\(\\)"
#~ msgstr ":obj:`eval <megengine.module.qat.ConvBn2d.eval>`\\ \\(\\)"

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``False`` ，并将其切换为推理模式。"

#~ msgid ""
#~ ":obj:`fold_weight_bias "
#~ "<megengine.module.qat.ConvBn2d.fold_weight_bias>`\\ "
#~ "\\(bn\\_mean\\, bn\\_var\\)"
#~ msgstr ""
#~ ":obj:`fold_weight_bias "
#~ "<megengine.module.qat.ConvBn2d.fold_weight_bias>`\\ "
#~ "\\(bn\\_mean\\, bn\\_var\\)"

#~ msgid ":obj:`forward <megengine.module.qat.ConvBn2d.forward>`\\ \\(inp\\)"
#~ msgstr ":obj:`forward <megengine.module.qat.ConvBn2d.forward>`\\ \\(inp\\)"

#~ msgid ""
#~ ":obj:`from_float_module "
#~ "<megengine.module.qat.ConvBn2d.from_float_module>`\\ "
#~ "\\(float\\_module\\)"
#~ msgstr ""
#~ ":obj:`from_float_module "
#~ "<megengine.module.qat.ConvBn2d.from_float_module>`\\ "
#~ "\\(float\\_module\\)"

#~ msgid ""
#~ ":obj:`get_activation_dtype "
#~ "<megengine.module.qat.ConvBn2d.get_activation_dtype>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`get_activation_dtype "
#~ "<megengine.module.qat.ConvBn2d.get_activation_dtype>`\\ \\(\\)"

#~ msgid "Get activation's quantization dtype as the method from ``qconfig``."
#~ msgstr "按照qconfig指定的方法，从 ``qconfig`` 中获取激活值的量化数据类型。"

#~ msgid ""
#~ ":obj:`get_activation_qparams "
#~ "<megengine.module.qat.ConvBn2d.get_activation_qparams>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`get_activation_qparams "
#~ "<megengine.module.qat.ConvBn2d.get_activation_qparams>`\\ \\(\\)"

#~ msgid "Get activation's quantization parameters."
#~ msgstr "获取激活值的量化参数。"

#~ msgid ""
#~ ":obj:`get_batch_mean_var "
#~ "<megengine.module.qat.ConvBn2d.get_batch_mean_var>`\\ \\(inp\\)"
#~ msgstr ""
#~ ":obj:`get_batch_mean_var "
#~ "<megengine.module.qat.ConvBn2d.get_batch_mean_var>`\\ \\(inp\\)"

#~ msgid ""
#~ ":obj:`get_weight_dtype "
#~ "<megengine.module.qat.ConvBn2d.get_weight_dtype>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`get_weight_dtype "
#~ "<megengine.module.qat.ConvBn2d.get_weight_dtype>`\\ \\(\\)"

#~ msgid "Get weight's quantization dtype as the method from ``qconfig``."
#~ msgstr "从 ``qconfig`` 中获取权重的量化数据类型。"

#~ msgid ""
#~ ":obj:`get_weight_qparams "
#~ "<megengine.module.qat.ConvBn2d.get_weight_qparams>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`get_weight_qparams "
#~ "<megengine.module.qat.ConvBn2d.get_weight_qparams>`\\ \\(\\)"

#~ msgid "Get weight's quantization parameters."
#~ msgstr "获取权重的量化参数。"

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.qat.ConvBn2d.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.qat.ConvBn2d.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr "加载一个参数字典，这个字典通常使用 :func:`state_dict` 得到。"

#~ msgid ""
#~ ":obj:`modules <megengine.module.qat.ConvBn2d.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`modules <megengine.module.qat.ConvBn2d.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "返回一个可迭代对象，可以遍历当前模块中的所有模块，包括其本身。"

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.qat.ConvBn2d.named_buffers>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.qat.ConvBn2d.named_buffers>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""
#~ "返回可遍历模块中 key 与 buffer 的键值对的可迭代对象，其中 "
#~ "``key`` 为从该模块至 buffer 的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.qat.ConvBn2d.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`named_children "
#~ "<megengine.module.qat.ConvBn2d.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历属于当前模块的直接属性的所有子模块（submodule）与键（key）组成的”key-"
#~ "submodule”对，其中'key'是子模块对应的属性名。"

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.qat.ConvBn2d.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""
#~ ":obj:`named_modules "
#~ "<megengine.module.qat.ConvBn2d.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历当前模块包括自身在内的所有其内部模块所组成的key-"
#~ "module键-模块对，其中'key'是从当前模块到各子模块的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.qat.ConvBn2d.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.qat.ConvBn2d.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""
#~ "返回一个可迭代对象，可以遍历当前模块中key与 :class:`~.Parameter` 组成的键值对。其中"
#~ "  ``key`` 是从模块到 :class:`~.Parameter` 的点路径（dotted"
#~ " path）。"

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.qat.ConvBn2d.named_tensors>`\\ \\(\\[prefix\\,"
#~ " recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters <megengine.module.qat.ConvBn2d.parameters>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`parameters <megengine.module.qat.ConvBn2d.parameters>`\\"
#~ " \\(\\[recursive\\]\\)"

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr "返回一个可迭代对象，遍历当前模块中的所有 :class:`~.Parameter`"

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.qat.ConvBn2d.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.qat.ConvBn2d.register_forward_hook>`\\ "
#~ "\\(hook\\)"

#~ msgid "Registers a hook to handle forward results."
#~ msgstr "给模块输出注册一个回调函数。"

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.qat.ConvBn2d.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.qat.ConvBn2d.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr "给模块输入注册一个回调函数。"

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.qat.ConvBn2d.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""
#~ ":obj:`replace_param "
#~ "<megengine.module.qat.ConvBn2d.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_fake_quant "
#~ "<megengine.module.qat.ConvBn2d.set_fake_quant>`\\ \\(enable\\)"
#~ msgstr ""
#~ ":obj:`set_fake_quant "
#~ "<megengine.module.qat.ConvBn2d.set_fake_quant>`\\ \\(enable\\)"

#~ msgid ""
#~ ":obj:`set_observer "
#~ "<megengine.module.qat.ConvBn2d.set_observer>`\\ \\(enable\\)"
#~ msgstr ""
#~ ":obj:`set_observer "
#~ "<megengine.module.qat.ConvBn2d.set_observer>`\\ \\(enable\\)"

#~ msgid ""
#~ ":obj:`set_qconfig <megengine.module.qat.ConvBn2d.set_qconfig>`\\"
#~ " \\(qconfig\\)"
#~ msgstr ""
#~ ":obj:`set_qconfig <megengine.module.qat.ConvBn2d.set_qconfig>`\\"
#~ " \\(qconfig\\)"

#~ msgid ""
#~ "Set quantization related configs with "
#~ "``qconfig``, including observer and fake_quant"
#~ " for weight and activation."
#~ msgstr "使用 ``qconfig`` 更改量化相关配置。包含权重和激活值的 observer 和 fake_quant 。"

#~ msgid ""
#~ ":obj:`state_dict <megengine.module.qat.ConvBn2d.state_dict>`\\"
#~ " \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""
#~ ":obj:`state_dict <megengine.module.qat.ConvBn2d.state_dict>`\\"
#~ " \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"

#~ msgid ""
#~ ":obj:`tensors <megengine.module.qat.ConvBn2d.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.qat.ConvBn2d.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`train <megengine.module.qat.ConvBn2d.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``mode``。"

#~ msgid ""
#~ ":obj:`update_running_mean_and_running_var "
#~ "<megengine.module.qat.ConvBn2d.update_running_mean_and_running_var>`\\"
#~ " \\(bn\\_mean\\, ...\\)"
#~ msgstr ""
#~ ":obj:`update_running_mean_and_running_var "
#~ "<megengine.module.qat.ConvBn2d.update_running_mean_and_running_var>`\\"
#~ " \\(bn\\_mean\\, ...\\)"

#~ msgid ":obj:`zero_grad <megengine.module.qat.ConvBn2d.zero_grad>`\\ \\(\\)"
#~ msgstr ":obj:`zero_grad <megengine.module.qat.ConvBn2d.zero_grad>`\\ \\(\\)"

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr "将所有参数的梯度置0。"


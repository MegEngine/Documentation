msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-04-21 09:19\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.mul.po\n"
"X-Crowdin-File-ID: 9183\n"

#: ../../source/reference/api/megengine.functional.mul.rst:2
msgid "megengine.functional.mul"
msgstr ""

#: megengine.functional.elemwise.mul:1 of
msgid "Element-wise multiplication."
msgstr "逐元素相乘。"

#: megengine.functional.elemwise.mul:3 of
msgid "Calculates the product for each element :math:`x_i` of the input tensor `x` with the respective element :math:`y_i` of the input tensor :math:`y`."
msgstr "计算输入张量 `x` 的每个元素 :math:`x_i` 与输入张量 :math:`y` 的相应元素 :math:`y_i` 的乘积。"

#: megengine.functional.elemwise.mul of
msgid "参数"
msgstr ""

#: megengine.functional.elemwise.mul:6 of
msgid "first input tensor. Should have a numeric data type."
msgstr "第一个输入张量。应该有一个数值数据类型。"

#: megengine.functional.elemwise.mul:8 of
msgid "second input tensor. Must be compatible with :math:`x` (see :ref:`broadcasting-rule` ). Should have a numeric data type."
msgstr "第二个输入 tensor。必须与 :math:`x` 兼容 (请查看 :ref:`broadcasting-rule` )。应具有数值数据类型。"

#: megengine.functional.elemwise.mul of
msgid "返回类型"
msgstr ""

#: megengine.functional.elemwise.mul:10 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ""

#: megengine.functional.elemwise.mul of
msgid "返回"
msgstr ""

#: megengine.functional.elemwise.mul:11 of
msgid "A tensor containing the element-wise products. The returned tensor must have a data type determined by :ref:`dtype-promotion`."
msgstr "包含逐元素乘积的张量。 返回的张量必须具有由 :ref:`dtype-promotion` 确定的数据类型。"

#: megengine.functional.elemwise.mul:14 of
msgid "Special cases"
msgstr "特别案例"

#: megengine.functional.elemwise.mul:16 of
msgid "For floating-point operands,"
msgstr "对于浮点操作数，"

#: megengine.functional.elemwise.mul:18 of
msgid "If either :math:`x_i` or :math:`y_i` is ``NaN``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 或 :math:`y_i` 是 ``NaN``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.mul:19 of
msgid "If :math:`x_i` is either ``+infinity`` or ``-infinity`` and :math:`y_i` is either ``+0`` or ``-0``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``+infinity`` 或 ``-infinity`` 并且 :math:`y_i` 是 ``+0`` 或 ``-0``，则结果为 ``NaN``。"

#: megengine.functional.elemwise.mul:20 of
msgid "If :math:`x_i` is either ``+0`` or ``-0`` and :math:`y_i` is either ``+infinity`` or ``-infinity``, the result is ``NaN``."
msgstr "如果 :math:`x_i` 是 ``+0`` 或 ``-0`` 并且 :math:`y_i` 是 ``+infinity`` 或 ``-infinity``，则结果为 ``NaN``。"

#: megengine.functional.elemwise.mul:21 of
msgid "If :math:`x_i` and :math:`y_i` have different mathematical signs, the result has a negative mathematical sign, unless the result is ``NaN``."
msgstr "如果 :math:`x_i` 和 :math:`y_i` 有不同的数学符号，则结果有一个负的数学符号，除非结果是 ``NaN``。"

#: megengine.functional.elemwise.mul:22 of
msgid "If :math:`x_i` is either ``+infinity`` or ``-infinity`` and :math:`y_i` is either ``+infinity`` or ``-infinity``, the result is a signed infinity with the mathematical sign determined by the rule already stated above."
msgstr "如果 :math:`x_i` 是 ``+infinity`` 或 ``-infinity`` 并且 :math:`y_i` 是 ``+infinity`` 或 ``-infinity``，则结果是有符号的无穷大，其数学符号由上述规则确定。"

#: megengine.functional.elemwise.mul:24 of
msgid "If :math:`x_i` is either ``+infinity`` or ``-infinity`` and :math:`y_i` is a nonzero finite number, the result is a signed infinity with the mathematical sign determined by the rule already stated above."
msgstr "如果 :math:`x_i` 是 ``+infinity`` 或 ``-infinity`` 并且 :math:`y_i` 是一个非零有限数，则结果是有符号无穷大，其数学符号由上述规则确定。"

#: megengine.functional.elemwise.mul:26 of
msgid "If :math:`x_i` is a nonzero finite number and :math:`y_i` is either ``+infinity`` or ``-infinity``, the result is a signed infinity with the mathematical sign determined by the rule already stated above."
msgstr "如果 :math:`x_i` 是一个非零有限数并且 :math:`y_i` 是 ``+infinity`` 或 ``-infinity``，则结果是一个有符号无穷大，其数学符号由上述规则确定。"

#: megengine.functional.elemwise.mul:28 of
msgid "In the remaining cases, where neither ``infinity`` nor ``NaN`` is involved, the product must be computed and rounded to the nearest representable value according to IEEE 754-2019 and a supported rounding mode. If the magnitude is too large to represent, the result is an `infinity` of appropriate mathematical sign. If the magnitude is too small to represent, the result is a zero of appropriate mathematical sign."
msgstr "在其余情况下，既不涉及 ``infinity`` 也不涉及 ``NaN``，必须根据 IEEE 754-2019 和支持的舍入模式计算乘积并舍入到最接近的可表示值。 如果量级太大而无法表示，则结果是适当数学符号的`infinity`。 如果量级太小而无法表示，则结果是适当数学符号的零。"

#: megengine.functional.elemwise.mul:35 of
msgid "Floating-point multiplication is not always associative due to finite precision."
msgstr "由于精度有限，浮点乘法并不总是满足乘法交换律。"

#: megengine.functional.elemwise.mul:36 of
msgid "The ``*`` operator can be used as a shorthand for ``mul`` on tensors."
msgstr "``*`` 运算符可以用作张量上 ``mul`` 的简写。"

#: megengine.functional.elemwise.mul:39 of
msgid "实际案例"
msgstr ""

#: megengine.functional.elemwise.mul:43 of
msgid "Element-wise multiplication:"
msgstr "逐元素相乘："

#: megengine.functional.elemwise.mul:51 of
msgid "Boradcasting:"
msgstr ""

#~ msgid "Element-wise `multiplication`."
#~ msgstr "逐元素相乘。"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-28 09:14+0000\n"
"PO-Revision-Date: 2022-03-08 08:25\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.ConvTranspose2d.po\n"
"X-Crowdin-File-ID: 2384\n"

#: ../../source/reference/api/megengine.module.ConvTranspose2d.rst:5
msgid "ConvTranspose2d"
msgstr "ConvTranspose2d"

#: megengine.module.conv.ConvTranspose2d:1 of
msgid "Applies a 2D transposed convolution over an input tensor."
msgstr "对输入张量进行二维转置卷积。"

#: megengine.module.conv.ConvTranspose2d:3 of
msgid "This module is also known as a deconvolution or a fractionally-strided convolution. :class:`ConvTranspose2d` can be seen as the gradient of :class:`Conv2d` operation with respect to its input."
msgstr "该模块也称为反卷积或微步卷积。 :class:`ConvTranspose2d` 可以看作是 :class:`Conv2d` 操作对自身输入的梯度。"

#: megengine.module.conv.ConvTranspose2d:7 of
msgid "Convolution usually reduces the size of input, while transposed convolution works the opposite way, transforming a smaller input to a larger output while preserving the connectivity pattern."
msgstr "卷积通常降低了输入的大小，而转置卷积工作方式完全相反，在相同的连接方式下，它对较小的输入进行放大来输出。"

#: megengine.module.conv.ConvTranspose2d of
msgid "参数"
msgstr "参数"

#: megengine.module.conv.ConvTranspose2d:12 of
msgid "number of input channels."
msgstr "输入数据中的通道数。"

#: megengine.module.conv.ConvTranspose2d:14 of
msgid "number of output channels."
msgstr "输出数据中的通道数。"

#: megengine.module.conv.ConvTranspose2d:16 of
msgid "size of weight on spatial dimensions. If ``kernel_size`` is an :class:`int`, the actual kernel size would be ``(kernel_size, kernel_size)``."
msgstr "空间维度上的权重大小。如果kernel_size 是一个 :class:`int`, 实际的kernel大小为 ``(kernel_size, kernel_size)``."

#: megengine.module.conv.ConvTranspose2d:20 of
msgid "stride of the 2D convolution operation. Default: 1"
msgstr "二维卷积运算的步长。默认：1"

#: megengine.module.conv.ConvTranspose2d:22 of
msgid "size of the paddings added to the input on both sides of its spatial dimensions. Only zero-padding is supported. Default: 0"
msgstr "输入数据空域维度两侧的填充（padding）大小。仅支持填充0值。默认：0"

#: megengine.module.conv.ConvTranspose2d:25 of
msgid "dilation of the 2D convolution operation. Default: 1"
msgstr "二维卷积运算的空洞（dilation）。默认：1"

#: megengine.module.conv.ConvTranspose2d:27 of
msgid "number of groups into which the input and output channels are divided, so as to perform a ``grouped convolution``. When ``groups`` is not 1, ``in_channels`` and ``out_channels`` must be divisible by groups, and the shape of weight should be ``(groups, in_channels // groups, out_channels // groups, height, width)``. Default: 1"
msgstr "输入输出的通道被划分的组的数量, 以便执行 ``grouped convolution``。当 ``groups`` 不为 1, ``in_channels`` 和 ``out_channels`` 必须能被``groups``整除, 并且weight的shape应该是``(groups, in_channels // groups, out_channels // groups, height, width)``. 默认值: 1"

#: megengine.module.conv.ConvTranspose2d:33 of
msgid "wether to add a bias onto the result of convolution. Default: True conv_mode: Supports `cross_correlation`. Default: `cross_correlation`"
msgstr "是否给卷积的结果添加bias。默认: True conv_mode: 支持 `cross_correlation`。默认: `cross_correlation`"

#: megengine.module.conv.ConvTranspose2d:36 of
msgid "When set to \"default\", no special requirements will be placed on the precision of intermediate results. When set to \"float32\", \"float32\" would be used for accumulator and intermediate result, but only effective when input and output are of float16 dtype."
msgstr "当设置 \"default\" 时, 不会对中间结果的精度有特殊要求。当设置 \"float32\" 时, \"float32\" 将被用作中间结果的累加器, 但是只有当输入和输出的dtype是float16时有效。"

#: megengine.module.conv.ConvTranspose2d:43 of
msgid "``weight`` usually has shape ``(in_channels, out_channels, height, width)`` , if groups is not 1, shape will be ``(groups, in_channels // groups, out_channels // groups, height, width)``"
msgstr "``weight`` 的shape通常是 ``(in_channels, out_channels, height, width)`` , 如果groups 不为 1, shape 将是 ``(groups, in_channels // groups, out_channels // groups, height, width)``"

#: megengine.module.conv.ConvTranspose2d:45 of
msgid "``bias`` usually has shape ``(1, out_channels, *1)``"
msgstr "``bias`` 的shape通常为 ``(1, out_channels, *1)``"

#~ msgid "基类：:class:`megengine.module.conv._ConvNd`"
#~ msgstr "基类：:class:`megengine.module.conv._ConvNd`"

#~ msgid "Supports `CROSS_CORRELATION`. Default: `CROSS_CORRELATION`"
#~ msgstr "支持 `CROSS_CORRELATION`。默认：`CROSS_CORRELATION`"

#~ msgid ""
#~ ":obj:`__init__ <megengine.module.ConvTranspose2d.__init__>`\\"
#~ " \\(in\\_channels\\, out\\_channels\\, kernel\\_size\\)"
#~ msgstr ""
#~ ":obj:`__init__ <megengine.module.ConvTranspose2d.__init__>`\\"
#~ " \\(in\\_channels\\, out\\_channels\\, kernel\\_size\\)"

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid "rtype"
#~ msgstr ""

#~ msgid ":py:obj:`None`"
#~ msgstr ""

#~ msgid "Supports `cross_correlation`. Default: `cross_correlation`"
#~ msgstr ""

#~ msgid ""
#~ ":attr:`weight` usually has shape "
#~ "``(in_channels, out_channels, height, width)``,"
#~ msgstr ""

#~ msgid ""
#~ "if groups is not 1, shape will "
#~ "be ``(groups, in_channels // groups, "
#~ "out_channels // groups, height, width)``"
#~ msgstr ""

#~ msgid ":attr:`bias` usually has shape ``(1, out_channels, *1)``"
#~ msgstr ""

#~ msgid ""
#~ "number of groups into which the "
#~ "input and output channels are divided,"
#~ " so as to perform a \"grouped "
#~ "convolution\". When ``groups`` is not 1,"
#~ " ``in_channels`` and ``out_channels`` must "
#~ "be divisible by ``groups``, and there"
#~ " would be an extra dimension at "
#~ "the beginning of the weight's shape. "
#~ "Default: 1"
#~ msgstr ""

#~ msgid "megengine.module.ConvTranspose2d"
#~ msgstr "megengine.module.ConvTranspose2d"

#~ msgid "Methods"
#~ msgstr "方法"

#~ msgid ":obj:`apply <megengine.module.ConvTranspose2d.apply>`\\ \\(fn\\)"
#~ msgstr ":obj:`apply <megengine.module.ConvTranspose2d.apply>`\\ \\(fn\\)"

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "对当前模块中的所有模块应用函数 ``fn``，包括当前模块本身。"

#~ msgid ""
#~ ":obj:`buffers <megengine.module.ConvTranspose2d.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`buffers <megengine.module.ConvTranspose2d.buffers>`\\ "
#~ "\\(\\[recursive\\]\\)"

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr "返回该模块中对于buffers的一个可迭代对象。"

#~ msgid ""
#~ ":obj:`calc_conv_transpose2d "
#~ "<megengine.module.ConvTranspose2d.calc_conv_transpose2d>`\\ "
#~ "\\(inp\\, weight\\, bias\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`children <megengine.module.ConvTranspose2d.children>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`children <megengine.module.ConvTranspose2d.children>`\\"
#~ " \\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr "返回一个可迭代对象，可遍历所有属于当前模块的直接属性的子模块。"

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.ConvTranspose2d.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"
#~ msgstr ""
#~ ":obj:`disable_quantize "
#~ "<megengine.module.ConvTranspose2d.disable_quantize>`\\ "
#~ "\\(\\[value\\]\\)"

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr "设置 ``module`` 的 ``quantize_diabled`` 属性，并返回 ``module`` 。"

#~ msgid ":obj:`eval <megengine.module.ConvTranspose2d.eval>`\\ \\(\\)"
#~ msgstr ":obj:`eval <megengine.module.ConvTranspose2d.eval>`\\ \\(\\)"

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``False`` ，并将其切换为推理模式。"

#~ msgid ":obj:`forward <megengine.module.ConvTranspose2d.forward>`\\ \\(inp\\)"
#~ msgstr ":obj:`forward <megengine.module.ConvTranspose2d.forward>`\\ \\(inp\\)"

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.ConvTranspose2d.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""
#~ ":obj:`load_state_dict "
#~ "<megengine.module.ConvTranspose2d.load_state_dict>`\\ "
#~ "\\(state\\_dict\\[\\, strict\\]\\)"

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr "加载一个参数字典，这个字典通常使用 :func:`state_dict` 得到。"

#~ msgid ""
#~ ":obj:`modules <megengine.module.ConvTranspose2d.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`modules <megengine.module.ConvTranspose2d.modules>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "返回一个可迭代对象，可以遍历当前模块中的所有模块，包括其本身。"

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.ConvTranspose2d.named_buffers>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`named_buffers "
#~ "<megengine.module.ConvTranspose2d.named_buffers>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""
#~ "返回可遍历模块中 key 与 buffer 的键值对的可迭代对象，其中 "
#~ "``key`` 为从该模块至 buffer 的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.module.ConvTranspose2d.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"
#~ msgstr ""
#~ ":obj:`named_children "
#~ "<megengine.module.ConvTranspose2d.named_children>`\\ "
#~ "\\(\\*\\*kwargs\\)"

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历属于当前模块的直接属性的所有子模块（submodule）与键（key）组成的”key-"
#~ "submodule”对，其中'key'是子模块对应的属性名。"

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.module.ConvTranspose2d.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"
#~ msgstr ""
#~ ":obj:`named_modules "
#~ "<megengine.module.ConvTranspose2d.named_modules>`\\ "
#~ "\\(\\[prefix\\]\\)"

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历当前模块包括自身在内的所有其内部模块所组成的key-"
#~ "module键-模块对，其中'key'是从当前模块到各子模块的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.ConvTranspose2d.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`named_parameters "
#~ "<megengine.module.ConvTranspose2d.named_parameters>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""
#~ "返回一个可迭代对象，可以遍历当前模块中key与 :class:`~.Parameter` 组成的键值对。其中"
#~ "  ``key`` 是从模块到 :class:`~.Parameter` 的点路径（dotted"
#~ " path）。"

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.module.ConvTranspose2d.named_tensors>`\\ "
#~ "\\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters "
#~ "<megengine.module.ConvTranspose2d.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`parameters "
#~ "<megengine.module.ConvTranspose2d.parameters>`\\ "
#~ "\\(\\[recursive\\]\\)"

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr "返回一个可迭代对象，遍历当前模块中的所有 :class:`~.Parameter`"

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.ConvTranspose2d.register_forward_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.module.ConvTranspose2d.register_forward_hook>`\\ "
#~ "\\(hook\\)"

#~ msgid "Registers a hook to handle forward results."
#~ msgstr "给模块输出注册一个回调函数。"

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.ConvTranspose2d.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"
#~ msgstr ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.module.ConvTranspose2d.register_forward_pre_hook>`\\ "
#~ "\\(hook\\)"

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr "给模块输入注册一个回调函数。"

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.module.ConvTranspose2d.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""
#~ ":obj:`replace_param "
#~ "<megengine.module.ConvTranspose2d.replace_param>`\\ \\(params\\,"
#~ " start\\_pos\\[\\, seen\\]\\)"

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_parameters "
#~ "<megengine.module.ConvTranspose2d.reset_parameters>`\\ \\(\\)"
#~ msgstr ""
#~ ":obj:`reset_parameters "
#~ "<megengine.module.ConvTranspose2d.reset_parameters>`\\ \\(\\)"

#~ msgid ""
#~ ":obj:`state_dict "
#~ "<megengine.module.ConvTranspose2d.state_dict>`\\ \\(\\[rst\\,"
#~ " prefix\\, keep\\_var\\]\\)"
#~ msgstr ""
#~ ":obj:`state_dict "
#~ "<megengine.module.ConvTranspose2d.state_dict>`\\ \\(\\[rst\\,"
#~ " prefix\\, keep\\_var\\]\\)"

#~ msgid ""
#~ ":obj:`tensors <megengine.module.ConvTranspose2d.tensors>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train <megengine.module.ConvTranspose2d.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""
#~ ":obj:`train <megengine.module.ConvTranspose2d.train>`\\ "
#~ "\\(\\[mode\\, recursive\\]\\)"

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``mode``。"

#~ msgid ":obj:`zero_grad <megengine.module.ConvTranspose2d.zero_grad>`\\ \\(\\)"
#~ msgstr ":obj:`zero_grad <megengine.module.ConvTranspose2d.zero_grad>`\\ \\(\\)"

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr "将所有参数的梯度置0。"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-04-11 05:49\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.logical_xor.po\n"
"X-Crowdin-File-ID: 2184\n"

#: ../../source/reference/api/megengine.functional.logical_xor.rst:2
msgid "megengine.functional.logical\\_xor"
msgstr "megengine.functional.logical\\_xor"

#: megengine.functional.elemwise.logical_xor:1 of
msgid "Element-wise logical XOR."
msgstr "逐元素逻辑异或。"

#: megengine.functional.elemwise.logical_xor:3 of
msgid "Computes the logical XOR for each element :math:`x_i` of the input tensor :math:`x` with the respective element :math:`y_i` of the input tensor :math:`y`."
msgstr "计算输入 Tensor `x` 的每个元素与输入 Tensor `y` 的相应元素的逻辑异或。"

#: megengine.functional.elemwise.logical_xor of
msgid "参数"
msgstr "参数"

#: megengine.functional.elemwise.logical_xor:6 of
msgid "first input tensor. Should have a boolean data type."
msgstr "第一个输入tensor。应该是bool类型。"

#: megengine.functional.elemwise.logical_xor:7 of
msgid "second input tensor. Must be compatible with :math:`x` (see :ref:`broadcasting-rule` )."
msgstr "第二个输入 Tensor。该 Tensor 与 ``x`` 必须满足 :ref:`broadcasting-rule`。"

#: megengine.functional.elemwise.logical_xor of
msgid "返回"
msgstr "返回"

#: megengine.functional.elemwise.logical_xor:9 of
msgid "a tensor containing the result of the element-wise logical XOR operation. The returned tensor must have a data type of ``bool``."
msgstr "一个包含了逐元素逻辑异或操作结果的 Tensor。返回的张量的数据类型必须是``bool``。"

#: megengine.functional.elemwise.logical_xor:14 of
msgid ":func:`~.logical_and`, :func:`~.logical_not`, :func:`~.logical_or`"
msgstr ":func:`~.logical_and`, :func:`~.logical_not`, :func:`~.logical_or`"

#: megengine.functional.elemwise.logical_xor:17 of
msgid "实际案例"
msgstr "实际案例"

#: megengine.functional.elemwise.logical_xor:21 of
msgid "Element-wise logical XOR:"
msgstr "逐元素逻辑异或："

#: megengine.functional.elemwise.logical_xor:28 of
msgid "The ``^`` operator can be used as a shorthand for ``F.logical_xor`` on boolean tensors."
msgstr "`^``运算符可以作为对 bool Tensor 进行 `F.logical_xor`` 操作的简写。"


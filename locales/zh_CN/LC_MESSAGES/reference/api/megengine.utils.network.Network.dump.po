msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-20 14:45+0800\n"
"PO-Revision-Date: 2021-04-20 07:20\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.utils.network.Network.dump.po\n"
"X-Crowdin-File-ID: 2696\n"

#: ../../source/reference/api/megengine.utils.network.Network.dump.rst:2
msgid "megengine.utils.network.Network.dump"
msgstr ""

#: megengine.utils.network.Network.dump:1 of
msgid "Serializes graph to file."
msgstr ""

#: megengine.utils.network.Network.dump of
msgid "参数"
msgstr ""

#: megengine.utils.network.Network.dump:3 of
msgid "output file, could be file object or filename."
msgstr ""

#: megengine.utils.network.Network.dump:4 of
msgid "whether output is appended to ``file``. Only works when ``file`` is str."
msgstr ""

#: megengine.utils.network.Network.dump:7 of
msgid "level for keeping variable names:  * 0: none of the names are kept * 1: (default)keep names of output vars * 2: keep names of all (output and internal) vars"
msgstr ""

#: megengine.utils.network.Network.dump:7 of
msgid "level for keeping variable names:"
msgstr ""

#: megengine.utils.network.Network.dump:9 of
msgid "0: none of the names are kept"
msgstr ""

#: megengine.utils.network.Network.dump:10 of
msgid "1: (default)keep names of output vars"
msgstr ""

#: megengine.utils.network.Network.dump:11 of
msgid "2: keep names of all (output and internal) vars"
msgstr ""

#: megengine.utils.network.Network.dump:13 of
msgid "whether to keep operator names."
msgstr ""

#: megengine.utils.network.Network.dump:15 of
msgid "whether to keep param names, so param values can be easily manipulated after loading model"
msgstr ""

#: megengine.utils.network.Network.dump:18 of
msgid "whether to keep priority setting for operators"
msgstr ""

#: megengine.utils.network.Network.dump:19 of
msgid "a string for path or a file handler. if is not None, then the dump information for code strip would be written to ``strip_info_file``"
msgstr ""

#: megengine.utils.network.Network.dump:21 of
msgid "will be check when `strip_info_file` is not None. if set true, the information for code strip will be append to strip_info_file. if set false, will rewrite strip_info_file"
msgstr ""

#: megengine.utils.network.Network.dump:24 of
msgid "enbale optmizations, will skip all optimize options if this is False. Default: True"
msgstr ""

#: megengine.utils.network.Network.dump of
msgid "Keyword Arguments"
msgstr ""

#: megengine.utils.network.Network.dump:29 of
msgid "See also :py:meth:`optimize_for_inference`."
msgstr ""

#~ msgid "enable_io16xc32 --"
#~ msgstr ""

#~ msgid ""
#~ "whether to use float16 for I/O "
#~ "between oprs and use float32 as "
#~ "internal computation precision. Note the "
#~ "output var would be changed to "
#~ "float16."
#~ msgstr ""

#~ msgid "enable_ioc16 --"
#~ msgstr ""

#~ msgid "whether to use float16 for both I/O and computation precision."
#~ msgstr ""

#~ msgid "enable_hwcd4 --"
#~ msgstr ""

#~ msgid ""
#~ "whether to use NHWCD4 data layout. "
#~ "This is faster on some OpenCL "
#~ "backend."
#~ msgstr ""

#~ msgid "enable_nchw88 --"
#~ msgstr ""

#~ msgid "whether to use NCHW88 data layout, currently used in X86 AVX backend."
#~ msgstr ""

#~ msgid "enable_nchw44 --"
#~ msgstr ""

#~ msgid "whether to use NCHW44 data layout, currently used in arm backend."
#~ msgstr ""

#~ msgid "enable_nchw44_dot --"
#~ msgstr ""

#~ msgid ""
#~ "whether to use NCHW44_dot data layout,"
#~ " currently used in armv8.2+dotprod backend."
#~ msgstr ""

#~ msgid "enable_nchw4 --"
#~ msgstr ""

#~ msgid ""
#~ "whether to use NCHW4 data layout, "
#~ "currently used in nvidia backend(based "
#~ "on cudnn)."
#~ msgstr ""

#~ msgid "enable_nchw32 --"
#~ msgstr ""

#~ msgid ""
#~ "whether to use NCHW32 data layout, "
#~ "currently used in nvidia backend with"
#~ " tensorcore(based on cudnn)."
#~ msgstr ""

#~ msgid "enable_chwn4 --"
#~ msgstr ""

#~ msgid ""
#~ "whether to use CHWN4 data layout, "
#~ "currently used in nvidia backend with"
#~ " tensorcore."
#~ msgstr ""

#~ msgid ""
#~ "enable_fuse_conv_bias_nonlinearity: whether to fuse"
#~ " conv+bias+nonlinearty"
#~ msgstr ""

#~ msgid "into one opr."
#~ msgstr ""

#~ msgid "enable_fuse_conv_bias_with_z: whether to fuse conv_bias with z"
#~ msgstr ""

#~ msgid ""
#~ "input for inference on nvidia "
#~ "backend(this optimization pass will result "
#~ "in mismatch of the precision of "
#~ "output of training and inference)"
#~ msgstr ""


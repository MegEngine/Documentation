msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-15 19:44+0800\n"
"PO-Revision-Date: 2021-04-20 09:35\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.Elemwise.po\n"
"X-Crowdin-File-ID: 2394\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"

#: ../../source/reference/api/megengine.module.Elemwise.rst:2
msgid "megengine.module.Elemwise"
msgstr ""

#: megengine.module.elemwise.Elemwise:1 of
msgid "基类：:class:`megengine.module.module.Module`"
msgstr ""

#: megengine.module.elemwise.Elemwise:1 of
msgid "A :class:`~.Module` to do :mod:`~.functional.elemwise` operator. Could be replaced with :class:`~.QATModule` version :class:`~.qat.Elemwise` using :func:`~.quantize.quantize_qat`."
msgstr ""

#: megengine.module.elemwise.Elemwise of
msgid "参数"
msgstr ""

#: megengine.module.elemwise.Elemwise:4 of
msgid "the elemwise method, support the following string. It will do the normal elemwise operator for float.  * \"ADD\": a + b * \"FUSE_ADD_RELU\": max(x+y, 0) * \"MUL\": x * y * \"MIN\": min(x, y) * \"MAX\": max(x, y) * \"SUB\": x - y * \"TRUE_DIV\": x / y * \"FUSE_ADD_SIGMOID\": sigmoid(x + y) * \"FUSE_ADD_TANH\": tanh(x + y) * \"RELU\": x > 0 ? x : 0 * \"ABS\": x > 0 ? x : -x * \"SIGMOID\": sigmoid(x) * \"EXP\": exp(x) * \"TANH\": tanh(x) * \"FUSE_MUL_ADD3\": x * y + z * \"FAST_TANH\": x * (27. + x * x) / (27. + 9. * x * x) * \"NEGATE\": -x * \"ACOS\": acos(x) * \"ASIN\": asin(x) * \"CEIL\": ceil(x) * \"COS\": cos(x) * \"EXPM1\": expm1(x) * \"FLOOR\": floor(x) * \"LOG\": log(x) * \"LOG1P\": log1p(x) * \"SIN\": sin(x) * \"ROUND\": round(x) * \"ERF\": erf(x) * \"ERFINV\": erfinv(x) * \"ERFC\": erfc(x) * \"ERFCINV\": erfcinv(x) * \"ABS_GRAD\": abs_grad * \"FLOOR_DIV\": floor_div * \"MOD\": mod * \"SIGMOID_GRAD\": sigmoid_grad * \"SWITCH_GT0\": switch_gt0 * \"TANH_GRAD\": tanh_grad * \"LT\": less * \"LEQ\": leq * \"EQ\": equal * \"POW\": pow * \"LOG_SUM_EXP\": log_sum_exp * \"FAST_TANH_GRAD\": fast_tanh_grad * \"ATAN2\": atan2 * \"COND_LEQ_MOV\": cond_leq_mov * \"H_SWISH\": h_swish * \"FUSE_ADD_H_SWISH\": h_swish(x+y) * \"H_SWISH_GRAD\": h_swish_grad * \"AND\": bool binary: x && y * \"OR\": bool binary: x || y * \"XOR\": bool binary: x ^ y * \"NOT\": bool unary: ~x"
msgstr ""

#: megengine.module.elemwise.Elemwise:4 of
msgid "the elemwise method, support the following string. It will do the normal elemwise operator for float."
msgstr "elemwise方法，会进行标准elemwise浮点数运算。支持如下字符串："

#: megengine.module.elemwise.Elemwise:7 of
msgid "\"ADD\": a + b"
msgstr "\"ADD\": a + b"

#: megengine.module.elemwise.Elemwise:8 of
msgid "\"FUSE_ADD_RELU\": max(x+y, 0)"
msgstr "\"FUSE_ADD_RELU\": max(x+y, 0)"

#: megengine.module.elemwise.Elemwise:9 of
msgid "\"MUL\": x * y"
msgstr "\"MUL\": x * y"

#: megengine.module.elemwise.Elemwise:10 of
msgid "\"MIN\": min(x, y)"
msgstr "\"MIN\": min(x, y)"

#: megengine.module.elemwise.Elemwise:11 of
msgid "\"MAX\": max(x, y)"
msgstr "\"MAX\": max(x, y)"

#: megengine.module.elemwise.Elemwise:12 of
msgid "\"SUB\": x - y"
msgstr "\"SUB\": x - y"

#: megengine.module.elemwise.Elemwise:13 of
msgid "\"TRUE_DIV\": x / y"
msgstr "\"TRUE_DIV\": x / y"

#: megengine.module.elemwise.Elemwise:14 of
msgid "\"FUSE_ADD_SIGMOID\": sigmoid(x + y)"
msgstr "\"FUSE_ADD_SIGMOID\": sigmoid(x + y)"

#: megengine.module.elemwise.Elemwise:15 of
msgid "\"FUSE_ADD_TANH\": tanh(x + y)"
msgstr "\"FUSE_ADD_TANH\": tanh(x + y)"

#: megengine.module.elemwise.Elemwise:16 of
msgid "\"RELU\": x > 0 ? x : 0"
msgstr "\"RELU\": x > 0 ? x : 0"

#: megengine.module.elemwise.Elemwise:17 of
msgid "\"ABS\": x > 0 ? x : -x"
msgstr "\"ABS\": x > 0 ? x : -x"

#: megengine.module.elemwise.Elemwise:18 of
msgid "\"SIGMOID\": sigmoid(x)"
msgstr "\"SIGMOID\": sigmoid(x)"

#: megengine.module.elemwise.Elemwise:19 of
msgid "\"EXP\": exp(x)"
msgstr "\"EXP\": exp(x)"

#: megengine.module.elemwise.Elemwise:20 of
msgid "\"TANH\": tanh(x)"
msgstr "\"TANH\": tanh(x)"

#: megengine.module.elemwise.Elemwise:21 of
msgid "\"FUSE_MUL_ADD3\": x * y + z"
msgstr "\"FUSE_MUL_ADD3\": x * y + z"

#: megengine.module.elemwise.Elemwise:22 of
msgid "\"FAST_TANH\": x * (27. + x * x) / (27. + 9. * x * x)"
msgstr "\"FAST_TANH\": x * (27. + x * x) / (27. + 9. * x * x)"

#: megengine.module.elemwise.Elemwise:23 of
msgid "\"NEGATE\": -x"
msgstr "\"NEGATE\": -x"

#: megengine.module.elemwise.Elemwise:24 of
msgid "\"ACOS\": acos(x)"
msgstr "\"ACOS\": acos(x)"

#: megengine.module.elemwise.Elemwise:25 of
msgid "\"ASIN\": asin(x)"
msgstr "\"ASIN\": asin(x)"

#: megengine.module.elemwise.Elemwise:26 of
msgid "\"CEIL\": ceil(x)"
msgstr "\"CEIL\": ceil(x)"

#: megengine.module.elemwise.Elemwise:27 of
msgid "\"COS\": cos(x)"
msgstr "\"COS\": cos(x)"

#: megengine.module.elemwise.Elemwise:28 of
msgid "\"EXPM1\": expm1(x)"
msgstr "\"EXPM1\": expm1(x)"

#: megengine.module.elemwise.Elemwise:29 of
msgid "\"FLOOR\": floor(x)"
msgstr "\"FLOOR\": floor(x)"

#: megengine.module.elemwise.Elemwise:30 of
msgid "\"LOG\": log(x)"
msgstr "\"LOG\": log(x)"

#: megengine.module.elemwise.Elemwise:31 of
msgid "\"LOG1P\": log1p(x)"
msgstr "\"LOG1P\": log1p(x)"

#: megengine.module.elemwise.Elemwise:32 of
msgid "\"SIN\": sin(x)"
msgstr "\"SIN\": sin(x)"

#: megengine.module.elemwise.Elemwise:33 of
msgid "\"ROUND\": round(x)"
msgstr "\"ROUND\": round(x)"

#: megengine.module.elemwise.Elemwise:34 of
msgid "\"ERF\": erf(x)"
msgstr "\"ERF\": erf(x)"

#: megengine.module.elemwise.Elemwise:35 of
msgid "\"ERFINV\": erfinv(x)"
msgstr "\"ERFINV\": erfinv(x)"

#: megengine.module.elemwise.Elemwise:36 of
msgid "\"ERFC\": erfc(x)"
msgstr "\"ERFC\": erfc(x)"

#: megengine.module.elemwise.Elemwise:37 of
msgid "\"ERFCINV\": erfcinv(x)"
msgstr "\"ERFCINV\": erfcinv(x)"

#: megengine.module.elemwise.Elemwise:38 of
msgid "\"ABS_GRAD\": abs_grad"
msgstr "\"ABS_GRAD\": abs_grad"

#: megengine.module.elemwise.Elemwise:39 of
msgid "\"FLOOR_DIV\": floor_div"
msgstr "\"FLOOR_DIV\": floor_div"

#: megengine.module.elemwise.Elemwise:40 of
msgid "\"MOD\": mod"
msgstr "\"MOD\": mod"

#: megengine.module.elemwise.Elemwise:41 of
msgid "\"SIGMOID_GRAD\": sigmoid_grad"
msgstr "\"SIGMOID_GRAD\": sigmoid_grad"

#: megengine.module.elemwise.Elemwise:42 of
msgid "\"SWITCH_GT0\": switch_gt0"
msgstr "\"SWITCH_GT0\": switch_gt0"

#: megengine.module.elemwise.Elemwise:43 of
msgid "\"TANH_GRAD\": tanh_grad"
msgstr "\"TANH_GRAD\": tanh_grad"

#: megengine.module.elemwise.Elemwise:44 of
msgid "\"LT\": less"
msgstr "\"LEQ\": less"

#: megengine.module.elemwise.Elemwise:45 of
msgid "\"LEQ\": leq"
msgstr "\"LEQ\": leq"

#: megengine.module.elemwise.Elemwise:46 of
msgid "\"EQ\": equal"
msgstr "\"EQ\": equal"

#: megengine.module.elemwise.Elemwise:47 of
msgid "\"POW\": pow"
msgstr "\"POW\": pow"

#: megengine.module.elemwise.Elemwise:48 of
msgid "\"LOG_SUM_EXP\": log_sum_exp"
msgstr "\"LOG_SUM_EXP\": log_sum_exp"

#: megengine.module.elemwise.Elemwise:49 of
msgid "\"FAST_TANH_GRAD\": fast_tanh_grad"
msgstr "\"FAST_TANH_GRAD\": fast_tanh_grad"

#: megengine.module.elemwise.Elemwise:50 of
msgid "\"ATAN2\": atan2"
msgstr "\"ATAN2\": atan2"

#: megengine.module.elemwise.Elemwise:51 of
msgid "\"COND_LEQ_MOV\": cond_leq_mov"
msgstr "\"COND_LEQ_MOV\": cond_leq_mov"

#: megengine.module.elemwise.Elemwise:52 of
msgid "\"H_SWISH\": h_swish"
msgstr "\"H_SWISH\": h_swish"

#: megengine.module.elemwise.Elemwise:53 of
msgid "\"FUSE_ADD_H_SWISH\": h_swish(x+y)"
msgstr "\"FUSE_ADD_H_SWISH\": h_swish(x+y)"

#: megengine.module.elemwise.Elemwise:54 of
msgid "\"H_SWISH_GRAD\": h_swish_grad"
msgstr "\"H_SWISH_GRAD\": h_swish_grad"

#: megengine.module.elemwise.Elemwise:55 of
msgid "\"AND\": bool binary: x && y"
msgstr "\"AND\": bool binary: x && y"

#: megengine.module.elemwise.Elemwise:56 of
msgid "\"OR\": bool binary: x || y"
msgstr "\"OR\": bool binary: x || y"

#: megengine.module.elemwise.Elemwise:57 of
msgid "\"XOR\": bool binary: x ^ y"
msgstr "\"XOR\": bool binary: x ^ y"

#: megengine.module.elemwise.Elemwise:58 of
msgid "\"NOT\": bool unary: ~x"
msgstr "\"NOT\": bool unary: ~x"

#: ../../source/reference/api/megengine.module.Elemwise.rst:11
msgid "Methods"
msgstr "方法"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`__init__ <megengine.module.Elemwise.__init__>`\\ \\(method\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>
msgid "param name"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "module's name, can be initialized by the ``kwargs`` parameter"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`apply <megengine.module.Elemwise.apply>`\\ \\(fn\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Applies function ``fn`` to all the modules within this module, including itself."
msgstr "对当前模块中的所有模块应用函数 ``fn``，包括当前模块本身。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`buffers <megengine.module.Elemwise.buffers>`\\ \\(\\[recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable for the buffers of the module."
msgstr "返回该模块中对于buffers的一个可迭代对象。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`children <megengine.module.Elemwise.children>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable for all the submodules that are direct attributes of this module."
msgstr "返回一个可迭代对象，可遍历所有属于当前模块的直接属性的子模块。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`disable_quantize <megengine.module.Elemwise.disable_quantize>`\\ \\(\\[value\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Sets ``module``'s ``quantize_disabled`` attribute and return ``module``."
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`eval <megengine.module.Elemwise.eval>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Sets training mode of all the modules within this module (including itself) to ``False``."
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`forward <megengine.module.Elemwise.forward>`\\ \\(\\*inps\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`load_state_dict <megengine.module.Elemwise.load_state_dict>`\\ \\(state\\_dict\\[\\, strict\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Loads a given dictionary created by :func:`state_dict` into this module."
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`modules <megengine.module.Elemwise.modules>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable for all the modules within this module, including itself."
msgstr "返回一个可迭代对象，可以遍历当前模块中的所有模块，包括其本身。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`named_buffers <megengine.module.Elemwise.named_buffers>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable for key buffer pairs of the module, where ``key`` is the dotted path from this module to the buffer."
msgstr "返回可遍历模块中 key 与 buffer 的键值对的可迭代对象，其中 ``key`` 为从该模块至 buffer 的点路径（dotted path）。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`named_children <megengine.module.Elemwise.named_children>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable of key-submodule pairs for all the submodules that are direct attributes of this module, where 'key' is the attribute name of submodules."
msgstr "返回可迭代对象，可以遍历属于当前模块的直接属性的所有子模块（submodule）与键（key）组成的”key-submodule”对，其中'key'是子模块对应的属性名。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`named_modules <megengine.module.Elemwise.named_modules>`\\ \\(\\[prefix\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable of key-module pairs for all the modules within this module, including itself, where 'key' is the dotted path from this module to the submodules."
msgstr "返回可迭代对象，可以遍历当前模块包括自身在内的所有其内部模块所组成的key-module键-模块对，其中'key'是从当前模块到各子模块的点路径（dotted path）。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`named_parameters <megengine.module.Elemwise.named_parameters>`\\ \\(\\[prefix\\, recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable for key :class:`~.Parameter` pairs of the module, where ``key`` is the dotted path from this module to the :class:`~.Parameter`."
msgstr "返回一个可迭代对象，可以遍历当前模块中key与 :class:`~.Parameter` 组成的键值对。其中  ``key`` 是从模块到 :class:`~.Parameter` 的点路径（dotted path）。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`parameters <megengine.module.Elemwise.parameters>`\\ \\(\\[recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Returns an iterable for the :class:`~.Parameter` of the module."
msgstr "返回一个可迭代对象，遍历当前模块中的所有 :class:`~.Parameter`"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`register_forward_hook <megengine.module.Elemwise.register_forward_hook>`\\ \\(hook\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Registers a hook to handle forward results."
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`register_forward_pre_hook <megengine.module.Elemwise.register_forward_pre_hook>`\\ \\(hook\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Registers a hook to handle forward inputs."
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`replace_param <megengine.module.Elemwise.replace_param>`\\ \\(params\\, start\\_pos\\[\\, seen\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Replaces module's parameters with ``params``, used by :class:`~.ParamPack` to speedup multimachine training."
msgstr "用 `param` 替换模块的参数，被 :class:`~.ParamPack` 用来加速多机训练。"

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`state_dict <megengine.module.Elemwise.state_dict>`\\ \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`train <megengine.module.Elemwise.train>`\\ \\(\\[mode\\, recursive\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Sets training mode of all the modules within this module (including itself) to ``mode``."
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid ":obj:`zero_grad <megengine.module.Elemwise.zero_grad>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.module.Elemwise.rst:33:<autosummary>:1
msgid "Sets all parameters' grads to zero"
msgstr "将所有参数的梯度置0。"


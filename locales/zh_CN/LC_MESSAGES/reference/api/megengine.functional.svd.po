msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-19 16:51+0800\n"
"PO-Revision-Date: 2022-04-19 12:34\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.svd.po\n"
"X-Crowdin-File-ID: 2290\n"

#: ../../source/reference/api/megengine.functional.svd.rst:2
msgid "megengine.functional.svd"
msgstr "megengine.functional.svd"

#: megengine.functional.math.svd:1 of
msgid "Returns a singular value decomposition ``A = USVh`` of a matrix (or a stack of matrices) ``x`` , where ``U`` is a matrix (or a stack of matrices) with orthonormal columns, ``S`` is a vector of non-negative numbers (or stack of vectors), and ``Vh`` is a matrix (or a stack of matrices) with orthonormal rows."
msgstr ""

#: megengine.functional.math.svd of
msgid "参数"
msgstr "参数"

#: megengine.functional.math.svd:3 of
msgid "A input real tensor having the shape ``(..., M, N)`` with ``x.ndim >= 2`` ."
msgstr ""

#: megengine.functional.math.svd:5 of
msgid "If ``False`` , ``U`` and ``Vh`` have the shapes  ``(..., M, K)`` and ``(..., K, N)`` , respectively, where ``K = min(M, N)`` . If ``True`` , the shapes  are ``(..., M, M)`` and ``(..., N, N)`` , respectively. Default: ``False`` ."
msgstr ""

#: megengine.functional.math.svd:7 of
msgid "Whether or not to compute ``U`` and ``Vh`` in addition to ``S`` . Default: ``True`` ."
msgstr ""

#: megengine.functional.math.svd:10 of
msgid "naive does not support ``full_matrices`` and ``compute_uv`` as ``True`` ."
msgstr ""

#: megengine.functional.math.svd of
msgid "返回类型"
msgstr "返回类型"

#: megengine.functional.math.svd:12 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ":py:class:`~megengine.tensor.Tensor`"

#: megengine.functional.math.svd of
msgid "返回"
msgstr "返回"

#: megengine.functional.math.svd:13 of
msgid "Returns a tuple ( ``U`` , ``S`` , ``Vh`` ), which are  SVD factors ``U`` , ``S``, ``Vh`` of  input matrix ``x``. ( ``U`` , ``Vh`` only returned when ``compute_uv`` is True).     ``U`` contains matrices orthonormal columns (i.e., the columns are left singular vectors). If ``full_matrices`` is ``True`` , the array must have shape ``(..., M, M)`` . If ``full_matrices`` is ``False`` , the array must have shape ``(..., M, K)`` , where ``K = min(M, N)`` ."
msgstr ""

#: megengine.functional.math.svd:16 of
msgid "Returns a tuple ( ``U`` , ``S`` , ``Vh`` ), which are  SVD factors ``U`` , ``S``, ``Vh`` of  input matrix ``x``. ( ``U`` , ``Vh`` only returned when ``compute_uv`` is True)."
msgstr ""

#: megengine.functional.math.svd:16 of
msgid "``U`` contains matrices orthonormal columns (i.e., the columns are left singular vectors). If ``full_matrices`` is ``True`` , the array must have shape ``(..., M, M)`` . If ``full_matrices`` is ``False`` , the array must have shape ``(..., M, K)`` , where ``K = min(M, N)`` ."
msgstr ""

#: megengine.functional.math.svd:19 of
msgid "实际案例"
msgstr ""

#: megengine.functional.math.svd:24 of
msgid "Reconstruction based on reduced SVD, 2D case: >>> U, S, Vh = F.svd(x, full_matrices=False) >>> print(U._tuple_shape, S._tuple_shape, Vh._tuple_shape) (9, 6) (6,) (6, 6)"
msgstr ""

#: megengine.functional.math.svd:29 of
msgid "Reconsturction based on reduced SVD, 4D case: >>> u, s, vh = F.svd(y, full_matrices=False) >>> print(u._tuple_shape, s._tuple_shape, vh._tuple_shape) (2, 7, 8, 3) (2, 7, 3) (2, 7, 3, 3)"
msgstr ""

#~ msgid ":py:class:`~megengine.tensor.Tensor`"
#~ msgstr ":py:class:`~megengine.tensor.Tensor`"

#~ msgid "返回类型"
#~ msgstr "返回类型"

#~ msgid "Examples:"
#~ msgstr "例如："

#~ msgid "Computes the singular value decompositions of input matrix."
#~ msgstr "对输入矩阵 ``inp`` 进行奇异值分解。"

#~ msgid "input matrix, must has shape `[..., M, N]`."
#~ msgstr "输入矩阵，形状必须是 ``[..., M, N]``。"

#~ msgid "output matrices, `(U, sigma, V)`."
#~ msgstr "输出矩阵 `(U, sigma, V)`。"

#~ msgid "Outputs:"
#~ msgstr "输出："



msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-14 14:18+0800\n"
"PO-Revision-Date: 2021-05-06 05:35+0000\n"
"Last-Translator: \n"
"Language: zh_Hans_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/reference/api/megengine.module.init.msra_uniform_.rst:2
msgid "megengine.module.init.msra\\_uniform\\_"
msgstr "megengine.module.init.msra\\_uniform\\_"

#: megengine.module.init.msra_uniform_:1 of
#, fuzzy
msgid ""
"Fills tensor wilth random values sampled from :math:`\\mathcal{U}(-"
"        ext{bound},     ext{bound})` where"
msgstr "使用 :math:`\\mathcal{U}(-\\text{bound}, \\text{bound})` 的随机采样值填入 ``tensor``"

#: megengine.module.init.msra_uniform_:4 of
msgid ""
"ext{bound} = \\sqrt{\n"
"\n"
msgstr ""

#: megengine.module.init.msra_uniform_:6 of
msgid "rac{6}{(1 + a^2)    imes    ext{fan_in}}}"
msgstr ""

#: megengine.module.init.msra_uniform_:8 of
msgid ""
"Detailed information can be retrieved from `Delving deep into rectifiers:"
" Surpassing human-level performance on ImageNet classification`"
msgstr ""
"参考 `\"Delving deep into rectifiers: Surpassing human-level performance on"
" ImageNet classification\" <https://www.cv-"
"foundation.org/openaccess/content_iccv_2015/papers/He_Delving_Deep_into_ICCV_2015_paper.pdf>`_"
" 获取详细说明"

#: megengine.module.init.msra_uniform_ of
msgid "param tensor"
msgstr ""

#: megengine.module.init.msra_uniform_:12 of
msgid "tensor to be initialized."
msgstr "待初始化的n维张量。"

#: megengine.module.init.msra_uniform_ of
msgid "param a"
msgstr ""

#: megengine.module.init.msra_uniform_:13 of
msgid ""
"optional parameter for calculating gain for leaky_relu. See "
":func:`calculate_gain` for details."
msgstr "用于计算leaky_relu增益的可选参数。请参阅： :func:`calculate_gain` 了解详情。"

#: megengine.module.init.msra_uniform_ of
msgid "param mode"
msgstr ""

#: megengine.module.init.msra_uniform_:15 of
msgid ""
"\"fan_in\" or \"fan_out\", used to calculate :math:`gain`, the scaling "
"factor for :math:`bound`. See :func:`calculate_fan_in_and_fan_out` for "
"details."
msgstr ""
"`` 'fan_in'`` 或 ``' fan_out'`` ，用于计算 :math:`gain` ，为 :math:`bound` "
"的比例因子。请参阅： :func:`calculate_fan_in_and_fan_out` 了解详情。"

#: megengine.module.init.msra_uniform_ of
msgid "param nonlinearity"
msgstr ""

#: megengine.module.init.msra_uniform_:18 of
msgid ""
"name of the non-linear function used to calculate :math:`gain`. See "
":func:`calculate_gain` for details."
msgstr "用于计算 :math:`gain` 的非线性函数的名称。请参阅 :func:`calculate_gain` 了解详情。"

#~ msgid "\\text{bound} = \\sqrt{\\frac{6}{(1 + a^2) \\times \\text{fan_in}}}"
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr "返回类型"

#~ msgid ":py:obj:`None`"
#~ msgstr ":py:obj:`None`"

#~ msgid ""
#~ "\\text{bound} = \\sqrt{\\frac{6}{(1 + a^2) \\times \\text{fan_in}}}\n"
#~ "\n"
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""


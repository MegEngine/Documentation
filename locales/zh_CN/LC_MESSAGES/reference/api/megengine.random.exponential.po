msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-08 01:07+0000\n"
"PO-Revision-Date: 2024-01-08 01:26\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.random.exponential.po\n"
"X-Crowdin-File-ID: 10062\n"
"Language: zh_CN\n"

#: ../../source/reference/api/megengine.random.exponential.rst:2
msgid "megengine.random.exponential"
msgstr ""

#: megengine.random.rng.RNG.exponential:1 of
msgid "Random variable with exponential distribution :math:`\\operatorname{Exponential}(\\lambda)`. The corresponding probability density function is .. math::"
msgstr ""

#: megengine.random.rng.RNG.exponential:5 of
msgid "for x > 0 and 0 elsewhere. where`rate = lambda`. :type rate: :py:data:`~typing.Union`\\[:py:class:`float`, :py:class:`~megengine.tensor.Tensor`] :param rate: the lambda parameter of the distribution. Must be non-negative. rate = 1 / scale of the distribution. :type size: :py:data:`~typing.Optional`\\[:py:class:`~typing.Iterable`\\[:py:class:`int`]] :param size: the size of output tensor. If scale is a scalar and given size is, e.g., `(m, n)`,"
msgstr ""

#: megengine.random.rng.RNG.exponential:10 of
msgid "then the output shape is `(m, n)`. If scale is a Tensor with shape `(k, v)` and given size is, e.g., `(m, n)`, then the output shape is `(m, n, k, v)`. Default: None."
msgstr ""

#: megengine.random.rng.RNG.exponential of
msgid "返回"
msgstr "返回"

#: megengine.random.rng.RNG.exponential:13 of
msgid "the output tensor."
msgstr ""

#: megengine.random.rng.RNG.exponential:16 of
msgid "实际案例"
msgstr "实际案例"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 16:12+0800\n"
"PO-Revision-Date: 2023-09-21 06:31\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.quantization.SyncExponentialMovingAverageObserver.po\n"
"X-Crowdin-File-ID: 9683\n"

#: ../../source/reference/api/megengine.quantization.SyncExponentialMovingAverageObserver.rst:5
msgid "SyncExponentialMovingAverageObserver"
msgstr "SyncExponentialMovingAverageObserver"

#: megengine.quantization.observer.SyncExponentialMovingAverageObserver:1 of
msgid "A distributed version of :class:`~.ExponentialMovingAverageObserver`."
msgstr "一个分布式版本的 :class:`~.ExponentialMovingAverageObserver` ."

#: megengine.quantization.observer.SyncExponentialMovingAverageObserver of
msgid "参数"
msgstr "参数"

#: megengine.quantization.observer.SyncExponentialMovingAverageObserver:4 of
msgid "momentum ratio for min/max updating."
msgstr "动量的更新率"

#: megengine.quantization.observer.SyncExponentialMovingAverageObserver:6 of
msgid "set quantization mode."
msgstr "量化模式"

#: megengine.quantization.observer.SyncExponentialMovingAverageObserver:8 of
msgid "a initial maximum value to avoid division by zero problem."
msgstr "最大值的初始值，防止除 0 错误的发生。"

#: megengine.quantization.observer.SyncExponentialMovingAverageObserver:10 of
msgid "a string indicating which dtype to collect scale and zero_point of."
msgstr "字符串，表明按何种 dtype 来收集 scale 和 zero_point."

#~ msgid "基类：:class:`megengine.quantization.observer.ExponentialMovingAverageObserver`"
#~ msgstr "基类：:class:`megengine.quantization.observer.ExponentialMovingAverageObserver`"

#~ msgid ""
#~ ":obj:`__init__ "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.__init__>`\\"
#~ " \\(\\[momentum\\, mode\\, eps\\, dtype\\]\\)"
#~ msgstr ""

#~ msgid "param name"
#~ msgstr "参数名称"

#~ msgid "module's name, can be initialized by the ``kwargs`` parameter"
#~ msgstr "模块名称，子类的 ``kwargs`` 将会保存和传递此关键字参数。"

#~ msgid "megengine.quantization.SyncExponentialMovingAverageObserver"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr "方法"

#~ msgid ""
#~ ":obj:`apply "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.apply>`\\"
#~ " \\(fn\\)"
#~ msgstr ""

#~ msgid ""
#~ "Applies function ``fn`` to all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "对当前模块中的所有模块应用函数 ``fn``，包括当前模块本身。"

#~ msgid ""
#~ ":obj:`buffers "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.buffers>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the buffers of the module."
#~ msgstr "返回该模块中对于buffers的一个可迭代对象。"

#~ msgid ""
#~ ":obj:`children "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.children>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "submodules that are direct attributes of"
#~ " this module."
#~ msgstr "返回一个可迭代对象，可遍历所有属于当前模块的直接属性的子模块。"

#~ msgid ""
#~ ":obj:`disable "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.disable>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`disable_quantize "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.disable_quantize>`\\"
#~ " \\(\\[value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets ``module``'s ``quantize_disabled`` attribute"
#~ " and return ``module``."
#~ msgstr "设置 ``module`` 的 ``quantize_diabled`` 属性，并返回 ``module`` ."

#~ msgid ""
#~ ":obj:`enable "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.enable>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`eval "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.eval>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``False``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``False`` ，并将其切换为推理模式。"

#~ msgid ""
#~ ":obj:`forward "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.forward>`\\"
#~ " \\(x\\_orig\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_qparams "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.get_qparams>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_quantized_dtype "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.get_quantized_dtype>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`load_state_dict "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.load_state_dict>`\\"
#~ " \\(state\\_dict\\[\\, strict\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Loads a given dictionary created by "
#~ ":func:`state_dict` into this module."
#~ msgstr "加载一个参数字典，这个字典通常使用 :func:`state_dict` 得到。"

#~ msgid ""
#~ ":obj:`modules "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.modules>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for all the "
#~ "modules within this module, including "
#~ "itself."
#~ msgstr "返回一个可迭代对象，可以遍历当前模块中的所有模块，包括其本身。"

#~ msgid ""
#~ ":obj:`named_buffers "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.named_buffers>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key buffer "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the buffer."
#~ msgstr ""
#~ "返回可遍历模块中 key 与 buffer 的键值对的可迭代对象，其中 "
#~ "``key`` 为从该模块至 buffer 的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_children "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.named_children>`\\"
#~ " \\(\\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-submodule "
#~ "pairs for all the submodules that "
#~ "are direct attributes of this module,"
#~ " where 'key' is the attribute name"
#~ " of submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历属于当前模块的直接属性的所有子模块（submodule）与键（key）组成的”key-"
#~ "submodule”对，其中'key'是子模块对应的属性名。"

#~ msgid ""
#~ ":obj:`named_modules "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.named_modules>`\\"
#~ " \\(\\[prefix\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable of key-module "
#~ "pairs for all the modules within "
#~ "this module, including itself, where "
#~ "'key' is the dotted path from this"
#~ " module to the submodules."
#~ msgstr ""
#~ "返回可迭代对象，可以遍历当前模块包括自身在内的所有其内部模块所组成的key-"
#~ "module键-模块对，其中'key'是从当前模块到各子模块的点路径（dotted path）。"

#~ msgid ""
#~ ":obj:`named_parameters "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.named_parameters>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key "
#~ ":class:`~.Parameter` pairs of the module, "
#~ "where ``key`` is the dotted path "
#~ "from this module to the "
#~ ":class:`~.Parameter`."
#~ msgstr ""
#~ "返回一个可迭代对象，可以遍历当前模块中key与 :class:`~.Parameter` 组成的键值对。其中"
#~ "  ``key`` 是从模块到 :class:`~.Parameter` 的点路径（dotted"
#~ " path）。"

#~ msgid ""
#~ ":obj:`named_tensors "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.named_tensors>`\\"
#~ " \\(\\[prefix\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Returns an iterable for key tensor "
#~ "pairs of the module, where ``key`` "
#~ "is the dotted path from this "
#~ "module to the tensor."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`parameters "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.parameters>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Parameter` of the module."
#~ msgstr "返回一个可迭代对象，遍历当前模块中的所有 :class:`~.Parameter`"

#~ msgid ""
#~ ":obj:`register_forward_hook "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.register_forward_hook>`\\"
#~ " \\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward results."
#~ msgstr "给模块输出注册一个回调函数。"

#~ msgid ""
#~ ":obj:`register_forward_pre_hook "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.register_forward_pre_hook>`\\"
#~ " \\(hook\\)"
#~ msgstr ""

#~ msgid "Registers a hook to handle forward inputs."
#~ msgstr "给模块输入注册一个回调函数。"

#~ msgid ""
#~ ":obj:`replace_param "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.replace_param>`\\"
#~ " \\(params\\, start\\_pos\\[\\, seen\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Replaces module's parameters with ``params``,"
#~ " used by :class:`~.ParamPack` to"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`set_momentum "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.set_momentum>`\\"
#~ " \\(momentum\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`state_dict "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.state_dict>`\\"
#~ " \\(\\[rst\\, prefix\\, keep\\_var\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`tensors "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.tensors>`\\"
#~ " \\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid "Returns an iterable for the :class:`~.Tensor` of the module."
#~ msgstr ""

#~ msgid ""
#~ ":obj:`train "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.train>`\\"
#~ " \\(\\[mode\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ "Sets training mode of all the "
#~ "modules within this module (including "
#~ "itself) to ``mode``."
#~ msgstr "当前模块中所有模块的 ``training`` 属性（包括自身）置为 ``mode``。"

#~ msgid ""
#~ ":obj:`zero_grad "
#~ "<megengine.quantization.SyncExponentialMovingAverageObserver.zero_grad>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid "Sets all parameters' grads to zero"
#~ msgstr "将所有参数的梯度置0。"


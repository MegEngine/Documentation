
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-14 06:50+0000\n"
"PO-Revision-Date: 2023-05-11 10:50+0000\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/reference/api/megengine.load.rst:2
msgid "megengine.load"
msgstr ""

#: megengine.serialization.load:1 of
msgid "Load an object saved with :func:`~.megengine.save` from a file."
msgstr "从文件中加载一个用:func:`~.megengine.save`保存的对象。"

#: megengine.serialization.load of
msgid "参数"
msgstr ""

#: megengine.serialization.load:3 of
msgid "a string of file name or a text file object from which to load."
msgstr "文件名字符串或一个需要加载的文件对象。"

#: megengine.serialization.load:4 of
msgid "defines device mapping. See examples for usage."
msgstr "定义设备映射。具体请参考使用示例。"

#: megengine.serialization.load:5 of
msgid "the module to use for pickling."
msgstr "用于序列化的模块。"

#: megengine.serialization.load of
msgid "返回"
msgstr ""

#: megengine.serialization.load:7 of
msgid "None."
msgstr ""

#: megengine.serialization.load:11 of
msgid ""
"If you will call :func:`~.megengine.set_default_device()`, please do it "
"before :func:`~.megengine.load()`."
msgstr ""
"如果你要调用 :func:`~.megengine.set_default_device()`, 请在 "
":func:`~.megengine.load()`. 之前调用它"

#: megengine.serialization.load:14 of
msgid "If you are using MegEngine with different Python versions"
msgstr "如果你在不同的Python版本下使用MegEngine"

#: megengine.serialization.load:17 of
msgid ""
"Different Python version may use different DEFAULT/HIGHEST pickle "
"protocol. If you want to :func:`~megengine.load` the saved object in "
"another Python version, please make sure you have used the same protocol."
msgstr ""
"不同的 Python 版本可能使用不同的 DEFAULT/HIGHEST pickle 协议。如果你想在另一个Python版本中 "
":func:`~megengine.load` 保存的对象，请确保你使用了相同的协议。"

#: megengine.serialization.load:21 of
msgid "You can select to use ``pickle`` module directly"
msgstr "你可以选择直接使用 ``pickle ``模块"

#: megengine.serialization.load:23 of
msgid ""
"This interface is a wrapper of :func:`pickle.load`. If you want to use "
"``pickle``, See :py:mod:`pickle` for more information about how to set "
"``pickle_protocol``:"
msgstr ""
"这个接口是:func:`pickle.load`的一个封装。如果你想使用`pickle`，请参阅 :py:mod:`pickle` "
"以了解如何设置`pickle_protocol`的详细信息："

#: megengine.serialization.load:26 of
msgid ""
":py:data:`pickle.HIGHEST_PROTOCOL` - the highest protocol version "
"available."
msgstr ":py:data:`pickle.HIGHEST_PROTOCOL` - 可用的最高协议版本。"

#: megengine.serialization.load:27 of
msgid ""
":py:data:`pickle.DEFAULT_PROTOCOL` - the default protocol version used "
"for pickling."
msgstr ":py:data:`pickle.DEFAULT_PROTOCOL` - 用于序列化的默认协议版本。"

#: megengine.serialization.load:30 of
msgid "实际案例"
msgstr "实际案例"

#: megengine.serialization.load:31 of
msgid "This example shows how to load tenors to different devices:"
msgstr "这个例子显示了如何将tensor加载到不同的设备："

#: megengine.serialization.load:49 of
msgid ""
"If you are using a lower version of Python (<3.8), you can use other "
"pickle module like ``pickle5`` to load object saved in pickle 5 protocol:"
msgstr ""
"如果你使用的是低版本的 Python（<3.8），你可以使用其他 pickle 模块，如``pickle5``来加载以 pickle "
"5协议保存的对象："

#: megengine.serialization.load:54 of
msgid "Or you can use ``pickle5`` in this way (only used with this interface)："
msgstr "或者你可以这样使用 ``pickle5``（只用于此接口）："

#~ msgid "Examples:"
#~ msgstr "例如："

#~ msgid "Default: ``None``."
#~ msgstr "默认值：None"

#~ msgid "Default: ``pickle``."
#~ msgstr "默认值： ``pickle``"


msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2022-01-24 11:45\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.nn.cross_entropy.po\n"
"X-Crowdin-File-ID: 7129\n"
"Language: zh_CN\n"

#: ../../source/reference/api/megengine.functional.nn.cross_entropy.rst:2
msgid "megengine.functional.nn.cross\\_entropy"
msgstr ""

#: megengine.functional.loss.cross_entropy:1 of
msgid "Computes the multi-class cross entropy loss (using logits by default)."
msgstr "计算 multi-class cross entropy loss（默认使用 logits）。"

#: megengine.functional.loss.cross_entropy:3 of
msgid "By default(``with_logitis`` is True), ``pred`` is assumed to be logits, class probabilities are given by softmax."
msgstr "默认情况下（``with_logitis`` 为真），``pred`` 被认为是 logits，类的概率将由 softmax 计算得出。"

#: megengine.functional.loss.cross_entropy:6 of
msgid "It has better numerical stability compared with sequential calls to :func:`~.softmax` and :func:`~.cross_entropy`."
msgstr "与顺序调用 :func:`~.softmax` 和  :func:`~.cross_entropy` 相比，具有更好的数值稳定性。"

#: megengine.functional.loss.cross_entropy:8 of
msgid "When using label smoothing, the label distribution is as follows:"
msgstr "当使用标签平滑 (label smoothing) 时，标签的分布情况如下:"

#: megengine.functional.loss.cross_entropy:10 of
msgid "y^{LS}_{k}=y_{k}\\left(1-\\alpha\\right)+\\alpha/K\n\n"
msgstr ""

#: megengine.functional.loss.cross_entropy:12 of
msgid "where :math:`y^{LS}` and :math:`y` are new label distribution and origin label distribution respectively. k is the index of label distribution. :math:`\\alpha` is ``label_smooth`` and :math:`K` is the number of classes."
msgstr ""

#: megengine.functional.loss.cross_entropy of
msgid "参数"
msgstr ""

#: megengine.functional.loss.cross_entropy:16 of
msgid "input tensor representing the predicted probability."
msgstr "表示预测概率的输入张量。"

#: megengine.functional.loss.cross_entropy:18 of
msgid "input tensor representing the classification label."
msgstr "表示分类标签的输入张量。"

#: megengine.functional.loss.cross_entropy:20 of
msgid "an axis along which softmax will be applied. Default: 1"
msgstr "沿着该维度应用 softmax 函数。默认：1。"

#: megengine.functional.loss.cross_entropy:22 of
msgid "whether to apply softmax first. Default: True"
msgstr "是否先应用 sigmoid。默认：True"

#: megengine.functional.loss.cross_entropy:24 of
msgid "a label smoothing of parameter that can re-distribute target distribution. Default: 0"
msgstr "用于对原始标签分布进行标签平滑的参数。默认：0。"

#: megengine.functional.loss.cross_entropy:26 of
msgid "the reduction to apply to the output: 'none' | 'mean' | 'sum'. Default: 'mean'"
msgstr ""

#: megengine.functional.loss.cross_entropy of
msgid "返回类型"
msgstr "返回类型"

#: megengine.functional.loss.cross_entropy:28 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ":py:class:`~megengine.tensor.Tensor`"

#: megengine.functional.loss.cross_entropy of
msgid "返回"
msgstr ""

#: megengine.functional.loss.cross_entropy:29 of
msgid "loss value."
msgstr "损失值。"

#: megengine.functional.loss.cross_entropy:32 of
msgid "实际案例"
msgstr ""

#: megengine.functional.loss.cross_entropy:46 of
msgid "Outputs:"
msgstr "输出："


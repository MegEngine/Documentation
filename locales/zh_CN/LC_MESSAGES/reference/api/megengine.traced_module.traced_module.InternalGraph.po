
msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-25 01:18+0000\n"
"PO-Revision-Date: 2023-04-25 01:27\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.traced_module.traced_module.InternalGraph.po\n"
"X-Crowdin-File-ID: 9765\n"

#: ../../source/reference/api/megengine.traced_module.traced_module.InternalGraph.rst:5
msgid "InternalGraph"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph:1 of
msgid ""
"``InternalGraph`` is the main data structure used in the TracedModule. It"
" is used to represent the execution procedure of Module's forward method."
msgstr ""
"``InternalGraph`` 是 TracedModule 中使用的主要数据结构。它用来表示 Module 的 forward "
"方法的执行过程。"

#: megengine.traced_module.traced_module.InternalGraph:4
#: megengine.traced_module.traced_module.InternalGraph.add_output_node:7
#: megengine.traced_module.traced_module.InternalGraph.reset_outputs:11 of
msgid "For example, the following code"
msgstr "例如，下面的代码"

#: megengine.traced_module.traced_module.InternalGraph:29 of
msgid "Will produce the following ``InternalGraph``:"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph:29 of
msgid "print(traced_module.graph)"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph:29 of
msgid "print(traced_module.graph)"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.add_input_node:1 of
msgid "Add an input node to the graph."
msgstr "向计算图中添加一个输入节点。"

#: megengine.traced_module.traced_module.InternalGraph.add_input_node:3 of
msgid "The new Node will be the last of the positional arguments."
msgstr "新 Node 将是最后一个位置参数。"

#: megengine.traced_module.traced_module.InternalGraph.add_input_node
#: megengine.traced_module.traced_module.InternalGraph.eval
#: megengine.traced_module.traced_module.InternalGraph.exprs
#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs
#: megengine.traced_module.traced_module.InternalGraph.get_expr_by_id
#: megengine.traced_module.traced_module.InternalGraph.get_function_by_type
#: megengine.traced_module.traced_module.InternalGraph.get_method_by_type
#: megengine.traced_module.traced_module.InternalGraph.get_module_by_type
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name
#: megengine.traced_module.traced_module.InternalGraph.insert_exprs
#: megengine.traced_module.traced_module.InternalGraph.nodes
#: megengine.traced_module.traced_module.InternalGraph.replace_node
#: megengine.traced_module.traced_module.InternalGraph.reset_outputs of
msgid "参数"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.add_input_node:6 of
msgid "the shape of the new input Node."
msgstr "新输入 Node 的形状。"

#: megengine.traced_module.traced_module.InternalGraph.add_input_node:8 of
msgid "the dtype of the new input Node. Default: float32"
msgstr "新输入 Node 的 dtype 。默认值：float32"

#: megengine.traced_module.traced_module.InternalGraph.add_input_node:11 of
msgid ""
"the name of the new input Node. When the name is used in the graph, a "
"suffix will be added to it."
msgstr "新输入 Node 的名字。当图中使用该名字时，如果重名将为其添加后缀。"

#: megengine.traced_module.traced_module.InternalGraph.add_output_node:1 of
msgid "Add an output node to the Graph."
msgstr "向计算图中添加一个输出节点。"

#: megengine.traced_module.traced_module.InternalGraph.add_output_node:3 of
msgid ""
"The Graph output will become a ``tuple`` after calling "
"``add_output_node``. The first element of the ``tuple`` is the original "
"output, and the second is the ``node``."
msgstr ""
"调用 ``add_output_node`` 后，图形输出将变成一个 ``tuple`` 。``tuple`` "
"的第一个元素是原始输出，第二个元素是 ``node`` 。"

#: megengine.traced_module.traced_module.InternalGraph.add_output_node:31
#: megengine.traced_module.traced_module.InternalGraph.reset_outputs:34 of
msgid "Will produce the following ``InternalGraph`` and ``out``::"
msgstr "将生成以下 ``InternalGraph`` 和 ``out``::"

#: megengine.traced_module.traced_module.InternalGraph.compile:1 of
msgid "Delete unused expr."
msgstr "删除未使用的 expr 。"

#: megengine.traced_module.traced_module.InternalGraph.eval:1 of
msgid "Call this method to execute the graph."
msgstr "调用这个方法来执行计算图。"

#: megengine.traced_module.traced_module.InternalGraph.eval:4 of
msgid "the tensors corresponding to the ``graph.inputs[1:]``."
msgstr "对应于 ``graph.inputs[1:]`` 的向量。"

#: megengine.traced_module.traced_module.InternalGraph.exprs:1 of
msgid "Get the Exprs that constitute this graph."
msgstr "获取构成这个计算图的 Exprs。"

#: megengine.traced_module.traced_module.InternalGraph.exprs:3
#: megengine.traced_module.traced_module.InternalGraph.get_expr_by_id:5
#: megengine.traced_module.traced_module.InternalGraph.get_function_by_type:5
#: megengine.traced_module.traced_module.InternalGraph.get_method_by_type:5 of
msgid "whether to get the Exprs in the subgraph. Default: True"
msgstr "是否获取子图中的 Exprs 。默认值：True"

#: megengine.traced_module.traced_module.InternalGraph.exprs
#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs
#: megengine.traced_module.traced_module.InternalGraph.get_expr_by_id
#: megengine.traced_module.traced_module.InternalGraph.get_function_by_type
#: megengine.traced_module.traced_module.InternalGraph.get_method_by_type
#: megengine.traced_module.traced_module.InternalGraph.get_module_by_type
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name
#: megengine.traced_module.traced_module.InternalGraph.inputs
#: megengine.traced_module.traced_module.InternalGraph.insert_exprs
#: megengine.traced_module.traced_module.InternalGraph.nodes
#: megengine.traced_module.traced_module.InternalGraph.outputs
#: megengine.traced_module.traced_module.InternalGraph.top_graph of
msgid "返回"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.exprs:6 of
msgid "A ``ExprFilter`` containing all Exprs of this graph."
msgstr "``ExprFilter`` 包含计算图的所有 Exprs."

#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs:1 of
msgid "Get the dependent Exprs of the ``nodes``."
msgstr "获取依赖 ``nodes`` 的 Exprs."

#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs:4 of
msgid "a list of :class:`Node`."
msgstr "一个 :class:`Node` 列表。"

#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs
#: megengine.traced_module.traced_module.InternalGraph.inputs
#: megengine.traced_module.traced_module.InternalGraph.name
#: megengine.traced_module.traced_module.InternalGraph.outputs
#: megengine.traced_module.traced_module.InternalGraph.qualname of
msgid "返回类型"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs:6 of
msgid ":py:class:`~typing.List`\\[:py:class:`~megengine.traced_module.expr.Expr`]"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.get_dep_exprs:7 of
msgid "A list of dependent :class:`Expr`."
msgstr "一个相关的 :class:`Expr` 列表。"

#: megengine.traced_module.traced_module.InternalGraph.get_expr_by_id:1 of
msgid "Filter Exprs by their ``id``."
msgstr "通过 ``id`` 来过滤 Exprs."

#: megengine.traced_module.traced_module.InternalGraph.get_expr_by_id:4
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id:15 of
msgid "a list of :class:`int`."
msgstr "一个 :class:`int` 列表。"

#: megengine.traced_module.traced_module.InternalGraph.get_expr_by_id:8 of
msgid "A :class:`~.TracedModule.ExprFilterExprId`."
msgstr "一个 :class:`~.TracedModule.ExprFilterExprId`."

#: megengine.traced_module.traced_module.InternalGraph.get_function_by_type:1
#: of
msgid "Filter Exprs by the type of ``CallFunction``."
msgstr "通过 ``CallFunction`` 的类型来过滤 Exprs."

#: megengine.traced_module.traced_module.InternalGraph.get_function_by_type:4
#: of
msgid "a built-in function, such as ``F.relu``."
msgstr "一个内置函数，例如 ``F.relu``."

#: megengine.traced_module.traced_module.InternalGraph.get_function_by_type:8
#: of
msgid "A :class:`~.TracedModule.ExprFilterCallFunction`."
msgstr "一个 :class:`~.TracedModule.ExprFilterCallFunction`."

#: megengine.traced_module.traced_module.InternalGraph.get_method_by_type:1 of
msgid "Filter Exprs by the type of ``CallMethod``."
msgstr "通过 ``CallMethod`` 的类型来过滤 Exprs."

#: megengine.traced_module.traced_module.InternalGraph.get_method_by_type:4 of
msgid "a method string, such as \"__add__\"."
msgstr "一个方法的字符串，例如 \"__add__\"."

#: megengine.traced_module.traced_module.InternalGraph.get_method_by_type:8 of
msgid "A :class:`~.TracedModule.ExprFilterCallMethod`."
msgstr "一个 :class:`~.TracedModule.ExprFilterCallMethod`."

#: megengine.traced_module.traced_module.InternalGraph.get_module_by_type:1 of
msgid "Filter Nodes by the ``module_type`` of ``ModuleNode``."
msgstr "通过 ``ModuleNode`` 的 ``module_type`` 来过滤 Nodes."

#: megengine.traced_module.traced_module.InternalGraph.get_module_by_type:4 of
msgid "a subclass of :class:`~.Module`."
msgstr ":class:`~.Module` 的子类。"

#: megengine.traced_module.traced_module.InternalGraph.get_module_by_type:5
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id:16
#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name:20
#: megengine.traced_module.traced_module.InternalGraph.nodes:3 of
msgid "whether to get the Nodes in the subgraph. Default: True"
msgstr "是否获取子图中的 Nodes. 默认值：True"

#: megengine.traced_module.traced_module.InternalGraph.get_module_by_type:8 of
msgid "A :class:`~.TracedModule.NodeFilterType`."
msgstr "一个 :class:`~.TracedModule.NodeFilterType`."

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id:1 of
msgid "Filter Nodes by their ``id``."
msgstr "通过 ``id`` 来过滤 Nodes."

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id:3 of
msgid "The ``id`` of the ``Node`` can be obtained by the following code"
msgstr "``Node`` 的 ``id`` 可以通过下面的代码获得"

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_id:19 of
msgid "A :class:`~.TracedModule.NodeFilterNodeId`."
msgstr "一个 :class:`~.TracedModule.NodeFilterNodeId`."

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name:1 of
msgid "Filter Nodes by their full name."
msgstr "通过全名来过滤 Nodes."

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name:3 of
msgid "The full name of the ``Node`` can be obtained by the following code"
msgstr "``Node`` 的全名可以通过下面的代码获得"

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name:15 of
msgid ""
"a string in glob syntax that can contain ``?`` and ``*`` to match a "
"single or arbitrary characters."
msgstr "一个在 glob 语法中可以包含 ``?`` 和 ``*`` 来匹配单个或任意字符的字符串。"

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name:18 of
msgid "whether to ignroe case. Default: True"
msgstr "是否忽略这种情况。默认值：True"

#: megengine.traced_module.traced_module.InternalGraph.get_node_by_name:23 of
msgid "A :class:`~.TracedModule.NodeFilterName`."
msgstr "一个 :class:`~.TracedModule.NodeFilterName`."

#: megengine.traced_module.traced_module.InternalGraph.inputs:1 of
msgid "Get the list of input Nodes of this graph."
msgstr "获取此计算图的输入节点列表。"

#: megengine.traced_module.traced_module.InternalGraph.inputs:3
#: megengine.traced_module.traced_module.InternalGraph.outputs:3 of
msgid ":py:class:`~typing.List`\\[:py:class:`~megengine.traced_module.node.Node`]"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.inputs:4
#: megengine.traced_module.traced_module.InternalGraph.outputs:4 of
msgid "A list of ``Node``."
msgstr "一个 ``Node`` 列表。"

#: megengine.traced_module.traced_module.InternalGraph.insert_exprs:1 of
msgid "Initialize the trace mode and insertion position."
msgstr "初始化 trace 模式和插入位置。"

#: megengine.traced_module.traced_module.InternalGraph.insert_exprs:3 of
msgid ""
"When used within a 'with' statement, this will temporary set the trace "
"mode and then restore normal mode when the with statement exits::"
msgstr "当在 with 语句中使用时，将临时设置 trace 模式，然后在with语句退出时恢复正常模式："

#: megengine.traced_module.traced_module.InternalGraph.insert_exprs:11 of
msgid ""
"the ``expr`` after which to insert. If None, the insertion position will "
"be automatically set based on the input node."
msgstr "在哪个 ``expr`` 之后插入。如果为None，插入位置将根据输入节点自动设置。"

#: megengine.traced_module.traced_module.InternalGraph.insert_exprs:14 of
msgid ""
"A resource manager that will initialize trace mode on ``__enter__`` and "
"restore normal mode on ``__exit__``."
msgstr "一个资源管理器，它将在 ``__enter__`` 里初始化 trace 模式，并在 ``__exit__`` 里恢复正常模式。"

#: megengine.traced_module.traced_module.InternalGraph.name:1 of
msgid "Get the name of this graph."
msgstr "获取这个计算图的名称。"

#: megengine.traced_module.traced_module.InternalGraph.name:3
#: megengine.traced_module.traced_module.InternalGraph.qualname:38 of
msgid ":py:class:`str`"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.nodes:1 of
msgid "Get the Nodes that constitute this graph."
msgstr "获取构成这个计算图的节点。"

#: megengine.traced_module.traced_module.InternalGraph.nodes:6 of
msgid "A ``NodeFilter`` containing all Nodes of this graph."
msgstr "包含此计算图的所有节点的 ``NodeFilter`` 。"

#: megengine.traced_module.traced_module.InternalGraph.outputs:1 of
msgid "Get the list of output Nodes of this graph."
msgstr "获取此计算图的输出节点列表。"

#: megengine.traced_module.traced_module.InternalGraph.qualname:1 of
msgid ""
"Get the `qualname` of this graph. The `qualname` can be used to get the "
"submodule from the traced Module or Module."
msgstr "获取此计算图的 `qualname` 。`qualname` 可以用来从被跟踪的模块或普通模块中获取子模块。"

#: megengine.traced_module.traced_module.InternalGraph.qualname:5 of
msgid "示例"
msgstr ""

#: megengine.traced_module.traced_module.InternalGraph.replace_node:1 of
msgid "Replace the Nodes in the graph."
msgstr "替换图中的节点。"

#: megengine.traced_module.traced_module.InternalGraph.replace_node:4 of
msgid "the map {old_Node: new_Node} that specifies how to replace the Nodes."
msgstr "指定如何替换节点的 map {old_Node: new_Node} 。"

#: megengine.traced_module.traced_module.InternalGraph.reset_outputs:1 of
msgid "Reset the output Nodes of the graph."
msgstr "重置计算图的输出节点。"

#: megengine.traced_module.traced_module.InternalGraph.reset_outputs:5 of
msgid ""
"This method only supports resetting the output of graphs that do not have"
" a parent graph."
msgstr "此方法只支持重置没有父图的计算图的输出。"

#: megengine.traced_module.traced_module.InternalGraph.reset_outputs:8 of
msgid "an object which inner element is Node. Support tuple, list dict, etc."
msgstr "内部元素为 Node 的对象。支持元组、列表、字典等。"

#: megengine.traced_module.traced_module.InternalGraph.top_graph:1 of
msgid "Get the parent graph of this graph."
msgstr "得到这个计算图的父图。"

#: megengine.traced_module.traced_module.InternalGraph.top_graph:3 of
msgid "An ``InternalGraph``."
msgstr "一个 ``InternalGraph``."

#~ msgid "megengine.traced\\_module.traced\\_module.InternalGraph"
#~ msgstr ""

#~ msgid "Attributes"
#~ msgstr "属性"

#~ msgid ""
#~ ":obj:`inputs "
#~ "<megengine.traced_module.traced_module.InternalGraph.inputs>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`outputs "
#~ "<megengine.traced_module.traced_module.InternalGraph.outputs>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`top_graph "
#~ "<megengine.traced_module.traced_module.InternalGraph.top_graph>`\\"
#~ msgstr ""

#~ msgid "Methods"
#~ msgstr "方法"

#~ msgid ""
#~ ":obj:`add_input_node "
#~ "<megengine.traced_module.traced_module.InternalGraph.add_input_node>`\\"
#~ " \\(shape\\[\\, dtype\\, name\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`add_output_node "
#~ "<megengine.traced_module.traced_module.InternalGraph.add_output_node>`\\"
#~ " \\(node\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`compile "
#~ "<megengine.traced_module.traced_module.InternalGraph.compile>`\\ "
#~ "\\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`eval "
#~ "<megengine.traced_module.traced_module.InternalGraph.eval>`\\ "
#~ "\\(\\*inputs\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`exprs "
#~ "<megengine.traced_module.traced_module.InternalGraph.exprs>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_dep_exprs "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_dep_exprs>`\\"
#~ " \\(nodes\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_expr_by_id "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_expr_by_id>`\\"
#~ " \\(\\[expr\\_id\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_function_by_type "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_function_by_type>`\\"
#~ " \\(\\[func\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_method_by_type "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_method_by_type>`\\"
#~ " \\(\\[method\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_module_by_type "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_module_by_type>`\\"
#~ " \\(module\\_cls\\[\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_node_by_id "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_node_by_id>`\\"
#~ " \\(\\[node\\_id\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`get_node_by_name "
#~ "<megengine.traced_module.traced_module.InternalGraph.get_node_by_name>`\\"
#~ " \\(\\[name\\, ignorecase\\, recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`insert_exprs "
#~ "<megengine.traced_module.traced_module.InternalGraph.insert_exprs>`\\"
#~ " \\(\\[expr\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`interpret "
#~ "<megengine.traced_module.traced_module.InternalGraph.interpret>`\\ "
#~ "\\(\\*inputs\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`nodes "
#~ "<megengine.traced_module.traced_module.InternalGraph.nodes>`\\ "
#~ "\\(\\[recursive\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`replace_node "
#~ "<megengine.traced_module.traced_module.InternalGraph.replace_node>`\\"
#~ " \\(repl\\_dict\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_inputs "
#~ "<megengine.traced_module.traced_module.InternalGraph.reset_inputs>`\\"
#~ " \\(\\*args\\, \\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`reset_outputs "
#~ "<megengine.traced_module.traced_module.InternalGraph.reset_outputs>`\\"
#~ " \\(outputs\\)"
#~ msgstr ""


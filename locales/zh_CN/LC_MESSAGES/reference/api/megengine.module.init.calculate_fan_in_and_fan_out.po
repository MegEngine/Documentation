msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-19 16:51+0800\n"
"PO-Revision-Date: 2022-05-18 04:27\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh_CN/LC_MESSAGES/reference/api/megengine.module.init.calculate_fan_in_and_fan_out.po\n"
"X-Crowdin-File-ID: 8400\n"

#: ../../source/reference/api/megengine.module.init.calculate_fan_in_and_fan_out.rst:2
msgid "megengine.module.init.calculate\\_fan\\_in\\_and\\_fan\\_out"
msgstr "megengine.module.init.calculate\\_fan\\_in\\_and\\_fan\\_out"

#: megengine.module.init.calculate_fan_in_and_fan_out:1 of
msgid "Calculates fan_in / fan_out value for given weight tensor. This function assumes input tensor is stored in ``NCHW`` format."
msgstr "对于给定的权重张量，计算fan_in / fan_out值。此函数假定输入张量存储格式为NCHW。"

#: megengine.module.init.calculate_fan_in_and_fan_out:6 of
msgid "The group conv2d kernel shape in MegEngine is ``(G, O/G, I/G, K, K)``. This function calculates ``fan_out = O/G * K * K`` as default, but PyTorch uses ``fan_out = O * K * K``."
msgstr "MegEngine 中 group conv2d kernel 的形状为 ``(G, O/G, I/G, K, K)``。该函数默认用 ``fan_out = O/G * K * K`` 进行计算，但在 PyTorch 中用``fan_out = O * K * K``。"

#: megengine.module.init.calculate_fan_in_and_fan_out of
msgid "参数"
msgstr "参数"

#: megengine.module.init.calculate_fan_in_and_fan_out:11 of
msgid "weight tensor in ``NCHW`` format."
msgstr "NCHW 格式的权重张量。"

#: megengine.module.init.calculate_fan_in_and_fan_out of
msgid "返回类型"
msgstr "返回类型"

#: megengine.module.init.calculate_fan_in_and_fan_out:14 of
msgid ":py:data:`~typing.Tuple`\\[:py:class:`float`, :py:class:`float`]"
msgstr ":py:data:`~typing.Tuple`\\[:py:class:`float`, :py:class:`float`]"

#~ msgid "返回类型"
#~ msgstr "返回类型"

#~ msgid ":py:data:`~typing.Tuple`\\[:py:class:`float`, :py:class:`float`]"
#~ msgstr ":py:data:`~typing.Tuple`\\[:py:class:`float`, :py:class:`float`]"


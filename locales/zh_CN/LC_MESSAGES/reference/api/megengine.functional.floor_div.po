msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-24 23:51+0800\n"
"PO-Revision-Date: 2023-04-21 09:18\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/api/megengine.functional.floor_div.po\n"
"X-Crowdin-File-ID: 9129\n"

#: ../../source/reference/api/megengine.functional.floor_div.rst:2
msgid "megengine.functional.floor\\_div"
msgstr ""

#: megengine.functional.elemwise.floor_div:1 of
msgid "Element-wise floor division."
msgstr ""

#: megengine.functional.elemwise.floor_div:3 of
msgid "Rounds the result of dividing each element :math:`x_i` of the input tensor :math:`x` by the respective element :math:`y_i` of the input tensor :math:`y` to the greatest (i.e., closest to ``+infinity``) integer-value number that is not greater than the division result."
msgstr "将输入张量 :math:`x` 的每个元素 :math:`x_i` 除以输入张量 :math:`y_i` 的相应元素 :math:`y` 的结果四舍五入到最大 (即最接近到 ``+infinity``) 不大于除法结果的整数值数。"

#: megengine.functional.elemwise.floor_div of
msgid "参数"
msgstr ""

#: megengine.functional.elemwise.floor_div:8 of
msgid "dividend input tensor. Should have a numeric data type."
msgstr "被除数输入张量。 应该有一个数字数据类型。"

#: megengine.functional.elemwise.floor_div:10 of
msgid "divisor input tensor. Must be compatible with :math:`x`` (see :ref:`broadcasting-rule` ). Should have a numeric data type."
msgstr "作为除数的输入张量。Layout 必须跟 :math:`x`` 兼容(具体参见 :ref:`broadcasting-rule` )。应该有一个数值数据类型。"

#: megengine.functional.elemwise.floor_div of
msgid "返回类型"
msgstr ""

#: megengine.functional.elemwise.floor_div:12 of
msgid ":py:class:`~megengine.tensor.Tensor`"
msgstr ""

#: megengine.functional.elemwise.floor_div of
msgid "返回"
msgstr ""

#: megengine.functional.elemwise.floor_div:13 of
msgid "A tensor containing the element-wise results. The returned tensor must have a data type determined by :ref:`dtype-promotion`."
msgstr "包含逐元素结果的张量。 返回的张量必须具有由 :ref:`dtype-promotion` 确定的数据类型。"

#: megengine.functional.elemwise.floor_div:16 of
msgid "Special cases"
msgstr "特别案例"

#: megengine.functional.elemwise.floor_div:18 of
msgid "For floating-point operands,"
msgstr "对于浮点操作数，"

#: megengine.functional.elemwise.floor_div:20 of
msgid "If either :math:`x` or :math:`y` is ``NaN``, the result is ``NaN``."
msgstr "如果 :math:`x` 或 :math:`y` 是 ``NaN``，则结果是 ``NaN``。"

#: megengine.functional.elemwise.floor_div:21 of
msgid "If :math:`x` is either ``+infinity`` or ``-infinity`` and :math:`y` is either ``+infinity`` or ``-infinity``, the result is ``NaN``."
msgstr "如果 :math:`x` 是 ``+infinity`` 或 ``-infinity`` 且 :math:`y` 是 ``+infinity`` 或 ``-infinity``，则结果为 ``NaN``。"

#: megengine.functional.elemwise.floor_div:22 of
msgid "If :math:`x` is either ``+0`` or ``-0`` and :math:`y` is either ``+0`` or ``-0``, the result is ``NaN``."
msgstr "如果 :math:`x` 是 ``+0`` 或 ``-0`` 并且 :math:`y` 是 ``+0`` 或 ``-0``，结果是 ``NaN``。"

#: megengine.functional.elemwise.floor_div:23 of
msgid "If :math:`x` is ``+0`` and :math:`y` is greater than ``0``, the result is ``+0``."
msgstr "如果 :math:`x` 是 ``+0`` 并且 :math:`y` 大于 ``0``，则结果为 ``+0``。"

#: megengine.functional.elemwise.floor_div:24 of
msgid "If :math:`x` is ``-0`` and :math:`y` is greater than ``0``, the result is ``-0``."
msgstr "如果 :math:`x` 是 ``-0`` 并且 :math:`y` 大于 ``0``，则结果为 ``-0``。"

#: megengine.functional.elemwise.floor_div:25 of
msgid "If :math:`x` is ``+0`` and :math:`y` is less than ``0``, the result is ``-0``."
msgstr "如果 :math:`x` 是 ``+0`` 并且 :math:`y` 小于 ``0``，则结果为 ``-0``。"

#: megengine.functional.elemwise.floor_div:26 of
msgid "If :math:`x` is ``-0`` and :math:`y` is less than ``0``, the result is ``+0``."
msgstr "如果 :math:`x` 是 ``-0`` 并且 :math:`y` 小于 ``0``，则结果为 ``+0``。"

#: megengine.functional.elemwise.floor_div:27 of
msgid "If :math:`x` is greater than ``0`` and :math:`y` is ``+0``, the result is ``+infinity``."
msgstr "如果 :math:`x` 大于 ``0`` 并且 :math:`y` 是 ``+0``，则结果为 ``+infinity``。"

#: megengine.functional.elemwise.floor_div:28 of
msgid "If :math:`x` is greater than ``0`` and :math:`y` is ``-0``, the result is ``-infinity``."
msgstr "如果 :math:`x` 大于 ``0`` 并且 :math:`y` 是 ``-0``，则结果为 ``-infinity``。"

#: megengine.functional.elemwise.floor_div:29 of
msgid "If :math:`x` is less than ``0`` and :math:`y` is ``+0``, the result is ``-infinity``."
msgstr "如果 :math:`x` 小于 ``0`` 并且 :math:`y` 是 ``+0``，则结果为 ``-infinity``。"

#: megengine.functional.elemwise.floor_div:30 of
msgid "If :math:`x` is less than ``0`` and :math:`y` is ``-0``, the result is ``+infinity``."
msgstr "如果 :math:`x` 小于 ``0`` 并且 :math:`y` 是 ``-0``，则结果为 ``+infinity``。"

#: megengine.functional.elemwise.floor_div:31 of
msgid "If :math:`x` is ``+infinity`` and :math:`y` is a positive (i.e., greater than ``0``) finite number, the result is ``+infinity``."
msgstr "如果 :math:`x` 是 ``+infinity`` 并且 :math:`y` 是一个正有限数 (即大于 ``0``)，则结果是 ``+infinity``。"

#: megengine.functional.elemwise.floor_div:32 of
msgid "If :math:`x` is ``+infinity`` and :math:`y` is a negative (i.e., less than ``0``) finite number, the result is ``-infinity``."
msgstr "如果 :math:`x` 是 ``+infinity`` 并且 :math:`y` 是一个负有限数 (即小于 ``0``)，则结果是 ``-infinity``。"

#: megengine.functional.elemwise.floor_div:33 of
msgid "If :math:`x` is ``-infinity`` and :math:`y` is a positive (i.e., greater than ``0``) finite number, the result is ``-infinity``."
msgstr "如果 :math:`x` 是 ``-infinity`` 并且 :math:`y` 是一个正有限数 (即大于 ``0``)，则结果是 ``-infinity``。"

#: megengine.functional.elemwise.floor_div:34 of
msgid "If :math:`x` is ``-infinity`` and :math:`y` is a negative (i.e., less than ``0``) finite number, the result is ``+infinity``."
msgstr "如果 :math:`x` 是 ``-infinity`` 并且 :math:`y` 是一个负有限数 (即小于 ``0``)，则结果是 ``+infinity``。"

#: megengine.functional.elemwise.floor_div:35 of
msgid "If :math:`x` is a positive (i.e., greater than ``0``) finite number and :math:`y` is ``+infinity``, the result is ``+0``."
msgstr "如果 :math:`x` 是一个正有限数 (即大于 ``0``) 并且 :math:`y` 是 ``+infinity``，则结果是 ``+0``。"

#: megengine.functional.elemwise.floor_div:36 of
msgid "If :math:`x` is a positive (i.e., greater than ``0``) finite number and :math:`y` is ``-infinity``, the result is ``-0``."
msgstr "如果 :math:`x` 是一个正有限数 (即大于 ``0``) 并且 :math:`y` 是 ``-infinity``，则结果是 ``-0``。"

#: megengine.functional.elemwise.floor_div:37 of
msgid "If :math:`x` is a negative (i.e., less than ``0``) finite number and :math:`y` is ``+infinity``, the result is ``-0``."
msgstr "如果 :math:`x` 是一个负有限数 (即小于 ``0``) 并且 :math:`y` 是 ``+infinity``，则结果是 ``-0``。"

#: megengine.functional.elemwise.floor_div:38 of
msgid "If :math:`x` is a negative (i.e., less than ``0``) finite number and :math:`y` is ``-infinity``, the result is ``+0``."
msgstr "如果 :math:`x` 是一个负有限数 (即小于 ``0``) 并且 :math:`y` 是 ``-infinity``，则结果是 ``+0``。"

#: megengine.functional.elemwise.floor_div:39 of
msgid "If :math:`x` and :math:`y` have the same mathematical sign and are both nonzero finite numbers, the result has a positive mathematical sign."
msgstr "如果 :math:`x` 和 :math:`y` 具有相同的数学符号并且都是非零有限数，则结果具有正的数学符号。"

#: megengine.functional.elemwise.floor_div:40 of
msgid "If :math:`x` and :math:`y` have different mathematical signs and are both nonzero finite numbers, the result has a negative mathematical sign."
msgstr "如果 :math:`x` 和 :math:`y` 具有不同的数学符号并且都是非零有限数，则结果具有负数学符号。"

#: megengine.functional.elemwise.floor_div:41 of
msgid "In the remaining cases, where neither ``-infinity``, ``+0``, ``-0``, nor ``NaN`` is involved, the quotient must be computed and rounded to the nearest representable value according to IEEE 754-2019 and a supported rounding mode. If the magnitude is too large to represent, the operation overflows and the result is an infinity of appropriate mathematical sign. If the magnitude is too small to represent, the operation underflows and the result is a zero of appropriate mathematical sign."
msgstr "在其余情况下，既不涉及``-infinity``、``+0``、``-0``，也不涉及 ``NaN``，则必须计算商并将其四舍五入为最接近的可表示值，符合 IEEE 754-2019 和支持的舍入模式。 如果量级太大而无法表示，则运算溢出，结果是适当数学符号的无穷大。 如果量级太小而无法表示，则运算下溢，并且结果是适当数学符号的零。"

#: megengine.functional.elemwise.floor_div:48 of
msgid "The ``//`` operator can be used as a shorthand for ``floor_div`` on tensors."
msgstr "``//`` 运算符可以用作张量上``floor_div`` 的简写。"

#: megengine.functional.elemwise.floor_div:52 of
msgid "In Python, ``//`` is the floor division operator and ``/`` is the true division operator. See :func:`~.functional.div`"
msgstr "在 Python 中，``//`` 是地板除法运算符，``/`` 是真正的除法运算符。 见 :func:`~.functional.div`"

#: megengine.functional.elemwise.floor_div:56 of
msgid "实际案例"
msgstr ""

#: megengine.functional.elemwise.floor_div:60 of
msgid "Element-wise floor division:"
msgstr ""

#: megengine.functional.elemwise.floor_div:68 of
msgid "Broadcasting:"
msgstr "广播："

#~ msgid "Element-wise `floor(x / y)`."
#~ msgstr "逐元素相除并下取整。"


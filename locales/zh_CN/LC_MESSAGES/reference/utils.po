msgid ""
msgstr ""
"Project-Id-Version: megengine-documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-08 21:51+0800\n"
"PO-Revision-Date: 2023-04-20 08:41\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Crowdin-Project: megengine-documentation\n"
"X-Crowdin-Project-ID: 582157\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /dev/locales/zh_CN/LC_MESSAGES/reference/utils.po\n"
"X-Crowdin-File-ID: 1163\n"

#: ../../source/reference/utils.rst:6
msgid "megengine.utils"
msgstr ""

#: ../../source/reference/utils.rst:12
msgid "Computing Graph Tools"
msgstr "计算图工具"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`get_dep_vars <megengine.utils.comp_graph_tools.get_dep_vars>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Returns :class:`.tensor.core.megbrain_graph.VarNode` of type ``var_type`` that input ``var`` depands on."
msgstr "返回 ``var`` 依赖的、类型是 ``var_type`` 的 :class:`.tensor.core.megbrain_graph.VarNode` 列表。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`get_owner_opr_inputs <megengine.utils.comp_graph_tools.get_owner_opr_inputs>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Gets the inputs of owner opr of a variable."
msgstr "获取拥有这个变量的算子的所有输入。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`get_owner_opr_type <megengine.utils.comp_graph_tools.get_owner_opr_type>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Gets the type of owner opr of a variable."
msgstr "获得拥有这个变量的算子类型。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`get_opr_type <megengine.utils.comp_graph_tools.get_opr_type>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Gets the type of an opr."
msgstr "获取一个算子的类型。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`graph_traversal <megengine.utils.comp_graph_tools.graph_traversal>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Helper function to traverse the computing graph and return enough useful information."
msgstr "一个用于遍历计算图并返回足够有用的信息的辅助函数。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`get_oprs_seq <megengine.utils.comp_graph_tools.get_oprs_seq>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Gets oprs in some topological order for a dumped model."
msgstr "获取一个导出模型的按照拓扑序排列的算子列表。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`replace_vars <megengine.utils.comp_graph_tools.replace_vars>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Replaces vars in the graph."
msgstr "替换图中的变量。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`replace_oprs <megengine.utils.comp_graph_tools.replace_oprs>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Replaces operators in the graph."
msgstr "替换图中的算子。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`set_priority_to_id <megengine.utils.comp_graph_tools.set_priority_to_id>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "For all oprs in the subgraph constructed by dest_vars, sets its priority to id if its original priority is zero."
msgstr "对于 `dest_vars` 构造的子图中的所有 opr，如果其原始优先级为零，则将其优先级设置为 `id`。"

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid ":obj:`GraphInference <megengine.utils.comp_graph_tools.GraphInference>`"
msgstr ""

#: ../../source/reference/utils.rst:27:<autosummary>:1
msgid "Loads a serialized computing graph as a GraphInference object which can be used to execute the computing graph."
msgstr "加载一个序列化后的计算图到 GraphInference 对象，后者可以用来执行计算图"

#: ../../source/reference/utils.rst:32
msgid "Hook"
msgstr "钩子函数"

#: ../../source/reference/utils.rst:39:<autosummary>:1
msgid ":obj:`HookHandler <megengine.utils.hook.HookHandler>`"
msgstr ""

#: ../../source/reference/utils.rst:44
msgid "Network"
msgstr "网络"

#: ../../source/reference/utils.rst:51:<autosummary>:1
msgid ":obj:`Network <megengine.utils.network.Network>`"
msgstr ""

#: ../../source/reference/utils.rst:52
msgid "Convert"
msgstr "转换"

#: ../../source/reference/utils.rst:59:<autosummary>:1
msgid ":obj:`as_varnode <megengine.utils.network.as_varnode>`"
msgstr ""

#: ../../source/reference/utils.rst:59:<autosummary>:1
msgid "convert a :class:`.VarNode` compatible object to :class:`.VarNode`."
msgstr "将一个 :class:`.VarNode` 兼容对象转换成 :class:`.VarNode`."

#: ../../source/reference/utils.rst:59:<autosummary>:1
msgid ":obj:`as_oprnode <megengine.utils.network.as_oprnode>`"
msgstr ""

#: ../../source/reference/utils.rst:59:<autosummary>:1
msgid "convert a :class:`.OpNode` compatible object to :class:`.OpNode`; it works like :func:`as_varnode`.i"
msgstr "将一个与 :class:`.OpNode` 兼容的对象转换到 to :class:`.OpNode` ；它类似于 :func:`as_varnode`.i"

#: ../../source/reference/utils.rst:61
msgid "NodeFilter"
msgstr ""

#: ../../source/reference/utils.rst:69:<autosummary>:1
msgid ":obj:`NodeFilter <megengine.utils.network.NodeFilter>`"
msgstr ""

#: ../../source/reference/utils.rst:69:<autosummary>:1
msgid "Filter on node iterator."
msgstr "对一个节点迭代器进行过滤"

#: ../../source/reference/utils.rst:71
msgid "Others"
msgstr "其他"

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid ":obj:`NodeFilterType <megengine.utils.network.NodeFilterType>`"
msgstr ""

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid "see :meth:`NodeFilter.type`"
msgstr "参考 :meth:`NodeFilter.type`."

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid ":obj:`NodeFilterNotType <megengine.utils.network.NodeFilterNotType>`"
msgstr ""

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid "see :meth:`NodeFilter.not_type`"
msgstr "参考 :meth:`NodeFilter.not_type`."

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid ":obj:`NodeFilterCheckType <megengine.utils.network.NodeFilterCheckType>`"
msgstr ""

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid "see :meth:`NodeFilter.check_type`"
msgstr " 参考 :meth:`NodeFilter.check_type`."

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid ":obj:`NodeFilterHasInput <megengine.utils.network.NodeFilterHasInput>`"
msgstr ""

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid "see :meth:`NodeFilter.has_input`"
msgstr "参考 :meth:`NodeFilter.has_input`"

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid ":obj:`NodeFilterName <megengine.utils.network.NodeFilterName>`"
msgstr ""

#: ../../source/reference/utils.rst:82:<autosummary>:1
msgid "see :meth:`NodeFilter.name`"
msgstr "参考 :meth:`NodeFilter.name`。"

#: ../../source/reference/utils.rst:86
msgid "Network Node"
msgstr "网络节点"

#: ../../source/reference/utils.rst:92:<autosummary>:1
msgid ":obj:`network_node <megengine.utils.network_node>`"
msgstr ""

#: ../../source/reference/utils.rst:97
msgid "Module Stats"
msgstr "模块统计数据"

#: ../../source/reference/utils.rst:103:<autosummary>:1
msgid ":obj:`module_stats <megengine.utils.module_stats.module_stats>`"
msgstr ""

#: ../../source/reference/utils.rst:103:<autosummary>:1
msgid "Calculate and print ``model``'s statistics by adding hook and record Module's inputs outputs size."
msgstr "通过插入钩子函数并记录模型的输入输出大小，计算和打印 ``model`` 的统计数据"

#: ../../source/reference/utils.rst:108
msgid "Profiler"
msgstr "性能分析器"

#: ../../source/reference/utils.rst:114:<autosummary>:1
msgid ":obj:`Profiler <megengine.utils.profiler.Profiler>`"
msgstr ""

#: ../../source/reference/utils.rst:114:<autosummary>:1
msgid "Profile graph execution in imperative mode."
msgstr "imperative模式下对图执行进行性能分析。"

#~ msgid "Adds dependent opnodes and varnodes of vars into network"
#~ msgstr ""

#~ msgid "方法"
#~ msgstr ""

#~ msgid ":obj:`Network.load <megengine.utils.network.Network.load>`"
#~ msgstr ""

#~ msgid "Loads a computing graph as a Network object."
#~ msgstr "加载模型并生成一个:class:`Network`对象。"

#~ msgid ":obj:`Network.dump <megengine.utils.network.Network.dump>`"
#~ msgstr ""

#~ msgid "Serializes graph to file."
#~ msgstr "把网络保存为模型文件。"

#~ msgid ":obj:`Network.make_const <megengine.utils.network.Network.make_const>`"
#~ msgstr ""

#~ msgid "Makes an ImmutableTensor OpNode to provide a parameter for the network."
#~ msgstr "创建一个 :class:`.ImmutableTensor` 对象，为网络提供计算参数。"

#~ msgid ""
#~ ":obj:`Network.make_input_node "
#~ "<megengine.utils.network.Network.make_input_node>`"
#~ msgstr ""

#~ msgid ""
#~ "Makes a Host2DeviceCopy OpNode to "
#~ "provide an input varnode for the "
#~ "network."
#~ msgstr "创建一个 :class:`.Host2DeviceCopy` 对象，为网络提供输入。"

#~ msgid ":obj:`Network.add_output <megengine.utils.network.Network.add_output>`"
#~ msgstr ""

#~ msgid "Adds vars into the network output node list"
#~ msgstr "把 :attr:`vars` 添加到网络的输出列表中。"

#~ msgid ""
#~ ":obj:`Network.remove_output "
#~ "<megengine.utils.network.Network.remove_output>`"
#~ msgstr ""

#~ msgid "Removes vars from the network output node list."
#~ msgstr "把:attr:`vars`从网络的输出列表中删除。"

#~ msgid ""
#~ ":obj:`Network.add_dep_oprs "
#~ "<megengine.utils.network.Network.add_dep_oprs>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.modify_opr_names "
#~ "<megengine.utils.network.Network.modify_opr_names>`"
#~ msgstr ""

#~ msgid ""
#~ "Modifies names of operators **inplace**; "
#~ "useful for merging loaded network into"
#~ " another network"
#~ msgstr "**原地**修改计算节点的名称，通常用于在把一个网络合并入另一个网络时。"

#~ msgid ""
#~ ":obj:`Network.reset_batch_size "
#~ "<megengine.utils.network.Network.reset_batch_size>`"
#~ msgstr ""

#~ msgid ""
#~ "Helper for reset batch size; first "
#~ "dimension of all data providers not "
#~ "in blacklist are assumed to be the"
#~ " batch size"
#~ msgstr "重置批大小，该操作会作用于网络中除attr:`blacklist`外的所有变量。"

#~ msgid ""
#~ ":obj:`Network.replace_vars "
#~ "<megengine.utils.network.Network.replace_vars>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.replace_oprs "
#~ "<megengine.utils.network.Network.replace_oprs>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.get_opr_by_type "
#~ "<megengine.utils.network.Network.get_opr_by_type>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.get_opr_by_name "
#~ "<megengine.utils.network.Network.get_opr_by_name>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.get_var_by_name "
#~ "<megengine.utils.network.Network.get_var_by_name>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.get_var_receive_oprs "
#~ "<megengine.utils.network.Network.get_var_receive_oprs>`"
#~ msgstr ""

#~ msgid "Gets all oprs which use var as input"
#~ msgstr "返回所有以 :attr:`var` 为输入的计算节点。"

#~ msgid ""
#~ ":obj:`Network.get_dep_oprs "
#~ "<megengine.utils.network.Network.get_dep_oprs>`"
#~ msgstr ""

#~ msgid "Gets dependent oprs of var"
#~ msgstr "返回 :attr:`var` 所依赖的计算节点的集合。"

#~ msgid "属性"
#~ msgstr ""

#~ msgid ":obj:`Network.opr_filter <megengine.utils.network.Network.opr_filter>`"
#~ msgstr ""

#~ msgid "Filter on all opnodes of the Network."
#~ msgstr "创建并返回一个包含网络中所有计算节点的筛选器 :class:`NodeFilter` 。"

#~ msgid ":obj:`Network.var_filter <megengine.utils.network.Network.var_filter>`"
#~ msgstr ""

#~ msgid "Filter on all varnode of the Network."
#~ msgstr "返回一个筛选器:class:`NodeFilter`，它会作用于网络中的所有变量。"

#~ msgid ""
#~ ":obj:`Network.params_filter "
#~ "<megengine.utils.network.Network.params_filter>`"
#~ msgstr ""

#~ msgid "Filter on all parameters (ImmutableTensor Opr) of the Network"
#~ msgstr "筛选出网络中的所有参数，也就是 :class:`ImmutableTensor` 类型的计算节点。"

#~ msgid ""
#~ ":obj:`Network.data_providers_filter "
#~ "<megengine.utils.network.Network.data_providers_filter>`"
#~ msgstr ""

#~ msgid "Filter on all input nodes (Host2DeviceCopy Opr) of the Network"
#~ msgstr "返回网络的输入。"

#~ msgid ":obj:`Network.dest_vars <megengine.utils.network.Network.dest_vars>`"
#~ msgstr ""

#~ msgid "Output varnodes of the Network."
#~ msgstr "返回网络的输出。"

#~ msgid ":obj:`Network.all_oprs <megengine.utils.network.Network.all_oprs>`"
#~ msgstr ""

#~ msgid ":obj:`Network.all_vars <megengine.utils.network.Network.all_vars>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.all_oprs_dict "
#~ "<megengine.utils.network.Network.all_oprs_dict>`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Network.all_vars_dict "
#~ "<megengine.utils.network.Network.all_vars_dict>`"
#~ msgstr ""

#~ msgid ":obj:`NodeFilter.type <megengine.utils.network.NodeFilter.type>`"
#~ msgstr ""

#~ msgid "filter by specific node type"
#~ msgstr "通过节点类型过滤。"

#~ msgid ""
#~ ":obj:`NodeFilter.check_type "
#~ "<megengine.utils.network.NodeFilter.check_type>`"
#~ msgstr ""

#~ msgid ""
#~ "assert that all oprs produced by "
#~ "this iterator are instances of certain"
#~ " type"
#~ msgstr "断言过滤器中的所有计算节点都属于给定类型。"

#~ msgid ""
#~ ":obj:`NodeFilter.not_type "
#~ "<megengine.utils.network.NodeFilter.not_type>`"
#~ msgstr ""

#~ msgid "remove oprs of specific type"
#~ msgstr "移除过滤器中所有指定类型的计算节点。"

#~ msgid ""
#~ ":obj:`NodeFilter.param_provider "
#~ "<megengine.utils.network.NodeFilter.param_provider>`"
#~ msgstr ""

#~ msgid ""
#~ "get :class:`.ParamProvider` oprs; shorthand "
#~ "for ``.type(ParamProvider)``"
#~ msgstr ""
#~ "返回过滤器中所有类型为 :class:`.ParamProvider` 的计算节点，此方法是 "
#~ "``.type(ParamProvider)`` 的简写。"

#~ msgid ""
#~ ":obj:`NodeFilter.data_provider "
#~ "<megengine.utils.network.NodeFilter.data_provider>`"
#~ msgstr ""

#~ msgid "get :class:`.DataProvider` oprs; shorthand for ``.type(DataProvider)``"
#~ msgstr "返回所有类型为 :class:`.DataProvider` 的计算节点，该方法是 ``.type(DataProvider)`` 的简写。"

#~ msgid ":obj:`NodeFilter.name <megengine.utils.network.NodeFilter.name>`"
#~ msgstr ""

#~ msgid "filter by node name"
#~ msgstr "通过节点名称过滤。"

#~ msgid ""
#~ ":obj:`NodeFilter.has_input "
#~ "<megengine.utils.network.NodeFilter.has_input>`"
#~ msgstr ""

#~ msgid "an opr is kept if it has given var as one of its inputs"
#~ msgstr "返回过滤器中所有以 :attr:`var` 为输入的计算节点。"

#~ msgid ":obj:`NodeFilter.as_list <megengine.utils.network.NodeFilter.as_list>`"
#~ msgstr ""

#~ msgid "consume this iterator and return its content as a list"
#~ msgstr "将过滤器中的内容以列表的形式表示并返回。"

#~ msgid ""
#~ ":obj:`NodeFilter.as_unique "
#~ "<megengine.utils.network.NodeFilter.as_unique>`"
#~ msgstr ""

#~ msgid "assert that this iterator yields only one node and return it"
#~ msgstr "断言过滤器中只包含单个元素，并返回该元素。"

#~ msgid ":obj:`NodeFilter.as_dict <megengine.utils.network.NodeFilter.as_dict>`"
#~ msgstr ""

#~ msgid ""
#~ "construct an ordered dict to map "
#~ "from node names to objects in this"
#~ " iterator"
#~ msgstr "遍历过滤器并返回一个有序字典，其键为节点名称，值为节点对象。"

#~ msgid ""
#~ ":obj:`NodeFilter.as_count "
#~ "<megengine.utils.network.NodeFilter.as_count>`"
#~ msgstr ""

#~ msgid "consume this iterator and get the number of elements"
#~ msgstr "返回迭代器的长度。"

#~ msgid ":obj:`NetworkNode <megengine.utils.network_node.NetworkNode>`"
#~ msgstr ""

#~ msgid ":obj:`VarNode <megengine.utils.network_node.VarNode>`"
#~ msgstr ""

#~ msgid ":obj:`OpNode <megengine.utils.network_node.OpNode>`"
#~ msgstr ""

#~ msgid "更多 Network Node 请查看源码。"
#~ msgstr ""

#~ msgid ":obj:`profile <megengine.utils.profiler.profile>`"
#~ msgstr ""

#~ msgid "alias of :class:`megengine.utils.profiler.Profiler`"
#~ msgstr ""

#~ msgid "默认常量"
#~ msgstr ""

#~ msgid "Utils 模块"
#~ msgstr "Utils 模块"



msgid ""
msgstr ""
"Project-Id-Version:  megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 13:50+0800\n"
"PO-Revision-Date: 2022-04-20 05:29+0000\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/pylite/global.rst:6
msgid "megenginelite.global_setting"
msgstr ""

#: megenginelite.global_setting.LiteGlobal:1 of
msgid "Some global config in lite"
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:1 of
msgid "Clear the physical and virtual address pair in MegEngine."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair
#: megenginelite.global_setting.LiteGlobal.dump_persistent_cache
#: megenginelite.global_setting.LiteGlobal.get_device_count
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr
#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key
#: megenginelite.global_setting.LiteGlobal.register_memory_pair
#: megenginelite.global_setting.LiteGlobal.set_loader_lib_path
#: megenginelite.global_setting.LiteGlobal.set_persistent_cache
#: megenginelite.global_setting.LiteGlobal.set_tensorrt_cache
#: megenginelite.global_setting.LiteGlobal.update_decryption_key of
msgid "参数"
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:3
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:3
#: megenginelite.global_setting.LiteGlobal.register_memory_pair:4 of
msgid "the virtual ptr to set to MegEngine."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:4
#: megenginelite.global_setting.LiteGlobal.register_memory_pair:5 of
msgid "the physical ptr to set to MegEngine."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:5
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:4
#: megenginelite.global_setting.LiteGlobal.register_memory_pair:7 of
msgid "the the device to set the pair memory."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:6
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:5 of
msgid "the backend to set the pair memory."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair
#: megenginelite.global_setting.LiteGlobal.get_device_count
#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr
#: megenginelite.global_setting.LiteGlobal.register_memory_pair of
msgid "返回"
msgstr ""

#: megenginelite.global_setting.LiteGlobal.clear_memory_pair:8 of
msgid "Whether the clear is operation successful."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.dump_persistent_cache:1 of
msgid ""
"Dump the PersistentCache policy cache to the specific file. If the "
"network is set to profile when forward, though this the algo policy will "
"dump to file."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.dump_persistent_cache:5 of
msgid "the cache file path to be dumped."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.dump_tensorrt_cache:1 of
msgid ""
"Dump the TensorRT cache to the file set in "
":py:func:`~.set_tensorrt_cache`."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.get_device_count:1 of
msgid "Get the number of device of the given device type in current context."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.get_device_count:3 of
msgid "the device type to be counted."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.get_device_count:5 of
msgid "the number of device."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:1 of
msgid "Get the physic address by the virtual address in MegEngine."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.lookup_physic_ptr:7 of
msgid "The physic address to lookup."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:1 of
msgid "Register a custom decryption method and key to lite"
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:3
#: megenginelite.global_setting.LiteGlobal.update_decryption_key:3 of
msgid ""
"the name of the decryption, which will act as the hash key to find the "
"decryption method."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:5 of
msgid ""
"the decryption function, which will decrypt the model with the registered"
" key, then return the decrypted model. See :py:func:`~.decryption_func` "
"for more details."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_decryption_and_key:8 of
msgid "the decryption key of the method."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:1 of
msgid ""
"Register the physical and virtual address pair to the MegEngine, some "
"device need the map from physical to virtual."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:6 of
msgid "the length of bytes to set pair memory."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:8 of
msgid "the backend to set the pair memory"
msgstr ""

#: megenginelite.global_setting.LiteGlobal.register_memory_pair:10 of
msgid "Whether the register operation is successful."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_loader_lib_path:1 of
msgid "Set the loader path to be used in lite."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_loader_lib_path:3 of
msgid "the file path which store the loader library."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_persistent_cache:1 of
msgid ""
"Set the algo policy cache file for CPU/CUDA, the algo policy cache is "
"produced by MegEngine fast-run."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_persistent_cache:4 of
msgid "the file path which store the cache."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_persistent_cache:5 of
msgid "always update the cache file when model runs."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_tensorrt_cache:1 of
msgid "Set the TensorRT engine cache path for serialized prebuilt ICudaEngine."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.set_tensorrt_cache:3 of
msgid "the cache file path to set"
msgstr ""

#: megenginelite.global_setting.LiteGlobal.try_coalesce_all_free_memory:1 of
msgid ""
"Try to coalesce all free memory in MegEngine. When call it MegEnine Lite "
"will try to free all the unused memory thus decrease the runtime memory "
"usage."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.update_decryption_key:1 of
msgid "Update decryption key of a custom decryption method."
msgstr ""

#: megenginelite.global_setting.LiteGlobal.update_decryption_key:5 of
msgid ""
"the decryption key of the method, if the length of key is zero, the key "
"will not be updated."
msgstr ""

#~ msgid "some global config in lite"
#~ msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2022, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-20 12:44+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/reference/pylite/tensor.rst:6
msgid "megenginelite.tensor"
msgstr ""

#: megenginelite.tensor.LiteTensor:1 of
msgid "the tensor to hold a block of data"
msgstr ""

#: megenginelite.tensor.LiteTensor.copy_from:1 of
msgid "copy memory form the src_tensor"
msgstr ""

#: megenginelite.tensor.LiteTensor.device_id:1 of
msgid "get device id of the tensor"
msgstr ""

#: megenginelite.tensor.LiteTensor.device_type:1 of
msgid "get device of the tensor"
msgstr ""

#: megenginelite.tensor.LiteTensor.fill_zero:1 of
msgid "fill the buffer memory with zero"
msgstr ""

#: megenginelite.tensor.LiteTensor.get_ctypes_memory:1 of
msgid "get the memory of the tensor, return c_void_p of the tensor memory"
msgstr ""

#: megenginelite.tensor.LiteTensor.get_data_by_share:1 of
msgid ""
"get the data in the tensor, add share the data with a new numpy, and "
"return the numpy arrray, be careful, the data in numpy is valid before "
"the tensor memory is write again, such as LiteNetwok forward next time."
msgstr ""

#: megenginelite.tensor.LiteTensor.is_continue:1 of
msgid "whether the tensor memory is continue"
msgstr ""

#: megenginelite.tensor.LiteTensor.is_pinned_host:1 of
msgid "whether the tensor is pinned tensor"
msgstr ""

#: megenginelite.tensor.LiteTensor.nbytes:1 of
msgid "get the length of the meomry in byte"
msgstr ""

#: megenginelite.tensor.LiteTensor.reshape:1 of
msgid ""
"reshape the tensor with data not change, only change the shape :param "
"shape: int arrary of dst_shape"
msgstr ""

#: megenginelite.tensor.LiteTensor.set_data_by_copy:1 of
msgid ""
"copy the data to the tensor param data: the data to copy to tensor, it "
"should be list, numpy.ndarraya or ctypes with length"
msgstr ""

#: megenginelite.tensor.LiteTensor.set_data_by_share:1 of
msgid ""
"share the data to the tensor param data: the data will shared to the "
"tensor, it should be a numpy.ndarray or ctypes data"
msgstr ""

#: megenginelite.tensor.LiteTensor.share_memory_with:1 of
msgid "share the same memory with the src_tensor, the self memory will be freed"
msgstr ""

#: megenginelite.tensor.LiteTensor.slice:1 of
msgid ""
"slice the tensor with gaven start, end, step :param start: silce begin "
"index of each dim :param end: silce end index of each dim :param step: "
"silce step of each dim"
msgstr ""

#: megenginelite.tensor.LiteTensor.to_numpy:1 of
msgid "get the buffer of the tensor"
msgstr ""

#: megenginelite.tensor.LiteTensor.update:1 of
msgid "update the member from C, this will auto used after slice, share"
msgstr ""

#: megenginelite.tensor.LiteLayout:1 of
msgid "the simple layout description"
msgstr ""

#: ../../docstring megenginelite.tensor.LiteLayout.data_type:1
#: megenginelite.tensor.LiteLayout.ndim:1 of
msgid "Structure/Union member"
msgstr ""


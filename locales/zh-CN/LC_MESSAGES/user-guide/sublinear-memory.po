# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2021, The MegEngine Open Source Team
# This file is distributed under the same license as the MegEngine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine 1.3.0.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 13:56+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/user-guide/sublinear-memory.rst:5
#: ../../source/user-guide/sublinear-memory.rst:8
msgid "亚线性内存优化"
msgstr ""

#: ../../source/user-guide/sublinear-memory.rst:10
msgid ""
"使用大 batch size 通常能够提升深度学习模型性能。然而，我们经常遇到的困境是有限的 GPU 内存资源无法满足大 batch size "
"模型训练。为了缓解这一问题， MegEngine 提供了亚线性内存 ( sublinear memory ) "
"优化技术用于降低网络训练的内存占用量。该技术基于 `gradient checkpointing `_ "
"算法，通过事先搜索最优的计算图节点作为前向传播和反向传播检查点（ checkpoints ），省去其它中间结果存储，大幅节约了内（显）存使用。"
msgstr ""

#: ../../source/user-guide/sublinear-memory.rst:12
msgid ""
"用户在编译静态图时使用 "
":class:`~.megengine.jit.sublinear_memory_config.SublinearMemoryConfig` 设置"
" :class:`~.megengine.jit.tracing.trace` 的参数 ``sublinear_memory_config`` "
"，就可以打开亚线性内存优化。"
msgstr ""

#: ../../source/user-guide/sublinear-memory.rst:24
msgid ""
"使用亚线性内存在编译计算图和训练模型时有少量的额外时间开销，但是可以大幅减少显存的开销。下面我们以 `ResNet50 `_ "
"为例，说明如何使用亚线性内存优化技术，突破显存瓶颈来训练更大batch size的模型。"
msgstr ""


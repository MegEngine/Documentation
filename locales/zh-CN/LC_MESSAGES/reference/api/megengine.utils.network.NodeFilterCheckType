msgid ""
msgstr ""
"Project-Id-Version: megengine\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-14 16:51+0800\n"
"PO-Revision-Date: 2021-04-14 12:00\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: megengine\n"
"X-Crowdin-Project-ID: 450980\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[MegEngine.Documentation] main/locales/zh-CN/LC_MESSAGES/reference/api/megengine.utils.network.NodeFilterCheckType.po\n"
"X-Crowdin-File-ID: 1830\n"
"Language: zh_CN\n"

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:2
msgid "megengine.utils.network.NodeFilterCheckType"
msgstr ""

#: megengine.utils.network.NodeFilterCheckType:1 of
msgid "Bases: :class:`megengine.utils.network.NodeFilterType`"
msgstr ""

#: megengine.utils.network.NodeFilterCheckType:1 of
msgid "see :meth:`NodeFilter.check_type`"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:11
msgid "Methods"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`__init__ <megengine.utils.network.NodeFilterCheckType.__init__>`\\ \\(node\\_iter\\, node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>
msgid "param node_iter"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "iterator to :class:`.NetworkNode`, or a"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`as_count <megengine.utils.network.NodeFilterCheckType.as_count>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "consume this iterator and get the number of elements"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`as_dict <megengine.utils.network.NodeFilterCheckType.as_dict>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "construct an ordered dict to map from node names to objects in this iterator"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`as_list <megengine.utils.network.NodeFilterCheckType.as_list>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "consume this iterator and return its content as a list"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`as_unique <megengine.utils.network.NodeFilterCheckType.as_unique>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "assert that this iterator yields only one node and return it"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`check_type <megengine.utils.network.NodeFilterCheckType.check_type>`\\ \\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "assert that all oprs produced by this iterator are instances of certain type"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`data_provider <megengine.utils.network.NodeFilterCheckType.data_provider>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "get :class:`.DataProvider` oprs; shorthand for ``.type(DataProvider)``"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`has_input <megengine.utils.network.NodeFilterCheckType.has_input>`\\ \\(var\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "an opr is kept if it has given var as one of its inputs"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`make_all_deps <megengine.utils.network.NodeFilterCheckType.make_all_deps>`\\ \\(\\*dest\\_vars\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "make a :class:`NodeFilter` that contains all deps of given vars"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`name <megengine.utils.network.NodeFilterCheckType.name>`\\ \\(pattern\\[\\, ignorecase\\]\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "filter by node name"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`not_type <megengine.utils.network.NodeFilterCheckType.not_type>`\\ \\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "remove oprs of specific type"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`param_provider <megengine.utils.network.NodeFilterCheckType.param_provider>`\\ \\(\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "get :class:`.ParamProvider` oprs; shorthand for ``.type(ParamProvider)``"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid ":obj:`type <megengine.utils.network.NodeFilterCheckType.type>`\\ \\(node\\_type\\)"
msgstr ""

#: ../../source/reference/api/megengine.utils.network.NodeFilterCheckType.rst:26:<autosummary>:1
msgid "filter by specific node type"
msgstr ""

#~ msgid "基类：:class:`megengine.utils.network.NodeFilterType`"
#~ msgstr ""


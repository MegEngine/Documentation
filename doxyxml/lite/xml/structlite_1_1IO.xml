<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structlite_1_1IO" kind="struct" language="C++" prot="public">
    <compoundname>lite::IO</compoundname>
    <includes refid="network_8h" local="no">network.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlite_1_1IO_1a506dfedf66a7d3b9632456e11b6c30b5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string lite::IO::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>the tensor name in the graph corresponding to the <ref refid="structlite_1_1IO" kindref="compound">IO</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="137" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1IO_1a75db6db920daa406fafa409b76eadc7e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::IO::is_host</definition>
        <argsstring></argsstring>
        <name>is_host</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to mark where the input tensor comes from and the output where copy to, if is_host is true, the input is from host and output copy to host, otherwise device. Sometimes The input is from device and output no need copy to host, default is true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="143" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1IO_1ab20c51078e0867258d06bdaec663c74c" prot="public" static="no" mutable="no">
        <type>LiteIOType</type>
        <definition>LiteIOType lite::IO::io_type</definition>
        <argsstring></argsstring>
        <name>io_type</name>
        <initializer>= LiteIOType::LITE_IO_VALUE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="structlite_1_1IO" kindref="compound">IO</ref> type, it can be SHAPE or VALUE, when SHAPE is set, the input or output tensor value is invaid, only shape will be set, default is VALUE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="147" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1IO_1a540288f55fd91d1a719a10df822ea531" prot="public" static="no" mutable="no">
        <type><ref refid="structlite_1_1Layout" kindref="compound">Layout</ref></type>
        <definition>Layout lite::IO::config_layout</definition>
        <argsstring></argsstring>
        <name>config_layout</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The layout of the config from user, if other layout is set before forward or get after forward by input tensor reset, this layout will by pass. if no other layout is set before forward, this layout will work. if this layout is no set, the model will forward with its origin layout. if in output, it will used to check. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="154" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>config the network input and output item </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="13">
        <label>lite::IO</label>
        <link refid="structlite_1_1IO"/>
        <childnode refid="14" relation="usage">
          <edgelabel>config_layout</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>lite::Layout</label>
        <link refid="structlite_1_1Layout"/>
      </node>
    </collaborationgraph>
    <location file="/data/github/MegEngine/lite/include/lite/network.h" line="135" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="135" bodyend="155"/>
    <listofallmembers>
      <member refid="structlite_1_1IO_1a540288f55fd91d1a719a10df822ea531" prot="public" virt="non-virtual"><scope>lite::IO</scope><name>config_layout</name></member>
      <member refid="structlite_1_1IO_1ab20c51078e0867258d06bdaec663c74c" prot="public" virt="non-virtual"><scope>lite::IO</scope><name>io_type</name></member>
      <member refid="structlite_1_1IO_1a75db6db920daa406fafa409b76eadc7e" prot="public" virt="non-virtual"><scope>lite::IO</scope><name>is_host</name></member>
      <member refid="structlite_1_1IO_1a506dfedf66a7d3b9632456e11b6c30b5" prot="public" virt="non-virtual"><scope>lite::IO</scope><name>name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

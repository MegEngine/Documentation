<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structlite_1_1Options" kind="struct" language="C++" prot="public">
    <compoundname>lite::Options</compoundname>
    <includes refid="network_8h" local="no">network.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlite_1_1Options_1a8478dd56a38369237236cf6ff8b369f7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::weight_preprocess</definition>
        <argsstring></argsstring>
        <name>weight_preprocess</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="89" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1ae7bc715797b8071e59a17d468c91bdcc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::fuse_preprocess</definition>
        <argsstring></argsstring>
        <name>fuse_preprocess</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="90" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a356a5816df78d8aaab5c9b07ffc0aff9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::fake_next_exec</definition>
        <argsstring></argsstring>
        <name>fake_next_exec</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="91" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a8c7ee685280aa0c87b3318e6707dcfff" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::var_sanity_check_first_run</definition>
        <argsstring></argsstring>
        <name>var_sanity_check_first_run</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="92" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1ad3741f70eeae2f671822adb1f8547621" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::const_shape</definition>
        <argsstring></argsstring>
        <name>const_shape</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="93" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1ab69bca722ad8d6a003c6fe46ee0bae66" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::force_dynamic_alloc</definition>
        <argsstring></argsstring>
        <name>force_dynamic_alloc</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="94" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a5312f07fb76c969b27e65b0344cb04d9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::force_output_dynamic_alloc</definition>
        <argsstring></argsstring>
        <name>force_output_dynamic_alloc</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="95" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a327b7edb418fa92bca3cd9de5f9f6717" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::force_output_use_user_specified_memory</definition>
        <argsstring></argsstring>
        <name>force_output_use_user_specified_memory</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="96" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1abb2ca47a8fb2b2efacf4dc3e1c488bd7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::no_profiling_on_shape_change</definition>
        <argsstring></argsstring>
        <name>no_profiling_on_shape_change</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="97" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1ad64bbe6c057a4203d6c142d871c7aa15" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lite::Options::jit_level</definition>
        <argsstring></argsstring>
        <name>jit_level</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="98" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1af5787ef7c3ba6c4b5820e4c8190632d2" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lite::Options::comp_node_seq_record_level</definition>
        <argsstring></argsstring>
        <name>comp_node_seq_record_level</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="99" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a460f2a81035b3c3e2f519a87d61b3509" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t lite::Options::graph_opt_level</definition>
        <argsstring></argsstring>
        <name>graph_opt_level</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="100" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a386c4b9864ca88644413592b4f234415" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t lite::Options::async_exec_level</definition>
        <argsstring></argsstring>
        <name>async_exec_level</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="101" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1ac18672f638dd288a2c56aa29627c3145" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nchw44</definition>
        <argsstring></argsstring>
        <name>enable_nchw44</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>layout transform options </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="104" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a6d1fdeb309b6b44d763108001256d014" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nchw44_dot</definition>
        <argsstring></argsstring>
        <name>enable_nchw44_dot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="105" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a9f4936e97940f7c01dc037393ad154d9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nchw88</definition>
        <argsstring></argsstring>
        <name>enable_nchw88</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="106" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a2360e3c67469db1b924b83bbc13a6b8f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nhwcd4</definition>
        <argsstring></argsstring>
        <name>enable_nhwcd4</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="107" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a4d0e5ce732780d5084381bd834ad0be0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nchw4</definition>
        <argsstring></argsstring>
        <name>enable_nchw4</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="108" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1a685c771af17771c759a0f05dd10fdbef" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nchw32</definition>
        <argsstring></argsstring>
        <name>enable_nchw32</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="109" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlite_1_1Options_1ad295730f6024abf318a35cd3cbfeaf0c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lite::Options::enable_nchw64</definition>
        <argsstring></argsstring>
        <name>enable_nchw64</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/data/github/MegEngine/lite/include/lite/network.h" line="110" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the inference options which will be translated to megenine </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weight_preprocess</parametername>
</parameternamelist>
<parameterdescription>
<para>is the option wich optimize the inferece performance with preprocess the const weights</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fuse_preprocess</parametername>
</parameternamelist>
<parameterdescription>
<para>fuse preprocess patten, like astype + pad_channel + dimshuffle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fake_next_exec</parametername>
</parameternamelist>
<parameterdescription>
<para>whether only to perform non-computing tasks (like memory allocation and queue initialization) for next exec. This would be reset to false when the graph is executed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var_sanity_check_first_run</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable var sanity check on the first run. Var sanity check is enabled on the first-time execution by default, and can be used to find some potential memory access errors in the operator implementation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_shape</parametername>
</parameternamelist>
<parameterdescription>
<para>This can be used to reduce memory usage since some static inference data structures can be omitted.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force_dynamic_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>force dynamic memory alloc for all vars</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force_output_dynamic_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>force dynamic memory alloc for output vars which are used as CallbackCaller input when call compile() function</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>no_profiling_on_shape_change</parametername>
</parameternamelist>
<parameterdescription>
<para>do not re-profile to select best impl algo when input shape changes (use previous algo)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jit_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Execute supported operators with JIT (support MLIR, NVRTC). Can only be used on Nvidia GPUs, this value indicates JIT level: 1 for basic elemwise opr; 2 for including reduce operator</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>record_level</parametername>
</parameternamelist>
<parameterdescription>
<para>flag optimize the inference performace with record the kernel tasks in first run, hereafter the inference all need to execute the recorded tasks. level = 0 means the normal inference, level = 1 means use record inference, level = 2 means record inference with free the extra memory</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>graph_opt_level</parametername>
</parameternamelist>
<parameterdescription>
<para>optimization level: 0: disable 1: level-1: inplace arith transformations during graph construction 2: level-2: level-1, plus global optimization before graph compiling 3: also enable JIT &lt;0: corresponding level, with result check for debug</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>async_exec_level</parametername>
</parameternamelist>
<parameterdescription>
<para>exec: dispatch on separate threads for different comp_node. 0: do not perform async dispatch 1: dispatch async if there are more than one comp node with limited queue mask 0b10: async if there are multiple comp nodes with mask 0b100: always async </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/data/github/MegEngine/lite/include/lite/network.h" line="88" column="1" bodyfile="/data/github/MegEngine/lite/include/lite/network.h" bodystart="88" bodyend="111"/>
    <listofallmembers>
      <member refid="structlite_1_1Options_1a386c4b9864ca88644413592b4f234415" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>async_exec_level</name></member>
      <member refid="structlite_1_1Options_1af5787ef7c3ba6c4b5820e4c8190632d2" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>comp_node_seq_record_level</name></member>
      <member refid="structlite_1_1Options_1ad3741f70eeae2f671822adb1f8547621" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>const_shape</name></member>
      <member refid="structlite_1_1Options_1a685c771af17771c759a0f05dd10fdbef" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nchw32</name></member>
      <member refid="structlite_1_1Options_1a4d0e5ce732780d5084381bd834ad0be0" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nchw4</name></member>
      <member refid="structlite_1_1Options_1ac18672f638dd288a2c56aa29627c3145" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nchw44</name></member>
      <member refid="structlite_1_1Options_1a6d1fdeb309b6b44d763108001256d014" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nchw44_dot</name></member>
      <member refid="structlite_1_1Options_1ad295730f6024abf318a35cd3cbfeaf0c" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nchw64</name></member>
      <member refid="structlite_1_1Options_1a9f4936e97940f7c01dc037393ad154d9" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nchw88</name></member>
      <member refid="structlite_1_1Options_1a2360e3c67469db1b924b83bbc13a6b8f" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>enable_nhwcd4</name></member>
      <member refid="structlite_1_1Options_1a356a5816df78d8aaab5c9b07ffc0aff9" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>fake_next_exec</name></member>
      <member refid="structlite_1_1Options_1ab69bca722ad8d6a003c6fe46ee0bae66" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>force_dynamic_alloc</name></member>
      <member refid="structlite_1_1Options_1a5312f07fb76c969b27e65b0344cb04d9" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>force_output_dynamic_alloc</name></member>
      <member refid="structlite_1_1Options_1a327b7edb418fa92bca3cd9de5f9f6717" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>force_output_use_user_specified_memory</name></member>
      <member refid="structlite_1_1Options_1ae7bc715797b8071e59a17d468c91bdcc" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>fuse_preprocess</name></member>
      <member refid="structlite_1_1Options_1a460f2a81035b3c3e2f519a87d61b3509" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>graph_opt_level</name></member>
      <member refid="structlite_1_1Options_1ad64bbe6c057a4203d6c142d871c7aa15" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>jit_level</name></member>
      <member refid="structlite_1_1Options_1abb2ca47a8fb2b2efacf4dc3e1c488bd7" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>no_profiling_on_shape_change</name></member>
      <member refid="structlite_1_1Options_1a8c7ee685280aa0c87b3318e6707dcfff" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>var_sanity_check_first_run</name></member>
      <member refid="structlite_1_1Options_1a8478dd56a38369237236cf6ff8b369f7" prot="public" virt="non-virtual"><scope>lite::Options</scope><name>weight_preprocess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

name: Deploy

on:
  push:
    branches:
      - main

jobs:
  Pipeline:
    name: Build and Deploy 
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repsitory
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 1
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Checkout theme repo
        uses: actions/checkout@v2
        with: 
          repository: MegEngine/pydata-sphinx-theme
          ref: dev
          fetch-depth: 1
          path: theme

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Cache Python packages
        id: cache-python
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}$-${{ hashFiles('requirements.txt') }}

      - name: Install MegEngine and Python dependencies
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install megengine -f https://megengine.org.cn/whl/mge.html

      - name: Install Pydata Sphinx theme
        run: python3 -m pip install ./theme

      - name: Install pandoc and other dependencies
        run: sudo apt install -y pandoc graphviz

      - name: Generate HTML files
        run: |
          make LANGUAGE="zh_CN" html --keep-going && mv build/html zh
          make LANGUAGE="en" html --keep-going && mv build/html en
         
      - name: Deploy on OSS
        run: |
          tar czf static.tgz zh en
          export GIT_HASH=$(git rev-parse --short HEAD) && echo $GIT_HASH
          wget http://gosspublic.alicdn.com/ossutil/1.7.1/ossutil64
          chmod 755 ossutil64
          ./ossutil64 config -e ${{ secrets.OSS_PROD_ENDPOINT }} -i ${{ secrets.OSS_PROD_ACCESS_KEY_ID }} -k ${{ secrets.OSS_PROD_ACCESS_KEY_SECRET }}
          ./ossutil64 mkdir oss://${{ secrets.OSS_PROD_BUCKET }}/documentation/commit-$GIT_HASH
          ./ossutil64 cp static.tgz oss://${{ secrets.OSS_PROD_BUCKET }}/documentation/commit-$GIT_HASH/static.tgz



 
 
